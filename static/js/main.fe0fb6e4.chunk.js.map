{"version":3,"sources":["auraStats.js","compos/NavBar.js","compos/MainPage.js","compos/Aura.js","compos/OutputBox.js","compos/pages/AscendancyPage.js","compos/pages/TreePage.js","compos/pages/ClusterPage.js","compos/pages/GearPage.js","compos/pages/gemLinkTabs/DisplayAura.js","compos/pages/gemLinkTabs/DisplayAuras.js","compos/pages/GemPage.js","App.js","index.js"],"names":["auraEffectCalc","value","auraPercent","auraMultiplier","Math","floor","printAddsEffect","effect","minToMax","auraEffect","min","max","printGainEffect","newValue","printPercentEffect","Aura","title","effectOfQuality","statPerQuality","numberEffects","effectOfAura","this","level","quality","altQuality","specificAuraEffect","generosityLevel","generosityType","generosityEffect","generosityAuraEffect","console","log","printEffect","tempArray","i","length","push","printAuraEffect","printQuality","printQualityEffect","auras","ANGER","HATRED","WRATH","HASTE","MALEVOLENCE","ZEALOTRY","PURITY_FIRE","PURITY_ICE","PURITY_LIGHTNING","PURITY_ELEMENTS","NavBar","e","page","target","props","changePage","className","onClick","handleChange","bind","Component","MainPage","content","pages","pageSelected","PropType","object","isRequired","Object","entries","map","aura","globalEffect","tempString","effects","stat","printEffects","globalAuraEffect","OutputBox","AscendancyPage","src","TreePage","ClusterPage","GearPage","DisplayAura","changeLevel","changeQuality","changeAltQuality","changeGenoType","changeGenoLevel","altQualityBonuses","toLowerCase","onChange","onChangeGenoType","defaultValue","onChangeGenoLevel","type","placeholder","onChangeLevel","onChangeQuality","onChangeAltQuality","altQualityThree","DisplayAuras","GemPage","genoIcon","require","default","App","state","ascendancy","mainPage","newLevel","auraKey","setState","newQuality","newAltQuality","newGenoLevel","newGenoType","pageNum","gemLinksPage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe0fb6e4.chunk.js","sourcesContent":["/**\r\n * Explination on how Auras are Structured.\r\n * \r\n * Each value of auras is the name of the aura in Capitals example Hatred -> HATRED\r\n * each auras has the following attributes \r\n * \r\n * title: its name\r\n * level: whatever level its at.\r\n * quality: whatever quality the aura is at.\r\n * altQuality: what alternative quality is selected (this should be between 0 and 2 usually)\r\n * specificAuraEffect: this is where the value of specific aura effect is stored (such as Hatred has #% increased Aura Effect)\r\n * \r\n * effectOfQuality: this is an array of Arrays, it containes whatever quality bonuses a given alt quality provides\r\n * statPerQuality: for a given index statPerQuality is the bonus per quality given for the same index of effectOfQuality\r\n * \r\n * numberEffects: this contains an array for for each state line an aura gives. if a state has to values (a min and max) they are also in an array themselves\r\n * Example: 'Adds 16 to 48 Lightning Damage to Attacks' AND '21% more Lightning Damage with spells' at Level 20.\r\n * will be stored as following an array of length 2(2 mods), index 0 will have the Adds X to Y .. \r\n * such that at level 20 index20 will be -> [..,[16, 48]] \r\n * while the 2nd effect will be at index 1, and index 20 of that array with [.., 21]\r\n * \r\n * effectOfAura: this is also an array that matches the array of NumberEffects it will have its given effects split into diffrent arrays\r\n * if some text is split by numbers that line will also be split in the array. \r\n * Example: Adds 16 to 48 Lightning Damage to Attacks -> ['Adds ', ' to ', Lightning Damage to Attacks']\r\n * \r\n * printEffect(auraEffect){}: takes in the globalAuraEffect and returns an Array with all Bonuses Given by an Aura.\r\n * \r\n * printQuality(auraEffect){}: takes in the GlobalAuraEffect and returns an Array with all the bonus given by the Auras Quality\r\n */\r\n\r\nvar auraEffectCalc = function(value, auraPercent){ \r\n    let auraMultiplier = ((auraPercent/100+1)); \r\n\r\n    return Math.floor(value * auraMultiplier);\r\n\r\n}\r\n\r\nvar printQualityEffect = function(effectOfQuality, statPerQuality, quality, auraEffect){\r\n\r\n    let tempArray = [];\r\n        if (effectOfQuality.length === 1)\r\n            tempArray.push(printPercentEffect(effectOfQuality, statPerQuality*quality, auraEffect));\r\n        \r\n        else if (effectOfQuality.length === 2)\r\n            \r\n            tempArray.push(printGainEffect(effectOfQuality, statPerQuality*quality, auraEffect));\r\n        \r\n        else if (effectOfQuality.length === 3)\r\n            tempArray.push(printAddsEffect(effectOfQuality, statPerQuality*quality, auraEffect));\r\n\r\n\r\n    return tempArray;\r\n}\r\n\r\nvar printAuraEffect = function(effectOfAura, numberEffects, level, auraEffect){\r\n\r\n    let tempArray = [];\r\n    for (let i = 0; i < effectOfAura.length; i++){\r\n        if (effectOfAura[i].length === 1)\r\n            tempArray.push(printPercentEffect(effectOfAura[i], numberEffects[i][level], auraEffect));\r\n        \r\n        else if (effectOfAura[i].length === 2)\r\n            \r\n            tempArray.push(printGainEffect(effectOfAura[i], numberEffects[i][level], auraEffect));\r\n        \r\n        else if (effectOfAura[i].length === 3)\r\n            tempArray.push(printAddsEffect(effectOfAura[i], numberEffects[i][level], auraEffect));\r\n\r\n    }\r\n\r\n    return tempArray;\r\n}\r\n/*\r\n    Prints Adds type Aura Effects\r\n\r\n    examples: effect -> Array [Adds, to, Something]\r\n              minToMax -> Array [min, max]\r\n              \r\n              returns calculated values based on aura effect in format\r\n\r\n              Adds min to max Something     \r\n*/\r\nvar printAddsEffect = function (effect, minToMax, auraEffect) {\r\n\r\n    //let auraEffectMultiplier = Math.floor((auraEffect/100)+1);\r\n\r\n    let min = auraEffectCalc(minToMax[0], auraEffect);\r\n    let max = auraEffectCalc(minToMax[1], auraEffect);\r\n\r\n    return effect[0] + min + effect[1] + max + effect[2];\r\n};\r\n\r\n//print Text Value Text Effects \r\n//Example: Gain X Physical as...\r\nvar printGainEffect = function (effect, value, auraEffect){\r\n\r\n    let newValue = auraEffectCalc(value, auraEffect);\r\n\r\n    return effect[0] + newValue + effect[1];\r\n}\r\n\r\n//print Value Text Effects\r\n//Example: X% more damage\r\nvar printPercentEffect = function(effect, value, auraEffect){\r\n\r\n    let newValue = auraEffectCalc(value, auraEffect);\r\n\r\n    return newValue + effect;\r\n}\r\n\r\nclass Aura {\r\n    constructor(title, effectOfQuality, statPerQuality, numberEffects, effectOfAura) {\r\n        this.title = title;\r\n        this.level = 0;\r\n        this.quality = 0;\r\n        this.altQuality = 0;\r\n        this.specificAuraEffect = 0;\r\n        this.effectOfQuality = effectOfQuality;\r\n        this.statPerQuality = statPerQuality;\r\n        this.numberEffects = numberEffects;\r\n        this.effectOfAura = effectOfAura;\r\n\r\n        this.generosityLevel = 0;\r\n        this.generosityType = 0;\r\n        \r\n        this.generosityEffect = [\r\n\r\n            [0],\r\n\r\n            [   0,\r\n                20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\r\n                30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\r\n                40, 41, 42, 43, 44, 45, 46, 47, 48, 49,\r\n                49, 50, 50, 51, 51, 52, 52, 53, 53, 54\r\n            ],\r\n            [   0,\r\n                41, 43, 45, 47, 49, 51, 53, 55, 57, 59,\r\n                60, 61, 62, 63, 64, 65, 66, 67, 68, 69,\r\n                69, 69, 69, 69, 69, 69, 69, 69, 69, 69,\r\n                69, 69, 69, 69, 69, 69, 69, 69, 69, 69\r\n            ],\r\n        ];\r\n\r\n        this.generosityAuraEffect = function(){\r\n\r\n            if(this.generosityType > 0 && this.generosityLevel > 0 ){\r\n                console.log(this.generosityEffect[this.generosityType][this.generosityLevel]);\r\n                return this.generosityEffect[this.generosityType][this.generosityLevel];\r\n            } else return 0;\r\n        }\r\n\r\n        this.printEffect = function (auraEffect) {\r\n            let tempArray = [];\r\n            if (this.level !== 0 && this.level <= 40) {\r\n                tempArray = printAuraEffect(this.effectOfAura, this.numberEffects, this.level, \r\n                                                (this.specificAuraEffect + auraEffect + this.generosityAuraEffect()));\r\n                return tempArray;\r\n\r\n            } else\r\n                return [''];\r\n\r\n        };\r\n\r\n        this.printQuality = function (auraEffect) {\r\n            let tempArray = [];\r\n            if (this.altQuality !== 0 && this.quality !== 0) {\r\n                tempArray = printQualityEffect(this.effectOfQuality[this.altQuality], \r\n                                                this.statPerQuality[this.altQuality],  this.quality, \r\n                                                (this.specificAuraEffect + auraEffect +  this.generosityAuraEffect()));\r\n                return tempArray;\r\n\r\n            } else\r\n                return [''];\r\n\r\n        };\r\n    }\r\n}\r\n\r\n/* Template for new Aura.\r\n\r\nAURA: new Aura(\r\n    //Title \r\n    '',\r\n    //AlternateQualityBonuses \r\n    [\r\n        [''],\r\n        [''],\r\n        [''],\r\n    ],\r\n    //Values Per Quality of the diffrent alt Qualities\r\n    [0, 0, 0],\r\n    //Values at each level for the aura\r\n    [\r\n        [],\r\n        [],\r\n    ],\r\n    //Aura Bonuses\r\n    [\r\n        [''],\r\n        [''],\r\n    ]\r\n),    \r\n\r\n*/\r\n\r\n\r\nvar auras = {\r\n  //-----------------------------------------------------\r\n  //Anger Stats\r\n    ANGER: new Aura(\r\n        //Title \r\n        \"Anger\",\r\n        //AlternateQualityBonuses \r\n        [\r\n            [\"\"],\r\n            [\"% increased Burning Damage\"],\r\n            [\"% increased Movement Speed\"],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 1, 0.25],\r\n        //Values at each level for the aura\r\n        [\r\n            [   [0, 0],\r\n                [16, 23],   [19, 27],   [22, 31],   [25, 36],   [29, 41],   [33, 47],   [37, 53],   [42, 60],   [48, 68],   [52, 74],\r\n                [56, 80],   [60, 86],   [65, 93],   [70, 100],  [76, 108],  [82, 116],  [88, 125],  [94, 135],  [101, 145], [109, 155],\r\n                [117, 167], [125, 179], [134, 191], [143, 205], [154, 219], [164, 235], [176, 251], [188, 268], [201, 287], [214, 306],\r\n                [221, 316], [229, 327], [236, 337], [244, 349], [252, 360], [260, 372], [269, 384], [278, 397], [287, 409], [296, 423]\r\n            ],\r\n            [   [0, 0], \r\n                [15, 21],   [17, 24],   [20, 28],   [23, 32],   [26, 37],   [30, 42],   [34, 48],   [39, 54],   [44, 61],   [47, 66], \r\n                [51, 72],   [55, 78],   [60, 84],   [64, 90],   [69, 97],   [75, 105],  [80, 113],  [86, 121],  [93, 130],  [99, 140], \r\n                [107, 150], [114, 161], [122, 172], [131, 184], [140, 197], [150, 211], [161, 226], [172, 241], [183, 258], [196, 275], \r\n                [202, 285], [209, 294], [216, 304], [223, 314], [230, 324], [238, 335], [246, 346], [254, 357], [262, 368], [270, 380]\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            [\"Adds \", \" to \", \" Fire Damage to Attacks\"],\r\n            [\"Adds \", \" to \", \" Fire Damage to Spells\"],\r\n        ]\r\n    ),\r\n\r\n  //-----------------------------------------------------\r\n  //Hatred\r\n    HATRED: new Aura(\r\n        //Title \r\n        'Hatred',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% increased Chill and Freeze Duration'],\r\n            ['% increased Movement Speed while on Chilled Ground'],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 1, 1],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0, \r\n                16, 16, 17, 17, 18, 18, 19, 19, 20, 20, \r\n                21, 21, 22, 22, 23, 23, 24, 24, 25, 25, \r\n                26, 26, 27, 27, 28, 28, 29, 29, 30, 30, \r\n                30, 31, 31, 31, 31, 32, 32, 32, 32, 33\r\n            ],\r\n            [   0,\r\n                14, 14, 14, 14, 15, 15, 15, 15, 16, 16,\r\n                16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\r\n                19, 19, 19, 19, 20, 20, 20, 20, 21, 21,\r\n                21, 21, 21, 21, 21, 22, 22, 22, 22, 22\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['Gain ', ' of Physical Damage as Extra Cold Damage'],\r\n            ['% more Cold Dmage'],\r\n        ]\r\n    ),\r\n  //-------------------------------\r\n  //Wrath\r\n    WRATH: new Aura(\r\n        //Title \r\n        'Wrath',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [' '],\r\n            [' '],\r\n            [' '],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0, 0], \r\n        //Values at each level for the aura\r\n        [\r\n            [   [0, 0], \r\n                [2, 37],   [3, 43],   [3, 50],   [4, 57],   [4, 66],   [5, 75],   [5, 85],   [6, 97],   [7, 109],  [7, 118], \r\n                [8, 128],  [9, 138],  [9, 149],  [10, 161], [11, 173], [12, 186], [13, 200], [13, 215], [14, 231], [16, 248], \r\n                [17, 267], [18, 286], [19, 306], [20, 328], [22, 351], [23, 375], [25, 401], [27, 429], [29, 458], [31, 490], \r\n                [32, 506], [33, 523], [34, 540], [35, 558], [36, 576], [37, 595], [38, 614], [40, 634], [41, 655], [42, 676]\r\n\r\n            ],\r\n            [   0, \r\n                15, 15, 15, 16, 16, 16, 17, 17, 17, 18, \r\n                18, 18, 19, 19, 19, 20, 20, 20, 21, 21, \r\n                21, 22, 22, 22, 23, 23, 23, 24, 24, 24, \r\n                24, 25, 25, 25, 25, 25, 25, 26, 26, 26\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['Adds ', ' to ', ' Lightning Damage to Attacks'],\r\n            ['% more Lightning Damage with spells'],\r\n        ]\r\n    ),\r\n\r\n    HASTE: new Aura(\r\n        //Title \r\n        'Haste',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% increased Totem Placement speed'],\r\n            ['% increased Projectile Speed'],\r\n            ['Buffs on You expire ', '% faster']\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0.5, 0.5, 1],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                9,  10, 10, 10, 11, 11, 11, 12, 12, 12, \r\n                13, 13, 13, 14, 14, 15, 15, 16, 16, 16,\r\n                17, 17, 17, 18, 18, 18, 19, 19, 19, 20, \r\n                20, 20, 20, 20, 20, 21, 21, 21, 21, 21\r\n            ],\r\n            [   0,\r\n                9,  9,  10, 10, 10, 11, 11, 11, 12, 12, \r\n                12, 13, 13, 13, 14, 14, 15, 15, 16, 16, \r\n                16, 17, 17, 17, 18, 18, 18, 19, 19, 19, \r\n                19, 20, 20, 20, 20, 20, 20, 21, 21, 21\r\n\r\n            ],\r\n            [   0,\r\n                4,  4,  4,  5,  5,  5,  6,  6,  6,  7,\r\n                7,  7,  8,  8,  8,  8,  8,  8,  8,  9,\r\n                9,  9,  10, 10, 10, 11, 11, 11, 12, 12,\r\n                12, 12, 12, 13, 13, 13, 13, 13, 13, 14\r\n            ]\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['% increased Attack Speed'],\r\n            ['% increased Cast Speed'],\r\n            ['% increased Movement Speed']\r\n        ]\r\n    ),\r\n\r\n    MALEVOLENCE: new Aura(\r\n        //Title \r\n        'Malevolence',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% increased Skill Effect Duration'],\r\n            ['% increased Damage with Ailments'],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0.5, 0.5],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                14, 14, 14, 15, 15, 15, 16, 16, 16, 17, \r\n                17, 17, 18, 18, 18, 19, 19, 19, 20, 20, \r\n                20, 21, 21, 21, 22, 22, 22, 23, 23, 23, \r\n                23, 24, 24, 24, 24, 24, 24, 25, 25, 25\r\n            ],\r\n            [   0,\r\n                10, 10, 11, 11, 12, 12, 13, 13, 14, 14, \r\n                15, 15, 16, 16, 17, 17, 18, 18, 19, 19, \r\n                20, 20, 21, 21, 22, 22, 23, 23, 24, 24, \r\n                24, 25, 25, 25, 25, 26, 26, 26, 26, 27\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['% more Damage over Time'],\r\n            ['% increased Skill Effect Duration'],\r\n        ]\r\n    ),  \r\n\r\n    ZEALOTRY: new Aura(\r\n        //Title \r\n        'Zealotry',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% to Critical Strike Multiplier'],\r\n            ['% of Life per second'],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0.25, 0.02],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                10, 10, 10, 11, 11, 11, 12, 12, 12, 12,\r\n                13, 13, 13, 14, 14, 14, 14, 15, 15, 15,\r\n                16, 16, 16, 16, 17, 17, 17, 18, 18, 18,\r\n                18, 18, 19, 19, 19, 19, 19, 19, 19, 20\r\n            ],\r\n            [   0,\r\n                20, 21, 22, 23, 24, 25, 26, 27, 28, 29, \r\n                30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \r\n                40, 41, 42, 43, 44, 45, 46, 47, 48, 49, \r\n                49, 50, 50, 51, 51, 52, 52, 53, 53, 54\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['% more Spell Damage'],\r\n            ['% increased Spell Critical Strike Chance'],\r\n        ]\r\n    ),\r\n\r\n    PURITY_FIRE: new Aura(\r\n        //Title \r\n        'Purity of Fire',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% chance to avoid being Ignited'],\r\n            ['Damage Penetrates ', '% Fire Resistance'],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 1, 0.2],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                0, 0, 0, 0, 1, 1, 1, 1, 1, 1,\r\n                2, 2, 2, 2, 2, 2, 3, 3, 3, 4,\r\n                4, 4, 5, 5, 5, 5, 5, 5, 5, 5,\r\n                5, 5, 5, 5, 5, 5, 5, 5, 5, 5\r\n            ],\r\n            [   0,\r\n                22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\r\n                32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\r\n                42, 43, 44, 45, 46, 47, 48, 49, 50, 51,\r\n                51, 52, 52, 53, 53, 54, 54, 55, 55, 56\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['+', '% to maximum Fire Resistance'],\r\n            ['+', '% to Fire Resistance'],\r\n        ]\r\n    ),    \r\n\r\n    PURITY_ICE: new Aura(\r\n        //Title \r\n        'Purity of Ice',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% chance to avoid being Frozen'],\r\n            ['Damage Penetrates ', '% Cold Resistance'],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 1, 0.2],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                0, 0, 0, 0, 1, 1, 1, 1, 1, 1,\r\n                2, 2, 2, 2, 2, 2, 3, 3, 3, 4,\r\n                4, 4, 5, 5, 5, 5, 5, 5, 5, 5,\r\n                5, 5, 5, 5, 5, 5, 5, 5, 5, 5\r\n            ],\r\n            [   0,\r\n                22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\r\n                32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\r\n                42, 43, 44, 45, 46, 47, 48, 49, 50, 51,\r\n                51, 52, 52, 53, 53, 54, 54, 55, 55, 56\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['+', '% to maximum Cold Resistance'],\r\n            ['+', '% to Cold Resistance'],\r\n        ]\r\n    ),\r\n    \r\n    PURITY_LIGHTNING: new Aura(\r\n        //Title \r\n        'Purity of Lightning',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% chance to avoid being Frozen'],\r\n            ['Damage Penetrates ', '% Lightning Resistance'],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 1, 0.2],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                0, 0, 0, 0, 1, 1, 1, 1, 1, 1,\r\n                2, 2, 2, 2, 2, 2, 3, 3, 3, 4,\r\n                4, 4, 5, 5, 5, 5, 5, 5, 5, 5,\r\n                5, 5, 5, 5, 5, 5, 5, 5, 5, 5\r\n            ],\r\n            [   0,\r\n                22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\r\n                32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\r\n                42, 43, 44, 45, 46, 47, 48, 49, 50, 51,\r\n                51, 52, 52, 53, 53, 54, 54, 55, 55, 56\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['+', '% to maximum Lightning Resistance'],\r\n            ['+', '% to Lightning Resistance'],\r\n        ]\r\n    ),\r\n\r\n    PURITY_ELEMENTS: new Aura(\r\n        //Title \r\n        'Purity of Elements',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% chance to avoid Elemental Ailments'],\r\n            ['Damage Penetrates ', '% Elemental Resistance'],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0.5, 0.2],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                12, 13, 14, 15, 15, 16, 17, 18, 19, 20,\r\n                20, 21, 22, 23, 24, 25, 25, 26, 27, 27,\r\n                28, 29, 29, 30, 31, 31, 32, 33, 33, 34,\r\n                34, 34, 34, 35, 35, 36, 36, 36, 36, 37\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['+', '% to all Elemental Resistances']\r\n        ]\r\n    ),\r\n\r\n};\r\n\r\nexport default auras;","import React, { Component } from 'react'\r\n\r\nexport default class NavBar extends Component {\r\n\r\n    handleChange(e){\r\n        const page = e.target.value;\r\n        console.log(page);\r\n        this.props.changePage(page);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='topnav'>\r\n                <div className='divider' /><div className='divider' />\r\n                <button onClick={ this.handleChange.bind(this) } value='0' >Ascendancy</button><div className='divider' />\r\n                <button onClick={ this.handleChange.bind(this) } value='1' >Tree</button><div className='divider' />\r\n                <button onClick={ this.handleChange.bind(this) } value='2' >Clusters</button><div className='divider' />\r\n                <button onClick={ this.handleChange.bind(this) } value='3' >Gear</button><div className='divider' />\r\n                <button onClick={ this.handleChange.bind(this) } value='4' >Gem Links</button>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport PropType from 'prop-types';\r\n\r\n\r\nexport default class MainPage extends Component {\r\n    render() {\r\n        \r\n        return (\r\n            <div className='page main'>\r\n                {this.props.content.pages[this.props.content.pageSelected]}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n//PropTypes\r\nMainPage.PropType = {\r\n    auras: PropType.object.isRequired,\r\n    content: PropType.object.isRequired\r\n}","import React, { Component } from 'react'\r\n\r\n\r\nexport default class Aura extends Component {\r\n    render() {\r\n        let printEffects = (aura, globalEffect) => {\r\n\r\n            let tempString = [];\r\n\r\n            if(aura.level > 0 && aura.level <= 40){\r\n\r\n                tempString.push(<li className='aura_name'>{'~ '+ aura.title +' ~'}</li>);\r\n                \r\n                let effects = aura.printEffect(globalEffect);\r\n\r\n                for(const effect of effects){\r\n                    tempString.push(<li className='aura_stat'>{effect}</li>);\r\n                }\r\n            }\r\n\r\n            if(aura.level > 0 && aura.quality > 0 && aura.statPerQuality[aura.altQuality] !== 0){\r\n                let effects = aura.printQuality(globalEffect);\r\n\r\n                for(const effect of effects){\r\n                    tempString.push(<li className='aura_stat'>{effect}</li>);\r\n                }\r\n            }\r\n\r\n            if (tempString.length !== 0){\r\n                tempString.push(<li className='aura_sepa'>{'~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~'}</li>);\r\n            }\r\n        \r\n            return tempString.map((stat) => (stat))\r\n        }\r\n\r\n        return Object.entries(this.props.auras).map((aura) => (\r\n                printEffects(aura[1], this.props.globalAuraEffect)\r\n        ));\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropType from 'prop-types';\r\nimport Aura from './Aura';\r\n\r\nexport default class OutputBox extends Component {\r\n    render() {\r\n\r\n    return (\r\n        <div className='page output'>\r\n            <div className='output_box'>\r\n                <div className='sticky'>\r\n                    <h1>Aura Stats output</h1>\r\n                    <p>\r\n                        - {this.props.globalAuraEffect}% increased Aura Effect (Global)<br />\r\n                        All Auras under are set to Level 21, alt quality 2 and 20%quality\r\n                    </p>\r\n                </div>\r\n                    <Aura auras={this.props.auras} globalAuraEffect={this.props.globalAuraEffect}/>\r\n            </div>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\n//PropTypes\r\nOutputBox.propTypes = {\r\n    globalAuraEffect: PropType.object.isRequired,\r\n    auras: PropType.object.isRequired\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class AscendancyPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className='mainapp ascendancy'>\r\n                <div className='asc_buttons'>\r\n                    <button onClick=''><img src='img/ascendancy/scion.png' /></button>\r\n                    <button onClick=''><img src='img/ascendancy/guardian.png' /></button>\r\n                    <button onClick=''><img src='img/ascendancy/necro.png' /></button>\r\n                    <hr />\r\n                </div>\r\n                <div className='asc_states'>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class TreePage extends Component {\r\n    render() {\r\n        return (\r\n            <div className='mainapp tree_page'>\r\n                <h1>Tree Page</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class ClusterPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className='mainapp cluster_page'>\r\n                <h1>Cluster Page</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class GearPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className='mainapp gear_page'>\r\n                <h1>Gear Page</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class DisplayAura extends Component {\r\n\r\n\r\n    //onChange methodes for every diffrent type of change that can occure to an aura\r\n    onChangeLevel(e){\r\n\r\n        this.props.aura[1].level = e.target.value;\r\n        this.props.changeLevel(e.target.value, this.props.aura[0]);\r\n    }\r\n\r\n    onChangeQuality(e){\r\n\r\n        this.props.aura[1].quality = e.target.value;\r\n        this.props.changeQuality(e.target.value, this.props.aura[0]);\r\n    }\r\n\r\n    onChangeAltQuality(e){\r\n        \r\n        this.props.aura[1].altQuality = e.target.value;\r\n        this.props.changeAltQuality(e.target.value, this.props.aura[0]);\r\n    }\r\n\r\n    onChangeGenoType(e){\r\n        this.props.aura[1].generosityType = e.target.value;\r\n        this.props.changeGenoType(e.target.value, this.props.aura[0]);\r\n    }\r\n\r\n    onChangeGenoLevel(e){\r\n        this.props.aura[1].generosityLevel = e.target.value;\r\n        this.props.changeGenoLevel(e.target.value, this.props.aura[0]);\r\n    }\r\n\r\n    //Not All Auras have 3 Alt Qualities\r\n    altQualityThree(altQualityBonuses){\r\n        \r\n        if(altQualityBonuses.length > 3)\r\n        return (<option value='3'>Phantas   </option>)\r\n        else return null;\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n\r\n        \r\n        return (\r\n\r\n            <div className='auras'>\r\n                <div className='generosity'>\r\n                    <img src={\"img/aura/\"+ this.props.aura[0].toLowerCase() +\".png\"}/>\r\n                    <span className='aura_title'>{this.props.aura[1].title}</span>\r\n                    \r\n                    <div className='inputs'>\r\n                    \r\n                    <img src='img/gem/generosity.png'/>\r\n                \r\n                        <select onChange={this.onChangeGenoType.bind(this)} defaultValue={this.props.aura[1].generosityType}>\r\n                            <option value='0'>None</option>\r\n                            <option value='1'>Generosity</option>\r\n                            <option value='2'>Awakened</option>\r\n                        </select>\r\n\r\n                        <input onChange={this.onChangeGenoLevel.bind(this)} defaultValue={this.props.aura[1].generosityLevel} type='number' min='0' max='40' placeholder='Lvl' />\r\n                    </div>\r\n                </div>\r\n                <div className='aura'>\r\n                <img src={\"img/gem/\"+ this.props.aura[0].toLowerCase() +\".png\" }/>\r\n\r\n                    \r\n                    <div className='inputs'>\r\n                        <span className='details'>Lvl: </span>\r\n                        <input onChange={this.onChangeLevel.bind(this)}     defaultValue={this.props.aura[1].level} type='number' min='0' max='40'  placeholder='Lvl' />\r\n                        <span className='details'>Qual: </span>\r\n                        <input onChange={this.onChangeQuality.bind(this)} defaultValue={this.props.aura[1].quality} type='number' min='0' max='100' placeholder='Qlty' />\r\n                        <span className='details'>Alt: </span>\r\n                        <select onChange={this.onChangeAltQuality.bind(this)} defaultValue={this.props.aura[1].altQuality}>\r\n                            <option value='0'>  None      </option>\r\n                            <option value='1'>  Diverg    </option>\r\n                            <option value='2'>  Anom      </option>\r\n                            {this.altQualityThree(this.props.aura[1].effectOfQuality)}\r\n                        </select>\r\n                    </div>\r\n\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport DisplayAura from './DisplayAura';\r\n/*\r\n    Logic for displaying grid of all auras\r\n*/\r\n\r\n\r\n\r\nexport default class DisplayAuras extends Component {\r\n\r\n    render() {\r\n        return Object.entries(this.props.auras).map((aura) => (\r\n            <DisplayAura \r\n                changeGenoType={this.props.changeGenoType}\r\n                changeGenoLevel={this.props.changeGenoLevel}\r\n                changeAltQuality={this.props.changeAltQuality} \r\n                changeQuality={this.props.changeQuality} \r\n                changeLevel={this.props.changeLevel} \r\n                aura={aura} \r\n            />\r\n         ));\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport DisplayAuras from './gemLinkTabs/DisplayAuras';\r\n\r\n\r\nvar genoIcon = 'generosity.png';\r\n\r\nexport default class GemPage extends Component {\r\n    onChangeGenoIcon(e){\r\n        console.log(this.genoIcon);\r\n        this.genoIcon = e.target.value;\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='mainapp gem_grps'> \r\n                        <h1>Auras</h1>\r\n                        <DisplayAuras \r\n                            changeGenoType={this.props.changeGenoType}\r\n                            changeGenoLevel={this.props.changeGenoLevel}\r\n                            changeAltQuality={this.props.changeAltQuality} \r\n                            changeQuality={this.props.changeQuality} \r\n                            changeLevel={this.props.changeLevel} \r\n                            auras={this.props.auras}\r\n                        />      \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n/* backup\r\n<DisplayAuras changeAltQuality={this.props.changeAltQuality} changeQuality={this.props.changeQuality} changeLevel={this.props.changeLevel} auras={this.props.auras}/>\r\n\r\n<div className='mainapp gem_page'> \r\n                <div className='gem_btn_grp'>\r\n                    <button onClick={ this.handleChange.bind(this) } value='0'>Helmet</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='1'>Body</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='2'>Gloves</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='3'>Boots</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='4'>Ring 1</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='5'>Ring 2</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='6'>Weapon 1</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='7'>Weapon 2</button><hr />\r\n                </div>\r\n                <div className='gem_grps'>\r\n                    {this.state.gemLinksPage.pages[this.state.gemLinksPage.pageSelected]}\r\n                </div>\r\n            </div>\r\n\r\n            */\r\n","import React, { Component } from 'react';\nimport NavBar from './compos/NavBar';\nimport MainPage from './compos/MainPage';\nimport OutputBox from './compos/OutputBox';\nimport AscendancyPage from './compos/pages/AscendancyPage';\nimport TreePage from './compos/pages/TreePage';\nimport ClusterPage from './compos/pages/ClusterPage';\nimport GearPage from './compos/pages/GearPage';\nimport GemPage from './compos/pages/GemPage';\n\nimport './styles.css';\nvar auras = require('./auraStats').default;\n\nclass App extends Component {\n  state = {\n    auras,\n\n    ascendancy: 0,\n\n    globalAuraEffect: 100,\n\n    mainPage: {\n      pageSelected: 0,\n      pages: [\n      <AscendancyPage auras={auras}/>,\n      \n      <TreePage auras={auras}/>,\n\n      <ClusterPage auras={auras}/>,\n\n      <GearPage auras={auras}/>,\n\n      <GemPage  changeGenoType={this.changeGenoType.bind(this)}\n                changeGenoLevel={this.changeGenoLevel.bind(this)}\n                changeAltQuality={this.changeAltQuality.bind(this)} \n                changeQuality={this.changeQuality.bind(this)} \n                changeLevel={this.changeLevel.bind(this)} \n                auras={auras}/>,\n      ]\n    }\n  }\n\n  changeLevel(newLevel, auraKey){\n    this.setState({ auras: { ...this.state.auras, [auraKey]: {...this.state.auras[auraKey], level: newLevel}} });\n  }\n\n  changeQuality(newQuality, auraKey){\n    this.setState({ auras: { ...this.state.auras, [auraKey]: {...this.state.auras[auraKey], quality: newQuality}} });\n  }\n\n  changeAltQuality(newAltQuality, auraKey){\n    this.setState({ auras: { ...this.state.auras, [auraKey]: {...this.state.auras[auraKey], altQuality: newAltQuality}} });\n  }\n\n  changeGenoLevel(newGenoLevel, auraKey){\n    this.setState({ auras: { ...this.state.auras, [auraKey]: {...this.state.auras[auraKey], generosityLevel: newGenoLevel}} });\n  }\n\n  changeGenoType(newGenoType, auraKey){\n    this.setState({ auras: { ...this.state.auras, [auraKey]: {...this.state.auras[auraKey], generosityType: newGenoType}} });\n  }\n\n  changePage(pageNum){\n     if (this.state.mainPage.pageSelected !== pageNum)\n      this.setState({ mainPage: { ...this.state.mainPage, pageSelected: pageNum} });\n   }\n   \n  render() {\n      console.log(this.state.auras);\n      return ( \n        <section className=\"app\">\n          <div className='header'>\n            <h1>Nuk's PoE Aura stats calculator</h1>\n            <p>- Under Construction</p>\n          </div>\n            <NavBar changePage={this.changePage.bind(this)} />\n          <div className=\"content\">\n            <MainPage gemLinksPage={this.state.gemLinksPage} content={this.state.mainPage} auras={this.state.auras} globalAuraEffect={this.state.globalAuraEffect} />\n            <OutputBox auras={this.state.auras} globalAuraEffect={this.state.globalAuraEffect} />\n          </div>\n        </section>\n    );\n  }\n}\n \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}