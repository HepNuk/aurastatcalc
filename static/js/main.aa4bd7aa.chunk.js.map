{"version":3,"sources":["auraStats.js","clusterJewels.js","treePassives.js","compos/NavBar.js","compos/Aura.js","compos/Specials.js","compos/OutputBox.js","compos/pages/AscendancyPage.js","compos/pages/treeTabs/DisplayTree.js","compos/pages/treeTabs/DisplayTrees.js","compos/pages/TreePage.js","compos/pages/clusterTabs/DisplayCluster.js","compos/pages/clusterTabs/DisplayClusters.js","compos/pages/ClusterPage.js","compos/pages/gearTabs/DisplayArmour.js","compos/pages/gearTabs/DisplayJewelry.js","compos/pages/gearTabs/DisplayWeapons.js","compos/pages/GearPage.js","compos/pages/gemLinkTabs/DisplayAura.js","compos/pages/gemLinkTabs/DisplayAuras.js","compos/pages/GemPage.js","App.js","index.js"],"names":["auraEffectCalc","value","auraPercent","auraMultiplier","Math","floor","printAddsEffect","effect","minToMax","auraEffect","min","max","printGainEffect","newValue","printPercentEffect","Aura","aurakey","title","effectOfQuality","statPerQuality","numberEffects","effectOfAura","special","this","key","level","quality","altQuality","specificAuraEffect","generosityLevel","generosityType","generosityEffect","generosityAuraEffect","printEffect","tempArray","i","length","push","printAuraEffect","printQuality","printQualityEffect","auras","clusterNodes","name","affects","amount","undefined","TreeCluster","notableAuraEffect","numSmallPassives","hasBorder","canHaveMOTM","notable","Notable","smallPassives","motm","clusterAuraEffect","sum","console","log","isActive","treePassives","NavBar","e","page","target","props","changePage","className","to","Component","map","aura","globalEffect","tempString","effects","stat","printEffects","globalAuraEffect","Specials","clusters","cluster","printSpecials","OutputBox","AscendancyPage","onClick","src","alt","DisplayTree","tree","onChangeMOTM","bind","checked","type","changeTreeNodes","toLowerCase","onChange","onChangeNotable","id","smallNode","indexOf","onChangeSmallNode","isMotmON","renderMOTM","DisplayTrees","trees","TreePage","changeTimeless","onChangeTimeless","defaultValue","timeless","DisplayCluster","changeClusterAmount","indexCluster","changeGlobalAuraEffect","calcClusterAuraEffect","onChangeCluster","DisplayClusters","forEach","auraKey","changeSpecificAuraEffect","calculateClusterAuraEffect","ClusterPage","DisplayArmour","DisplayJewelry","DisplayWeapons","style","width","marginRight","GearPage","state","twoHandWep","paddingLeft","lineHeight","height","twoHand","isDisabled","DisplayAura","changeLevel","indexAura","changeQuality","changeAltQuality","changeGenoType","changeGenoLevel","altQualityBonuses","onChangeGenoType","onChangeGenoLevel","placeholder","onChangeLevel","onChangeQuality","onChangeAltQuality","altQualityThree","DisplayAuras","GemPage","genoIcon","require","default","App","asc","selected","options","total","Number","gear","newLevel","auraIndex","newAuraState","setState","newQuality","newAltQuality","newGenoLevel","newGenoType","newSpecificEffect","findAuraIndex","newAuraEffect","newAmount","clusterIndex","newClusterStats","index","newTreeStats","path","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa4bd7aa.chunk.js","sourcesContent":["/**\r\n * Explination on how Auras are Structured.\r\n * \r\n * Each value of auras is the name of the aura in Capitals example Hatred -> HATRED\r\n * each auras has the following attributes \r\n * \r\n * title: its name\r\n * level: whatever level its at.\r\n * quality: whatever quality the aura is at.\r\n * altQuality: what alternative quality is selected (this should be between 0 and 2 usually)\r\n * specificAuraEffect: this is where the value of specific aura effect is stored (such as Hatred has #% increased Aura Effect)\r\n * \r\n * effectOfQuality: this is an array of Arrays, it containes whatever quality bonuses a given alt quality provides\r\n * statPerQuality: for a given index statPerQuality is the bonus per quality given for the same index of effectOfQuality\r\n * \r\n * numberEffects: this contains an array for for each state line an aura gives. if a state has to values (a min and max) they are also in an array themselves\r\n * Example: 'Adds 16 to 48 Lightning Damage to Attacks' AND '21% more Lightning Damage with spells' at Level 20.\r\n * will be stored as following an array of length 2(2 mods), index 0 will have the Adds X to Y .. \r\n * such that at level 20 index20 will be -> [..,[16, 48]] \r\n * while the 2nd effect will be at index 1, and index 20 of that array with [.., 21]\r\n * \r\n * effectOfAura: this is also an array that matches the array of NumberEffects it will have its given effects split into diffrent arrays\r\n * if some text is split by numbers that line will also be split in the array. \r\n * Example: Adds 16 to 48 Lightning Damage to Attacks -> ['Adds ', ' to ', Lightning Damage to Attacks']\r\n * \r\n * printEffect(auraEffect){}: takes in the globalAuraEffect and returns an Array with all Bonuses Given by an Aura.\r\n * \r\n * printQuality(auraEffect){}: takes in the GlobalAuraEffect and returns an Array with all the bonus given by the Auras Quality\r\n */\r\n\r\nvar auraEffectCalc = function(value, auraPercent){ \r\n    let auraMultiplier = ((auraPercent/100+1)); \r\n\r\n    return Math.floor(value * auraMultiplier);\r\n\r\n}\r\n\r\nvar printQualityEffect = function(effectOfQuality, statPerQuality, quality, auraEffect){\r\n\r\n    let tempArray = [];\r\n        if (effectOfQuality.length === 1)\r\n            tempArray.push(printPercentEffect(effectOfQuality, statPerQuality*quality, auraEffect));\r\n        \r\n        else if (effectOfQuality.length === 2)\r\n            \r\n            tempArray.push(printGainEffect(effectOfQuality, statPerQuality*quality, auraEffect));\r\n        \r\n        else if (effectOfQuality.length === 3)\r\n            tempArray.push(printAddsEffect(effectOfQuality, statPerQuality*quality, auraEffect));\r\n\r\n\r\n    return tempArray;\r\n}\r\n\r\nvar printAuraEffect = function(effectOfAura, numberEffects, level, auraEffect){\r\n\r\n    let tempArray = [];\r\n    for (let i = 0; i < effectOfAura.length; i++){\r\n        if (effectOfAura[i].length === 1)\r\n            tempArray.push(printPercentEffect(effectOfAura[i], numberEffects[i][level], auraEffect));\r\n        \r\n        else if (effectOfAura[i].length === 2)\r\n            \r\n            tempArray.push(printGainEffect(effectOfAura[i], numberEffects[i][level], auraEffect));\r\n        \r\n        else if (effectOfAura[i].length === 3)\r\n            tempArray.push(printAddsEffect(effectOfAura[i], numberEffects[i][level], auraEffect));\r\n\r\n    }\r\n\r\n    return tempArray;\r\n}\r\n/*\r\n    Prints Adds type Aura Effects\r\n\r\n    examples: effect -> Array [Adds, to, Something]\r\n              minToMax -> Array [min, max]\r\n              \r\n              returns calculated values based on aura effect in format\r\n\r\n              Adds min to max Something     \r\n*/\r\nvar printAddsEffect = function (effect, minToMax, auraEffect) {\r\n\r\n    //let auraEffectMultiplier = Math.floor((auraEffect/100)+1);\r\n\r\n    let min = auraEffectCalc(minToMax[0], auraEffect);\r\n    let max = auraEffectCalc(minToMax[1], auraEffect);\r\n\r\n    return effect[0] + min + effect[1] + max + effect[2];\r\n};\r\n\r\n//print Text Value Text Effects \r\n//Example: Gain X Physical as...\r\nvar printGainEffect = function (effect, value, auraEffect){\r\n\r\n    let newValue = auraEffectCalc(value, auraEffect);\r\n\r\n    return effect[0] + newValue + effect[1];\r\n}\r\n\r\n//print Value Text Effects\r\n//Example: X% more damage\r\nvar printPercentEffect = function(effect, value, auraEffect){\r\n\r\n    let newValue = auraEffectCalc(value, auraEffect);\r\n\r\n    return newValue + effect;\r\n}\r\n\r\nclass Aura {\r\n    constructor(aurakey, title, effectOfQuality, statPerQuality, numberEffects, effectOfAura, special) {\r\n        this.key = aurakey;\r\n        this.title = title;\r\n        this.level = 0;\r\n        this.quality = 0;\r\n        this.altQuality = 0;\r\n        this.specificAuraEffect = 0;\r\n        this.effectOfQuality = effectOfQuality;\r\n        this.statPerQuality = statPerQuality;\r\n        this.numberEffects = numberEffects;\r\n        this.effectOfAura = effectOfAura;\r\n        this.special = special | false;\r\n\r\n        this.generosityLevel = 0;\r\n        this.generosityType = 0;\r\n        \r\n        this.generosityEffect = [\r\n\r\n            [0],\r\n\r\n            [   0,\r\n                20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\r\n                30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\r\n                40, 41, 42, 43, 44, 45, 46, 47, 48, 49,\r\n                49, 50, 50, 51, 51, 52, 52, 53, 53, 54\r\n            ],\r\n            [   0,\r\n                41, 43, 45, 47, 49, 51, 53, 55, 57, 59,\r\n                60, 61, 62, 63, 64, 65, 66, 67, 68, 69,\r\n                69, 69, 69, 69, 69, 69, 69, 69, 69, 69,\r\n                69, 69, 69, 69, 69, 69, 69, 69, 69, 69\r\n            ],\r\n        ];\r\n\r\n        this.generosityAuraEffect = function(){\r\n\r\n            if(this.generosityType > 0 && this.generosityLevel > 0 ){\r\n                return this.generosityEffect[this.generosityType][this.generosityLevel];\r\n            } else return 0;\r\n        }\r\n\r\n        this.printEffect = function (auraEffect) {\r\n            let tempArray = [];\r\n            if (this.level !== 0 && this.level <= 40) {\r\n                tempArray = printAuraEffect(this.effectOfAura, this.numberEffects, this.level, \r\n                                                (this.specificAuraEffect + auraEffect + this.generosityAuraEffect()));\r\n                return tempArray;\r\n\r\n            } else\r\n                return [''];\r\n\r\n        };\r\n\r\n        this.printQuality = function (auraEffect) {\r\n            let tempArray = [];\r\n            if (this.altQuality !== 0 && this.quality !== 0) {\r\n                tempArray = printQualityEffect(this.effectOfQuality[this.altQuality], \r\n                                                this.statPerQuality[this.altQuality],  this.quality, \r\n                                                (this.specificAuraEffect + auraEffect +  this.generosityAuraEffect()));\r\n                return tempArray;\r\n\r\n            } else\r\n                return [''];\r\n\r\n        };\r\n    }\r\n}\r\n\r\n\r\nvar auras = [\r\n  //-----------------------------------------------------\r\n  //Anger Stats\r\n    new Aura(\r\n        'ANGER',\r\n        //Title \r\n        \"Anger\",\r\n        //AlternateQualityBonuses \r\n        [\r\n            [\"\"],\r\n            [\"% increased Burning Damage\"],\r\n            [\"% increased Movement Speed\"],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 1, 0.25],\r\n        //Values at each level for the aura\r\n        [\r\n            [   [0, 0],\r\n                [16, 23],   [19, 27],   [22, 31],   [25, 36],   [29, 41],   [33, 47],   [37, 53],   [42, 60],   [48, 68],   [52, 74],\r\n                [56, 80],   [60, 86],   [65, 93],   [70, 100],  [76, 108],  [82, 116],  [88, 125],  [94, 135],  [101, 145], [109, 155],\r\n                [117, 167], [125, 179], [134, 191], [143, 205], [154, 219], [164, 235], [176, 251], [188, 268], [201, 287], [214, 306],\r\n                [221, 316], [229, 327], [236, 337], [244, 349], [252, 360], [260, 372], [269, 384], [278, 397], [287, 409], [296, 423]\r\n            ],\r\n            [   [0, 0], \r\n                [15, 21],   [17, 24],   [20, 28],   [23, 32],   [26, 37],   [30, 42],   [34, 48],   [39, 54],   [44, 61],   [47, 66], \r\n                [51, 72],   [55, 78],   [60, 84],   [64, 90],   [69, 97],   [75, 105],  [80, 113],  [86, 121],  [93, 130],  [99, 140], \r\n                [107, 150], [114, 161], [122, 172], [131, 184], [140, 197], [150, 211], [161, 226], [172, 241], [183, 258], [196, 275], \r\n                [202, 285], [209, 294], [216, 304], [223, 314], [230, 324], [238, 335], [246, 346], [254, 357], [262, 368], [270, 380]\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            [\"Adds \", \" to \", \" Fire Damage to Attacks\"],\r\n            [\"Adds \", \" to \", \" Fire Damage to Spells\"],\r\n        ]\r\n    ),\r\n\r\n  //-----------------------------------------------------\r\n  //Hatred\r\n    new Aura(\r\n        'HATRED',\r\n        //Title \r\n        'Hatred',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% increased Chill and Freeze Duration'],\r\n            ['% increased Movement Speed while on Chilled Ground'],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 1, 1],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0, \r\n                16, 16, 17, 17, 18, 18, 19, 19, 20, 20, \r\n                21, 21, 22, 22, 23, 23, 24, 24, 25, 25, \r\n                26, 26, 27, 27, 28, 28, 29, 29, 30, 30, \r\n                30, 31, 31, 31, 31, 32, 32, 32, 32, 33\r\n            ],\r\n            [   0,\r\n                14, 14, 14, 14, 15, 15, 15, 15, 16, 16,\r\n                16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\r\n                19, 19, 19, 19, 20, 20, 20, 20, 21, 21,\r\n                21, 21, 21, 21, 21, 22, 22, 22, 22, 22\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['Gain ', ' of Physical Damage as Extra Cold Damage'],\r\n            ['% more Cold Dmage'],\r\n        ]\r\n    ),\r\n  //-------------------------------\r\n  //Wrath\r\n    new Aura(\r\n        'WRATH',\r\n        //Title \r\n        'Wrath',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [' '],\r\n            [' '],\r\n            [' '],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0, 0], \r\n        //Values at each level for the aura\r\n        [\r\n            [   [0, 0], \r\n                [2, 37],   [3, 43],   [3, 50],   [4, 57],   [4, 66],   [5, 75],   [5, 85],   [6, 97],   [7, 109],  [7, 118], \r\n                [8, 128],  [9, 138],  [9, 149],  [10, 161], [11, 173], [12, 186], [13, 200], [13, 215], [14, 231], [16, 248], \r\n                [17, 267], [18, 286], [19, 306], [20, 328], [22, 351], [23, 375], [25, 401], [27, 429], [29, 458], [31, 490], \r\n                [32, 506], [33, 523], [34, 540], [35, 558], [36, 576], [37, 595], [38, 614], [40, 634], [41, 655], [42, 676]\r\n\r\n            ],\r\n            [   0, \r\n                15, 15, 15, 16, 16, 16, 17, 17, 17, 18, \r\n                18, 18, 19, 19, 19, 20, 20, 20, 21, 21, \r\n                21, 22, 22, 22, 23, 23, 23, 24, 24, 24, \r\n                24, 25, 25, 25, 25, 25, 25, 26, 26, 26\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['Adds ', ' to ', ' Lightning Damage to Attacks'],\r\n            ['% more Lightning Damage with spells'],\r\n        ]\r\n    ),\r\n\r\n    new Aura(\r\n        'HASTE',\r\n        //Title \r\n        'Haste',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% increased Totem Placement speed'],\r\n            ['% increased Projectile Speed'],\r\n            ['Buffs on You expire ', '% faster']\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0.5, 0.5, 1],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                9,  10, 10, 10, 11, 11, 11, 12, 12, 12, \r\n                13, 13, 13, 14, 14, 15, 15, 16, 16, 16,\r\n                17, 17, 17, 18, 18, 18, 19, 19, 19, 20, \r\n                20, 20, 20, 20, 20, 21, 21, 21, 21, 21\r\n            ],\r\n            [   0,\r\n                9,  9,  10, 10, 10, 11, 11, 11, 12, 12, \r\n                12, 13, 13, 13, 14, 14, 15, 15, 16, 16, \r\n                16, 17, 17, 17, 18, 18, 18, 19, 19, 19, \r\n                19, 20, 20, 20, 20, 20, 20, 21, 21, 21\r\n\r\n            ],\r\n            [   0,\r\n                4,  4,  4,  5,  5,  5,  6,  6,  6,  7,\r\n                7,  7,  8,  8,  8,  8,  8,  8,  8,  9,\r\n                9,  9,  10, 10, 10, 11, 11, 11, 12, 12,\r\n                12, 12, 12, 13, 13, 13, 13, 13, 13, 14\r\n            ]\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['% increased Attack Speed'],\r\n            ['% increased Cast Speed'],\r\n            ['% increased Movement Speed']\r\n        ]\r\n    ),\r\n\r\n    new Aura(\r\n        'MALEVOLENCE',\r\n        //Title \r\n        'Malevolence',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% increased Skill Effect Duration'],\r\n            ['% increased Damage with Ailments'],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0.5, 0.5],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                14, 14, 14, 15, 15, 15, 16, 16, 16, 17, \r\n                17, 17, 18, 18, 18, 19, 19, 19, 20, 20, \r\n                20, 21, 21, 21, 22, 22, 22, 23, 23, 23, \r\n                23, 24, 24, 24, 24, 24, 24, 25, 25, 25\r\n            ],\r\n            [   0,\r\n                10, 10, 11, 11, 12, 12, 13, 13, 14, 14, \r\n                15, 15, 16, 16, 17, 17, 18, 18, 19, 19, \r\n                20, 20, 21, 21, 22, 22, 23, 23, 24, 24, \r\n                24, 25, 25, 25, 25, 26, 26, 26, 26, 27\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['% more Damage over Time'],\r\n            ['% increased Skill Effect Duration'],\r\n        ]\r\n    ),  \r\n\r\n    new Aura(\r\n        'ZEALOTRY',\r\n        //Title \r\n        'Zealotry',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% to Critical Strike Multiplier'],\r\n            ['% of Life per second'],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0.25, 0.02],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                10, 10, 10, 11, 11, 11, 12, 12, 12, 12,\r\n                13, 13, 13, 14, 14, 14, 14, 15, 15, 15,\r\n                16, 16, 16, 16, 17, 17, 17, 18, 18, 18,\r\n                18, 18, 19, 19, 19, 19, 19, 19, 19, 20\r\n            ],\r\n            [   0,\r\n                20, 21, 22, 23, 24, 25, 26, 27, 28, 29, \r\n                30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \r\n                40, 41, 42, 43, 44, 45, 46, 47, 48, 49, \r\n                49, 50, 50, 51, 51, 52, 52, 53, 53, 54\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['% more Spell Damage'],\r\n            ['% increased Spell Critical Strike Chance'],\r\n        ]\r\n    ),\r\n\r\n    new Aura(\r\n        'PURITY_FIRE',\r\n        //Title \r\n        'Purity of Fire',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% chance to avoid being Ignited'],\r\n            ['Damage Penetrates ', '% Fire Resistance'],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 1, 0.2],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                0, 0, 0, 0, 1, 1, 1, 1, 1, 1,\r\n                2, 2, 2, 2, 2, 2, 3, 3, 3, 4,\r\n                4, 4, 5, 5, 5, 5, 5, 5, 5, 5,\r\n                5, 5, 5, 5, 5, 5, 5, 5, 5, 5\r\n            ],\r\n            [   0,\r\n                22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\r\n                32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\r\n                42, 43, 44, 45, 46, 47, 48, 49, 50, 51,\r\n                51, 52, 52, 53, 53, 54, 54, 55, 55, 56\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['+', '% to maximum Fire Resistance'],\r\n            ['+', '% to Fire Resistance'],\r\n        ]\r\n    ),    \r\n\r\n    new Aura(\r\n        'PURITY_ICE',\r\n        //Title \r\n        'Purity of Ice',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% chance to avoid being Frozen'],\r\n            ['Damage Penetrates ', '% Cold Resistance'],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 1, 0.2],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                0, 0, 0, 0, 1, 1, 1, 1, 1, 1,\r\n                2, 2, 2, 2, 2, 2, 3, 3, 3, 4,\r\n                4, 4, 5, 5, 5, 5, 5, 5, 5, 5,\r\n                5, 5, 5, 5, 5, 5, 5, 5, 5, 5\r\n            ],\r\n            [   0,\r\n                22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\r\n                32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\r\n                42, 43, 44, 45, 46, 47, 48, 49, 50, 51,\r\n                51, 52, 52, 53, 53, 54, 54, 55, 55, 56\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['+', '% to maximum Cold Resistance'],\r\n            ['+', '% to Cold Resistance'],\r\n        ]\r\n    ),\r\n    \r\n    new Aura(\r\n        'PURITY_LIGHTNING',\r\n        //Title \r\n        'Purity of Lightning',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% chance to avoid being Frozen'],\r\n            ['Damage Penetrates ', '% Lightning Resistance'],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 1, 0.2],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                0, 0, 0, 0, 1, 1, 1, 1, 1, 1,\r\n                2, 2, 2, 2, 2, 2, 3, 3, 3, 4,\r\n                4, 4, 5, 5, 5, 5, 5, 5, 5, 5,\r\n                5, 5, 5, 5, 5, 5, 5, 5, 5, 5\r\n            ],\r\n            [   0,\r\n                22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\r\n                32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\r\n                42, 43, 44, 45, 46, 47, 48, 49, 50, 51,\r\n                51, 52, 52, 53, 53, 54, 54, 55, 55, 56\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['+', '% to maximum Lightning Resistance'],\r\n            ['+', '% to Lightning Resistance'],\r\n        ]\r\n    ),\r\n\r\n    new Aura(\r\n        'PURITY_ELEMENTS',\r\n        //Title \r\n        'Purity of Elements',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% chance to avoid Elemental Ailments'],\r\n            ['Damage Penetrates ', '% Elemental Resistance'],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0.5, 0.2],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                12, 13, 14, 15, 15, 16, 17, 18, 19, 20,\r\n                20, 21, 22, 23, 24, 25, 25, 26, 27, 27,\r\n                28, 29, 29, 30, 31, 31, 32, 33, 33, 34,\r\n                34, 34, 34, 35, 35, 36, 36, 36, 36, 37\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['+', '% to all Elemental Resistances']\r\n        ]\r\n    ),\r\n\r\n    new Aura(\r\n        //KEY\r\n        'WAR_BANNER',\r\n        //Title \r\n        'War Banner',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% increased Accuracy Rating'],\r\n            [''],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0.3, 0],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                15, 15, 15, 16, 16, 16, 17, 17, 17, 18, \r\n                18, 18, 19, 19, 19, 20, 20, 20, 21, 21, \r\n                21, 22, 22, 22, 23, 23, 23, 24, 24, 24, \r\n                25, 25, 25, 26, 26, 26, 27, 27, 27, 28\r\n            ]\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['% increased Accuracy Rating'],\r\n        ]\r\n    ),  \r\n\r\n    ];\r\n\r\n    \r\n/* Template for new Aura.\r\n\r\nnew Aura(\r\n    //Key\r\n    '',\r\n    //Title \r\n    '',\r\n    //AlternateQualityBonuses \r\n    [\r\n        [''],\r\n        [''],\r\n        [''],\r\n    ],\r\n    //Values Per Quality of the diffrent alt Qualities\r\n    [0, 0, 0],\r\n    //Values at each level for the aura\r\n    [\r\n        [\r\n\r\n        ],\r\n    ],\r\n    //Aura Bonuses\r\n    [\r\n        [''],\r\n    ]\r\n),    \r\n\r\n*/\r\n\r\n\r\nexport default auras;","var clusterNodes = [\r\n\r\n    { name: 'Small 6% Aura Effect', affects:[], auraEffect: 6, amount: 0},\r\n\r\n    { name: 'Small 7% Aura Effect', affects:[], auraEffect: 7, amount: 0 },\r\n\r\n    { name: 'Small 8% Aura Effect', affects:[], auraEffect: 8, amount: 0 },\r\n    \r\n    { name: 'First Among Equals', affects: [], auraEffect: 10, amount: 0 },\r\n\r\n    { name: 'Replenishing Presence', affects: [], special: true,auraEffect: 8, amount: 0, effect: function(){ return [`Regenerate ${this.amount}% of Life per second`] }},\r\n\r\n    { name: 'Vengeful Commander', affects: ['ANGER', 'HATRED', 'WRATH'], auraEffect: 20, amount: 0 },\r\n\r\n    { name: 'Stalwart Commander', affects: ['GRACE', 'DISCIPLINE', 'DETERMINATION'], auraEffect: 30, amount: 0 },\r\n\r\n    { name: 'Pure Commander', affects:[['PURITY_ICE', 'PURITY_FIRE', 'PURITY_LIGHTNING'], ['PURITY_ELEMENTS']], auraEffect: [10, 30], amount: 0},\r\n\r\n    { name: 'Precise Commander', affects: undefined, key:'PRECISE_COMMANDER', special: true, amount: 0, effect: function(){ return [`${25 * this.amount}% increased Critical Strike Chance`,`+${10 * this.amount}% to Critical Strike Multiplier`] }} \r\n]\r\nexport default clusterNodes;","class TreeCluster{\r\n    constructor(key, name, notableAuraEffect, numSmallPassives, hasBorder, canHaveMOTM){\r\n\r\n        let tempArray = []\r\n\r\n        for (let i = 0; i < numSmallPassives; i++){\r\n            tempArray.push([i, false]) //all small nodes grant 6% aura effect\r\n        }\r\n\r\n        this.key = key;\r\n        this.name = name;\r\n        this.notable = new Notable(name, notableAuraEffect, hasBorder);\r\n        this.smallPassives = tempArray;\r\n        this.motm = false;\r\n        this.canHaveMOTM = canHaveMOTM\r\n\r\n        this.clusterAuraEffect = function(){\r\n            \r\n            let sum = 0;\r\n\r\n            //console.log(this.smallPassives.length);\r\n            for (let i = 0; i < this.smallPassives.length; i++){\r\n                console.log(this.smallPassives[i][1], i);\r\n                if(this.smallPassives[i][1] === true){\r\n                    if(this.motm === true){\r\n                        sum += 9;\r\n                    } else sum += 6;\r\n                }\r\n            }\r\n            \r\n            if(this.notable.isActive && this.motm === false){\r\n                sum += this.notable.auraEffect;\r\n            }\r\n            console.log(sum)\r\n            return sum;\r\n        }\r\n    }\r\n}\r\n\r\nclass Notable{\r\n    constructor(name, auraEffect, hasBorder){\r\n        this.name = name;\r\n        this.auraEffect = auraEffect;\r\n        this.isActive = false;\r\n        this.hasBorder = hasBorder;\r\n    }\r\n}\r\n\r\n//new TreeCluster(key, name, notableAuraEffect, numSmallPassives)\r\nvar treePassives = [\r\n    new TreeCluster('SOVEREIGNTY',      'Sovereignty',           10, 1, true, false),\r\n    new TreeCluster('LEADERSHIP',       'Leadership',            6,  1, true, true),\r\n    new TreeCluster('INFLUENCE',        'Influence',             14, 1, true, true),\r\n    new TreeCluster('CHARISMA',         'Charisma',              6,  0, true, true),\r\n    new TreeCluster('CHAMPION_CAUSE',   'Champion of the Cause', 6,  1, true, true),\r\n    new TreeCluster('DEVOTION',         'Devotion',              3,  0, true, true),\r\n    new TreeCluster('POTENCY',          'Conqueror\\'s Pontency', 3,  0, false,false),\r\n]\r\n\r\nexport default treePassives;","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class NavBar extends Component {\r\n\r\n    handleChange(e){\r\n        const page = e.target.value;\r\n        console.log(page);\r\n        this.props.changePage(page);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='topnav'>\r\n                <div className='divider' /><div className='divider' />\r\n                    <Link to='/aurastatcalc/'>   \r\n                        <button>Home</button>\r\n                    </Link>\r\n                <div className='divider' />\r\n                    <Link to='/aurastatcalc/tree'>   \r\n                        <button>Tree</button>\r\n                    </Link>\r\n                <div className='divider' />\r\n                    <Link to='/aurastatcalc/clusters'>   \r\n                        <button>Clusters</button>\r\n                    </Link>\r\n                <div className='divider' />\r\n                    <Link to='/aurastatcalc/gear'>   \r\n                        <button>Gear</button>\r\n                    </Link>\r\n                <div className='divider' />\r\n                    <Link to='/aurastatcalc/auras'>\r\n                        <button>Auras</button>\r\n                    </Link>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\n\r\nexport default class Aura extends Component {\r\n    render() {\r\n\r\n        let printEffects = (aura, globalEffect) => {\r\n\r\n            let tempString = [];\r\n\r\n            if(aura.level > 0 && aura.level <= 40){\r\n\r\n                if(aura.specificAuraEffect > 0)\r\n                tempString.push(<li className='aura_name'>{`~ ${aura.title} (has +${aura.specificAuraEffect}% increased effect) ~`}</li>);\r\n                else \r\n                tempString.push(<li className='aura_name'>{`~ ${aura.title} ~`}</li>);\r\n                \r\n                let effects = aura.printEffect(globalEffect);\r\n\r\n                for(const effect of effects){\r\n                    tempString.push(<li className='aura_stat'>{effect}</li>);\r\n                }\r\n            }\r\n\r\n            if(aura.level > 0 && aura.quality > 0 && aura.statPerQuality[aura.altQuality] !== 0){\r\n                let effects = aura.printQuality(globalEffect);\r\n\r\n                for(const effect of effects){\r\n                    tempString.push(<li className='aura_stat'>{effect}</li>);\r\n                }\r\n            }\r\n\r\n            if (tempString.length !== 0){\r\n                tempString.push(<li key={aura.key} className='aura_sepa'>{'~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~'}</li>);\r\n            }\r\n        \r\n            return tempString.map((stat) => (stat))\r\n        }\r\n\r\n        return this.props.auras.map((aura) => (\r\n            printEffects(aura, this.props.globalAuraEffect)\r\n        ));\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Specials extends Component {\r\n    render() {\r\n\r\n        let printSpecials = (cluster) => {\r\n\r\n            let tempString = [];\r\n\r\n            if(cluster.special === true && cluster.amount > 0){\r\n                \r\n                tempString.push(<li className='aura_name'>{'~ '+ cluster.name +' ~'}</li>);\r\n                \r\n\r\n                let effects = cluster.effect();\r\n                \r\n                for(const effect of effects){\r\n                    tempString.push(<li className='aura_stat'>{effect}</li>);\r\n                }\r\n            }\r\n            if (tempString.length !== 0){\r\n                tempString.push(<li key={cluster.key} className='aura_sepa'>{'~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~'}</li>);\r\n            }\r\n\r\n            return tempString.map((stat) => (stat))\r\n        }\r\n\r\n        return this.props.clusters.map((cluster) => (\r\n            printSpecials(cluster)\r\n        ));\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropType from 'prop-types';\r\nimport Aura from './Aura';\r\nimport Specials from './Specials';\r\n\r\nexport default class OutputBox extends Component {\r\n    render() {\r\n\r\n    return (\r\n        <div className='page output'>\r\n            <div className='output_box'>\r\n                <div className='sticky'>\r\n                    <h1>Aura Stats output</h1>\r\n                    <p>\r\n                        - {this.props.globalAuraEffect}% increased Aura Effect (Global)<br />\r\n                    </p>\r\n                </div>\r\n                    <Aura auras={this.props.auras} globalAuraEffect={this.props.globalAuraEffect}/>\r\n                    <Specials clusters={this.props.clusters} />\r\n            </div>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\n//PropTypes\r\nOutputBox.propTypes = {\r\n    globalAuraEffect: PropType.object.isRequired,\r\n    auras: PropType.object.isRequired\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class AscendancyPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className='mainapp ascendancy'>\r\n                <div className='asc_buttons'>\r\n                    <button onClick=''><img src='img/ascendancy/scion.png'  alt='Scion'/></button>\r\n                    <button onClick=''><img src='img/ascendancy/guardian.png'  alt='Guardian'/></button>\r\n                    <button onClick=''><img src='img/ascendancy/necro.png'  alt='Nec'/></button>\r\n                    <hr />\r\n                </div>\r\n                <div className='asc_states'>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class DisplayTree extends Component {\r\n    \r\n    hasBorder(){\r\n\r\n        if(this.props.tree.notable.hasBorder){\r\n            return <img className='border' src='img/borders/notable_border.webp' />\r\n        } else return null;\r\n    }\r\n\r\n    isMotmON() {\r\n        if(this.props.tree.motm){\r\n            return 1.5;\r\n        } else return 1;\r\n    }\r\n\r\n    renderMOTM(){\r\n\r\n        if(this.props.tree.canHaveMOTM){\r\n            return( <label>\r\n                        <div className='motm'>\r\n                                <div className='motmpassives'>\r\n                                    <img src={`img/tree/motm.png`} />\r\n                                </div>\r\n                                <input onClick={this.onChangeMOTM.bind(this)} value={this.props.tree.key} checked={this.props.tree.motm} type='checkbox' />\r\n                                <span className='title'>Might of the Meek</span>\r\n                                \r\n                        </div>\r\n                </label>)\r\n        } else return null;\r\n    }\r\n\r\n    onChangeSmallNode(e){\r\n\r\n        this.props.tree.smallPassives[e.target.value][1] = !this.props.tree.smallPassives[e.target.value][1];\r\n        this.props.changeTreeNodes();\r\n    }\r\n\r\n    onChangeNotable(e){\r\n        //console.log(e.target.value)\r\n        this.props.tree.notable.isActive = !this.props.tree.notable.isActive;\r\n        this.props.changeTreeNodes();\r\n    }\r\n\r\n    onChangeMOTM(e){\r\n\r\n        this.props.tree.motm = !this.props.tree.motm;\r\n        this.props.changeTreeNodes();\r\n\r\n    }\r\n    \r\n\r\n\r\n    render() {\r\n        //console.log(this.props.tree)\r\n        return (\r\n            <div>\r\n                <div className='treeLabel'>\r\n\r\n                <label>\r\n                    <div className='notables'>\r\n                        <div className='notable'>\r\n                            {this.hasBorder()}\r\n                            <img src={`img/tree/${this.props.tree.key.toLowerCase()}.png`} />\r\n                        </div>\r\n                    \r\n                        <input onChange={this.onChangeNotable.bind(this)} value={this.props.tree.key} type='checkbox' id={this.props.tree.key.toLowerCase()} checked={this.props.tree.notable.isActive}/>\r\n                        <span className='title'>{this.props.tree.notable.name}</span>\r\n                    </div>\r\n                </label>\r\n\r\n                {this.props.tree.smallPassives.map((smallNode) => (\r\n                    <label>\r\n                        <div className='smalls'>\r\n                                <div className='smallpassives'>\r\n                                    <img className='border' src='img/borders/small_border.webp' />\r\n                                    <img src={`img/tree/effect.png`} />\r\n                                </div>\r\n                                <input value={this.props.tree.smallPassives.indexOf(smallNode)} onClick={this.onChangeSmallNode.bind(this)} checked={smallNode[1]} type='checkbox' />\r\n                                <span className='title'>{6 * this.isMotmON()}% aura effect</span>\r\n                        </div>\r\n                    </label>\r\n                ))}\r\n                \r\n                {this.renderMOTM()}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n/*\r\n<label>\r\n                <div className='smalls'>\r\n                        <div className='smallpassives'>\r\n                            <img className='border' src='img/borders/small_border.webp' />\r\n                            <img src={`img/tree/effect.png`} />\r\n                            \r\n                        </div>\r\n                        <input type='checkbox' />\r\n                        <span className='title'>6% aura effect</span>\r\n                </div>\r\n                </label>*/","import React, { Component } from 'react'\r\nimport DisplayTree from './DisplayTree';\r\n\r\n\r\nexport default class DisplayTrees extends Component {\r\n    render() {\r\n        return this.props.trees.map((tree) => (\r\n            <DisplayTree \r\n            changeTreeNodes={this.props.changeTreeNodes}\r\n                tree={tree}\r\n            />\r\n               \r\n         ));\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport DisplayTrees from './treeTabs/DisplayTrees';\r\n\r\nexport default class TreePage extends Component {\r\n\r\n    onChangeTimeless(e){\r\n        this.props.changeTimeless(e.target.value);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='mainapp gem_grps'>\r\n                <h1>Tree</h1>\r\n                <DisplayTrees \r\n                    changeTreeNodes={this.props.changeTreeNodes}\r\n                    trees={this.props.trees}\r\n                />\r\n                 \r\n                 <div className='treeLabel'>\r\n                    <label>\r\n                        <div className='notables'>\r\n                            <div className='notable'>\r\n                                \r\n                                <img src={`img/tree/timless.png`} />\r\n                            </div>\r\n                            <input onChange={this.onChangeTimeless.bind(this)} defaultValue={this.props.timeless} type='number' min='0' max='100'/>\r\n                            <span className='title'>%Aura Effect</span>\r\n                        </div>\r\n                    </label>\r\n                </div>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class DisplayCluster extends Component {\r\n\r\n    onChangeCluster(e){\r\n        this.props.cluster.amount = e.target.value;\r\n\r\n        this.props.changeClusterAmount(e.target.value, this.props.indexCluster)\r\n        this.props.changeGlobalAuraEffect(this.props.calcClusterAuraEffect(), 'cluster');\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='auras'>\r\n                <div className='aura'>\r\n\r\n                    <img src='img/cluster/notable.png' alt=''/>\r\n\r\n                    <span className='aura_title'>{this.props.cluster.name}</span>\r\n\r\n                    <div className='inputs'>\r\n                        <input onChange={this.onChangeCluster.bind(this)} defaultValue={this.props.cluster.amount} type='number' min='0' max='80'/>\r\n                    </div>\r\n                </div>          \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport DisplayCluster from './DisplayCluster';\r\n\r\n\r\n\r\nexport default class DisplayClusters extends Component {\r\n    \r\n    calculateClusterAuraEffect(){\r\n\r\n        let auraEffect = 0;\r\n\r\n        this.props.clusters.forEach((cluster) => {   \r\n            if(cluster.affects !== undefined){ \r\n                if( cluster.affects.length === 0 ){\r\n                    auraEffect += (cluster.auraEffect * cluster.amount);\r\n                \r\n                } else {\r\n                    if(cluster.auraEffect.length === undefined){\r\n                        \r\n                        cluster.affects.forEach((auraKey) => {\r\n                            this.props.changeSpecificAuraEffect((cluster.auraEffect * cluster.amount), auraKey)   \r\n                        })\r\n                    } else {\r\n                        \r\n                        for (let i = 0; i< cluster.affects.length; i++){\r\n\r\n                            cluster.affects[i].forEach((auraKey) => {\r\n                                this.props.changeSpecificAuraEffect((cluster.auraEffect[i] * cluster.amount), auraKey)   \r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n                \r\n            } \r\n        });\r\n\r\n        return auraEffect;\r\n    }\r\n    \r\n    render() {\r\n        return this.props.clusters.map((cluster) => (\r\n                <DisplayCluster\r\n\r\n                    changeClusterAmount={this.props.changeClusterAmount}\r\n                    calcClusterAuraEffect={this.calculateClusterAuraEffect.bind(this)}\r\n                    changeGlobalAuraEffect={this.props.changeGlobalAuraEffect}\r\n                    cluster={cluster}\r\n                    indexCluster={this.props.clusters.indexOf(cluster)}\r\n                />\r\n        ));\r\n    }\r\n}\r\n/* this.props.changeSpecificAuraEffect(cluster.auraEffect * cluster.amount, auraKey) */","import React, { Component } from 'react'\r\nimport DisplayClusters from './clusterTabs/DisplayClusters';\r\n\r\nexport default class ClusterPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className='mainapp gem_grps'>\r\n                <h1>Clusters</h1>\r\n                <DisplayClusters \r\n\r\n                    changeClusterAmount={this.props.changeClusterAmount}\r\n                    changeGlobalAuraEffect={this.props.changeGlobalAuraEffect}\r\n                    changeSpecificAuraEffect={this.props.changeSpecificAuraEffect}\r\n                    clusters={this.props.clusters}\r\n                />    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class DisplayArmour extends Component {\r\n    render() {\r\n        return (\r\n            <div className='armours'>\r\n                <div className='armour'>\r\n\r\n                    <img src='img/cluster/notable.png' alt=''/>\r\n\r\n                    <span className='title'>{this.props.name}</span>\r\n\r\n                    <div className='inputs'>\r\n                        <input type='number' min='0' max='80'/>\r\n                    </div>\r\n                </div>\r\n         </div>          \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class DisplayJewelry extends Component {\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='armours'>\r\n                <div className='armour'>\r\n\r\n                <img src='img/cluster/notable.png' alt=''/>\r\n\r\n                <span className='title'>{this.props.name}</span>\r\n                <br/>\r\n                <span className='title-corruption'>Corruption 1 :</span>\r\n                <div className='inputs'>\r\n                    <input type='number' />\r\n                    <select >\r\n                            <option value='0'>  None      </option>\r\n                            <option value='1'>  Anger    </option>\r\n                            <option value='2'>  ...      </option>\r\n                    </select>\r\n                </div>\r\n                    <br/>\r\n                <span className='title-corruption'>Corruption 2 :</span>\r\n                <div className='inputs'>\r\n                    <input type='number' />\r\n                    <select >\r\n                            <option value='0'>  None      </option>\r\n                            <option value='1'>  Anger    </option>\r\n                            <option value='2'>  ...      </option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n     </div>  \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class DisplayWeapons extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{width: '48.4%'}} className='armours'>\r\n                <div className='armour'>\r\n\r\n                    <img src='img/cluster/notable.png' alt=''/>\r\n\r\n                    <span className='title'>{this.props.name}</span>\r\n                    <br/>\r\n                    <span className='title-corruption'>Aura Effect mod on Weapon</span>\r\n                    <div className='inputs'>\r\n                        <input type='number' />\r\n                        <select >\r\n                                <option value='0'>  None      </option>\r\n                                <option value='1'>  Anger    </option>\r\n                                <option value='2'>  ...      </option>\r\n                        </select>\r\n                    </div>\r\n                        <br/>\r\n                    <label>\r\n                        <span className='title-corruption'>{`Auras from your skills grant ${2}% increased Damage to you and nearby allies`}</span>\r\n                        <div className='inputs'>\r\n                            <input style={{marginRight: '10px'}}type='checkbox' />\r\n                        </div>\r\n                    </label>\r\n                </div>\r\n            </div>   \r\n        )\r\n    }\r\n}\r\n\r\n//style={{width: '48.4%'}}","import React, { Component } from 'react'\r\nimport DisplayArmour from './gearTabs/DisplayArmour';\r\nimport DisplayJewelry from './gearTabs/DisplayJewelry';\r\nimport DisplayWeapons from './gearTabs/DisplayWeapons';\r\n\r\n\r\nexport default class GearPage extends Component {\r\n\r\n    state ={\r\n        twoHandWep: false\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='mainapp gem_grps'>\r\n                <h1>Aura effect from gear</h1>\r\n                \r\n                <div className='armour_grps'>\r\n                    <hr />\r\n                    <h2>Armours</h2>\r\n                    <DisplayArmour name='Helmet' />\r\n                    <DisplayArmour name='Body Armour' />\r\n                    <DisplayArmour name='Gloves' />\r\n                    <DisplayArmour name='Boots' />\r\n                </div>\r\n                <div className='armour_grps'>\r\n                    <hr />\r\n                    <h2>Jewelry</h2>\r\n                    <DisplayJewelry name='Amulet' />\r\n                    <DisplayJewelry name='Ring 1' />\r\n                    <DisplayJewelry name='Ring 2' />\r\n                    <DisplayJewelry name='Belt' /> \r\n                </div>\r\n                <br />\r\n                <div className='armour_grps'>\r\n                    <hr />\r\n                    <h2>Weapons</h2> \r\n                    <h3><label style={{ paddingLeft: '5px', lineHeight: '35px', height: '35px', width: '180px'}} className='armours'>\r\n                        Two-Hand Weapon <input type='checkbox' />\r\n                    </label></h3><br />\r\n                    <DisplayWeapons twoHand='notice here that two hand is active' name='Weapon 1' />\r\n                    <DisplayWeapons isDisabled='send disabled if two hand is active' name='Weapon 2' />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class DisplayAura extends Component {\r\n\r\n\r\n    //onChange methodes for every diffrent type of change that can occure to an aura\r\n    onChangeLevel(e){\r\n\r\n        this.props.aura.level = e.target.value;\r\n        this.props.changeLevel(e.target.value, this.props.indexAura);\r\n    }\r\n\r\n    onChangeQuality(e){\r\n\r\n        this.props.aura.quality = e.target.value;\r\n        this.props.changeQuality(e.target.value, this.props.indexAura);\r\n    }\r\n\r\n    onChangeAltQuality(e){\r\n        \r\n        this.props.aura.altQuality = e.target.value;\r\n        this.props.changeAltQuality(e.target.value, this.props.indexAura);\r\n    }\r\n\r\n    onChangeGenoType(e){\r\n        this.props.aura.generosityType = e.target.value;\r\n        this.props.changeGenoType(e.target.value, this.props.indexAura);\r\n    }\r\n\r\n    onChangeGenoLevel(e){\r\n        this.props.aura.generosityLevel = e.target.value;\r\n        this.props.changeGenoLevel(e.target.value, this.props.indexAura);\r\n    }\r\n\r\n    //Not All Auras have 3 Alt Qualities\r\n    altQualityThree(altQualityBonuses){\r\n        \r\n        if(altQualityBonuses.length > 3)\r\n        return (<option value='3'>Phantas   </option>)\r\n        else return null;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <div className='auras'>\r\n                <div className='generosity'>\r\n                    <img src={\"img/aura/\"+ this.props.aura.key.toLowerCase() +\".png\"} alt=' '/>\r\n                    <span className='aura_title'>{this.props.aura.title}</span>\r\n                    \r\n                    <div className='inputs'>\r\n                    \r\n                    <img src='img/gem/generosity.png' alt='G'/>\r\n                \r\n                        <select onChange={this.onChangeGenoType.bind(this)} defaultValue={this.props.aura.generosityType}>\r\n                            <option value='0'>None</option>\r\n                            <option value='1'>Generosity</option>\r\n                            <option value='2'>Awakened</option>\r\n                        </select>\r\n\r\n                        <input onChange={this.onChangeGenoLevel.bind(this)} defaultValue={this.props.aura.generosityLevel} type='number' min='0' max='40' placeholder='Lvl' />\r\n                    </div>\r\n                </div>\r\n                <div className='aura'>\r\n                <img src={\"img/gem/\"+ this.props.aura.key.toLowerCase() +\".png\" }  alt=' '/>\r\n\r\n                    \r\n                    <div className='inputs'>\r\n                        <span className='details'>Lvl: </span>\r\n                        <input onChange={this.onChangeLevel.bind(this)}     defaultValue={this.props.aura.level} type='number' min='0' max='40'  placeholder='Lvl' />\r\n                        <span className='details'>Qual: </span>\r\n                        <input onChange={this.onChangeQuality.bind(this)} defaultValue={this.props.aura.quality} type='number' min='0' max='100' placeholder='Qlty' />\r\n                        <span className='details'>Alt: </span>\r\n                        <select onChange={this.onChangeAltQuality.bind(this)} defaultValue={this.props.aura.altQuality}>\r\n                            <option value='0'>  None      </option>\r\n                            <option value='1'>  Diverg    </option>\r\n                            <option value='2'>  Anom      </option>\r\n                            {this.altQualityThree(this.props.aura.effectOfQuality)}\r\n                        </select>\r\n                    </div>\r\n\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport DisplayAura from './DisplayAura';\r\n/*\r\n    Logic for displaying grid of all auras\r\n*/\r\n\r\n\r\n\r\nexport default class DisplayAuras extends Component {\r\n    \r\n    render() {\r\n        return this.props.auras.map((aura) => (\r\n            <DisplayAura \r\n\r\n                changeGenoType={this.props.changeGenoType}\r\n                changeGenoLevel={this.props.changeGenoLevel}\r\n                changeAltQuality={this.props.changeAltQuality} \r\n                changeQuality={this.props.changeQuality} \r\n                changeLevel={this.props.changeLevel} \r\n                aura={aura}\r\n                indexAura={this.props.auras.indexOf(aura)}\r\n            />\r\n         ));\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport DisplayAuras from './gemLinkTabs/DisplayAuras';\r\n\r\nexport default class GemPage extends Component {\r\n    onChangeGenoIcon(e){\r\n        console.log(this.genoIcon);\r\n        this.genoIcon = e.target.value;\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='mainapp gem_grps'> \r\n                        <h1>Auras</h1>\r\n                        <DisplayAuras \r\n                            changeGenoType={this.props.changeGenoType}\r\n                            changeGenoLevel={this.props.changeGenoLevel}\r\n                            changeAltQuality={this.props.changeAltQuality} \r\n                            changeQuality={this.props.changeQuality} \r\n                            changeLevel={this.props.changeLevel} \r\n                            auras={this.props.auras}\r\n                        />      \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n/* backup\r\n<DisplayAuras changeAltQuality={this.props.changeAltQuality} changeQuality={this.props.changeQuality} changeLevel={this.props.changeLevel} auras={this.props.auras}/>\r\n\r\n<div className='mainapp gem_page'> \r\n                <div className='gem_btn_grp'>\r\n                    <button onClick={ this.handleChange.bind(this) } value='0'>Helmet</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='1'>Body</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='2'>Gloves</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='3'>Boots</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='4'>Ring 1</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='5'>Ring 2</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='6'>Weapon 1</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='7'>Weapon 2</button><hr />\r\n                </div>\r\n                <div className='gem_grps'>\r\n                    {this.state.gemLinksPage.pages[this.state.gemLinksPage.pageSelected]}\r\n                </div>\r\n            </div>\r\n\r\n            */\r\n","import React, { Component } from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport NavBar from './compos/NavBar';\r\nimport OutputBox from './compos/OutputBox';\r\nimport AscendancyPage from './compos/pages/AscendancyPage';\r\nimport TreePage from './compos/pages/TreePage';\r\nimport ClusterPage from './compos/pages/ClusterPage';\r\nimport GearPage from './compos/pages/GearPage';\r\nimport GemPage from './compos/pages/GemPage';\r\n\r\nimport './styles.css';\r\nvar auras = require('./auraStats').default;\r\nvar clusters = require('./clusterJewels').default;\r\nvar trees = require('./treePassives').default;\r\n\r\nclass App extends Component {\r\n  state = {\r\n    auras,\r\n    clusters,\r\n    trees,\r\n\r\n    auraEffect: {\r\n      asc: {\r\n        selected: 0,\r\n        options: [0,10,5],\r\n        total: function(){ return this.options[this.selected] }\r\n\r\n      },\r\n      tree: {\r\n        amount: 0,\r\n        timeless: 0,\r\n        total: function(){ console.log('total: ', this.timeless); return (Number(this.amount+this.timeless))}\r\n      },\r\n      cluster: {\r\n        amount: 0,\r\n      },\r\n      gear: {\r\n        amount: 0,\r\n        total: function(){return this.amount}\r\n      },\r\n      total: function(){\r\n        return this.asc.total() + this.tree.total() + this.cluster.amount + this.gear.total();\r\n      }\r\n    }\r\n  }\r\n\r\n  changeLevel(newLevel, auraIndex){\r\n\r\n    let newAuraState = [...this.state.auras];\r\n    newAuraState[auraIndex].level = Number(newLevel);\r\n    this.setState({ auras: newAuraState });\r\n\r\n  }\r\n\r\n  changeQuality(newQuality, auraIndex){\r\n    let newAuraState = [...this.state.auras];\r\n    newAuraState[auraIndex].quality = Number(newQuality);\r\n    this.setState({ auras: newAuraState });\r\n  }\r\n\r\n  changeAltQuality(newAltQuality, auraIndex){\r\n\r\n    let newAuraState = [...this.state.auras];\r\n    newAuraState[auraIndex].altQuality = Number(newAltQuality);\r\n    this.setState({ auras: newAuraState });\r\n  }\r\n\r\n  changeGenoLevel(newGenoLevel, auraIndex){\r\n\r\n    let newAuraState = [...this.state.auras];\r\n    newAuraState[auraIndex].generosityLevel = Number(newGenoLevel);\r\n    this.setState({ auras: newAuraState });\r\n  }\r\n\r\n  changeGenoType(newGenoType, auraIndex){\r\n\r\n    let newAuraState = [...this.state.auras];\r\n    newAuraState[auraIndex].generosityType = Number(newGenoType);\r\n    this.setState({ auras: newAuraState });\r\n  }\r\n\r\n   changeSpecificAuraEffect(newSpecificEffect, auraKey){\r\n    if(this.findAuraIndex(auraKey) !== null){\r\n      let auraIndex = this.findAuraIndex(auraKey);\r\n\r\n      let newAuraState = [...this.state.auras];\r\n      newAuraState[auraIndex].specificAuraEffect = Number(newSpecificEffect);\r\n      this.setState({ auras: newAuraState });\r\n    }\r\n   }\r\n\r\n   changeGlobalAuraEffect(newAuraEffect, page){\r\n\r\n    this.setState({auraEffect: {...this.state.auraEffect, [page]: {...this.state.auraEffect[page], amount: Number(newAuraEffect)}}});\r\n   }\r\n\r\n   changeClusterAmount(newAmount, clusterIndex){\r\n\r\n    let newClusterStats = [...this.state.clusters];\r\n    \r\n    newClusterStats[clusterIndex].amount = Number(newAmount);\r\n    this.setState({clusters: newClusterStats});\r\n   }\r\n\r\n   findAuraIndex(auraKey){\r\n    let index = null;\r\n    auras.forEach((aura) => {\r\n\r\n      if(aura.key === auraKey){\r\n        index = auras.indexOf(aura);\r\n      }\r\n    })\r\n    return index;\r\n   }\r\n   \r\n   changeTreeNodes(){\r\n\r\n    let newTreeStats = [...this.state.trees];\r\n    //let index = trees.indexOf(tree);\r\n    let newAuraEffect = 0;\r\n\r\n    newTreeStats.forEach((cluster) => {\r\n      \r\n      newAuraEffect += cluster.clusterAuraEffect();\r\n    })\r\n\r\n    this.setState({trees: newTreeStats});\r\n    this.changeGlobalAuraEffect(newAuraEffect, 'tree')\r\n    \r\n   }\r\n\r\n   changeTimeless(newAuraEffect){\r\n\r\n    console.log(newAuraEffect);\r\n    this.setState({auraEffect: {...this.state.auraEffect, ['tree']: {...this.state.auraEffect['tree'], timeless: Number(newAuraEffect)}}});\r\n   }\r\n\r\n  render() {\r\n      console.log(this.state.auras);\r\n      return ( \r\n        <section className=\"app\">\r\n          <div className='header'>\r\n            <h1>Nuk's PoE Aura stats calculator</h1>\r\n            <p>- Under Construction</p>\r\n          </div>\r\n          \r\n          <Router>\r\n            <NavBar />\r\n          <div className=\"content\">\r\n\r\n                <div className='page main'>\r\n                  <Switch>\r\n                    <Route path='/aurastatcalc/' exact\r\n\r\n                      render = {(props) => (\r\n                        <AscendancyPage {...props} auras={auras} />\r\n                      )}\r\n                    />\r\n\r\n                    <Route path='/aurastatcalc/tree'\r\n                    \r\n                      render = {(props) => (\r\n                        <TreePage {...props} \r\n\r\n                        changeTimeless={this.changeTimeless.bind(this)}\r\n                        changeTreeNodes={this.changeTreeNodes.bind(this)}\r\n                          auras={auras} \r\n                          timeless={this.state.auraEffect.tree.timeless}\r\n                          trees={trees}\r\n                        />\r\n                      )}\r\n                    />\r\n\r\n                   <Route path='/aurastatcalc/clusters'\r\n                      \r\n                      render = {(props) => (\r\n                        <ClusterPage {...props} \r\n\r\n                          changeClusterAmount={this.changeClusterAmount.bind(this)}\r\n                          changeGlobalAuraEffect={this.changeGlobalAuraEffect.bind(this)}\r\n                          changeSpecificAuraEffect={this.changeSpecificAuraEffect.bind(this)}\r\n                          clusters={clusters}\r\n                         />\r\n                      )}\r\n                    />\r\n                    \r\n                    <Route path='/aurastatcalc/gear'\r\n                      \r\n                      render = {(props) => (\r\n                        <GearPage {...props} auras={auras} />\r\n                      )}\r\n                    />\r\n\r\n                    <Route path='/aurastatcalc/auras'\r\n                      \r\n                      render = {(props) => (\r\n                        <GemPage {...props} \r\n                          changeGenoType={this.changeGenoType.bind(this)}\r\n                          changeGenoLevel={this.changeGenoLevel.bind(this)}\r\n                          changeAltQuality={this.changeAltQuality.bind(this)} \r\n                          changeQuality={this.changeQuality.bind(this)} \r\n                          changeLevel={this.changeLevel.bind(this)} \r\n                          auras={auras} \r\n                       />\r\n                      )}\r\n                    />\r\n            \r\n                  </Switch> \r\n                </div>\r\n              \r\n            <OutputBox clusters={this.state.clusters} auras={this.state.auras} globalAuraEffect={this.state.auraEffect.total()} />\r\n          </div>\r\n          </Router>\r\n        </section>\r\n    );\r\n  }\r\n}\r\n \r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}