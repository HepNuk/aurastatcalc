{"version":3,"sources":["auraStats.js","clusterJewels.js","treePassives.js","compos/NavBar.js","compos/Aura.js","compos/Specials.js","compos/OutputBox.js","compos/pages/AscendancyPage.js","compos/pages/treeTabs/DisplayTree.js","compos/pages/treeTabs/DisplayTrees.js","compos/pages/TreePage.js","compos/pages/clusterTabs/DisplayCluster.js","compos/pages/clusterTabs/DisplayClusters.js","compos/pages/ClusterPage.js","compos/pages/GearPage.js","compos/pages/gemLinkTabs/DisplayAura.js","compos/pages/gemLinkTabs/DisplayAuras.js","compos/pages/GemPage.js","App.js","index.js"],"names":["auraEffectCalc","value","auraPercent","auraMultiplier","Math","floor","printAddsEffect","effect","minToMax","auraEffect","min","max","printGainEffect","newValue","printPercentEffect","Aura","aurakey","title","effectOfQuality","statPerQuality","numberEffects","effectOfAura","this","key","level","quality","altQuality","specificAuraEffect","generosityLevel","generosityType","generosityEffect","generosityAuraEffect","printEffect","tempArray","i","length","push","printAuraEffect","printQuality","printQualityEffect","auras","clusterNodes","name","affects","amount","special","undefined","TreeCluster","notableAuraEffect","numSmallPassives","notable","Notable","smallPassives","motm","clusterAuraEffect","sum","isActive","treePassives","NavBar","e","page","target","console","log","props","changePage","className","to","Component","map","aura","globalEffect","tempString","effects","stat","printEffects","globalAuraEffect","Specials","clusters","cluster","printSpecials","OutputBox","AscendancyPage","onClick","src","alt","DisplayTree","for","tree","toLowerCase","type","id","DisplayTrees","trees","TreePage","DisplayCluster","changeClusterAmount","indexCluster","changeGlobalAuraEffect","calcClusterAuraEffect","onChange","onChangeCluster","bind","defaultValue","DisplayClusters","forEach","auraKey","changeSpecificAuraEffect","calculateClusterAuraEffect","indexOf","ClusterPage","GearPage","DisplayAura","changeLevel","indexAura","changeQuality","changeAltQuality","changeGenoType","changeGenoLevel","altQualityBonuses","onChangeGenoType","onChangeGenoLevel","placeholder","onChangeLevel","onChangeQuality","onChangeAltQuality","altQualityThree","DisplayAuras","GemPage","genoIcon","require","default","App","state","asc","selected","options","total","gear","newLevel","auraIndex","newAuraState","Number","setState","newQuality","newAltQuality","newGenoLevel","newGenoType","newSpecificEffect","findAuraIndex","newAuraEffect","newAmount","clusterIndex","newClusterStats","index","path","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dfa15837.chunk.js","sourcesContent":["/**\r\n * Explination on how Auras are Structured.\r\n * \r\n * Each value of auras is the name of the aura in Capitals example Hatred -> HATRED\r\n * each auras has the following attributes \r\n * \r\n * title: its name\r\n * level: whatever level its at.\r\n * quality: whatever quality the aura is at.\r\n * altQuality: what alternative quality is selected (this should be between 0 and 2 usually)\r\n * specificAuraEffect: this is where the value of specific aura effect is stored (such as Hatred has #% increased Aura Effect)\r\n * \r\n * effectOfQuality: this is an array of Arrays, it containes whatever quality bonuses a given alt quality provides\r\n * statPerQuality: for a given index statPerQuality is the bonus per quality given for the same index of effectOfQuality\r\n * \r\n * numberEffects: this contains an array for for each state line an aura gives. if a state has to values (a min and max) they are also in an array themselves\r\n * Example: 'Adds 16 to 48 Lightning Damage to Attacks' AND '21% more Lightning Damage with spells' at Level 20.\r\n * will be stored as following an array of length 2(2 mods), index 0 will have the Adds X to Y .. \r\n * such that at level 20 index20 will be -> [..,[16, 48]] \r\n * while the 2nd effect will be at index 1, and index 20 of that array with [.., 21]\r\n * \r\n * effectOfAura: this is also an array that matches the array of NumberEffects it will have its given effects split into diffrent arrays\r\n * if some text is split by numbers that line will also be split in the array. \r\n * Example: Adds 16 to 48 Lightning Damage to Attacks -> ['Adds ', ' to ', Lightning Damage to Attacks']\r\n * \r\n * printEffect(auraEffect){}: takes in the globalAuraEffect and returns an Array with all Bonuses Given by an Aura.\r\n * \r\n * printQuality(auraEffect){}: takes in the GlobalAuraEffect and returns an Array with all the bonus given by the Auras Quality\r\n */\r\n\r\nvar auraEffectCalc = function(value, auraPercent){ \r\n    let auraMultiplier = ((auraPercent/100+1)); \r\n\r\n    return Math.floor(value * auraMultiplier);\r\n\r\n}\r\n\r\nvar printQualityEffect = function(effectOfQuality, statPerQuality, quality, auraEffect){\r\n\r\n    let tempArray = [];\r\n        if (effectOfQuality.length === 1)\r\n            tempArray.push(printPercentEffect(effectOfQuality, statPerQuality*quality, auraEffect));\r\n        \r\n        else if (effectOfQuality.length === 2)\r\n            \r\n            tempArray.push(printGainEffect(effectOfQuality, statPerQuality*quality, auraEffect));\r\n        \r\n        else if (effectOfQuality.length === 3)\r\n            tempArray.push(printAddsEffect(effectOfQuality, statPerQuality*quality, auraEffect));\r\n\r\n\r\n    return tempArray;\r\n}\r\n\r\nvar printAuraEffect = function(effectOfAura, numberEffects, level, auraEffect){\r\n\r\n    let tempArray = [];\r\n    for (let i = 0; i < effectOfAura.length; i++){\r\n        if (effectOfAura[i].length === 1)\r\n            tempArray.push(printPercentEffect(effectOfAura[i], numberEffects[i][level], auraEffect));\r\n        \r\n        else if (effectOfAura[i].length === 2)\r\n            \r\n            tempArray.push(printGainEffect(effectOfAura[i], numberEffects[i][level], auraEffect));\r\n        \r\n        else if (effectOfAura[i].length === 3)\r\n            tempArray.push(printAddsEffect(effectOfAura[i], numberEffects[i][level], auraEffect));\r\n\r\n    }\r\n\r\n    return tempArray;\r\n}\r\n/*\r\n    Prints Adds type Aura Effects\r\n\r\n    examples: effect -> Array [Adds, to, Something]\r\n              minToMax -> Array [min, max]\r\n              \r\n              returns calculated values based on aura effect in format\r\n\r\n              Adds min to max Something     \r\n*/\r\nvar printAddsEffect = function (effect, minToMax, auraEffect) {\r\n\r\n    //let auraEffectMultiplier = Math.floor((auraEffect/100)+1);\r\n\r\n    let min = auraEffectCalc(minToMax[0], auraEffect);\r\n    let max = auraEffectCalc(minToMax[1], auraEffect);\r\n\r\n    return effect[0] + min + effect[1] + max + effect[2];\r\n};\r\n\r\n//print Text Value Text Effects \r\n//Example: Gain X Physical as...\r\nvar printGainEffect = function (effect, value, auraEffect){\r\n\r\n    let newValue = auraEffectCalc(value, auraEffect);\r\n\r\n    return effect[0] + newValue + effect[1];\r\n}\r\n\r\n//print Value Text Effects\r\n//Example: X% more damage\r\nvar printPercentEffect = function(effect, value, auraEffect){\r\n\r\n    let newValue = auraEffectCalc(value, auraEffect);\r\n\r\n    return newValue + effect;\r\n}\r\n\r\nclass Aura {\r\n    constructor(aurakey, title, effectOfQuality, statPerQuality, numberEffects, effectOfAura) {\r\n        this.key = aurakey;\r\n        this.title = title;\r\n        this.level = 0;\r\n        this.quality = 0;\r\n        this.altQuality = 0;\r\n        this.specificAuraEffect = 0;\r\n        this.effectOfQuality = effectOfQuality;\r\n        this.statPerQuality = statPerQuality;\r\n        this.numberEffects = numberEffects;\r\n        this.effectOfAura = effectOfAura;\r\n\r\n        this.generosityLevel = 0;\r\n        this.generosityType = 0;\r\n        \r\n        this.generosityEffect = [\r\n\r\n            [0],\r\n\r\n            [   0,\r\n                20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\r\n                30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\r\n                40, 41, 42, 43, 44, 45, 46, 47, 48, 49,\r\n                49, 50, 50, 51, 51, 52, 52, 53, 53, 54\r\n            ],\r\n            [   0,\r\n                41, 43, 45, 47, 49, 51, 53, 55, 57, 59,\r\n                60, 61, 62, 63, 64, 65, 66, 67, 68, 69,\r\n                69, 69, 69, 69, 69, 69, 69, 69, 69, 69,\r\n                69, 69, 69, 69, 69, 69, 69, 69, 69, 69\r\n            ],\r\n        ];\r\n\r\n        this.generosityAuraEffect = function(){\r\n\r\n            if(this.generosityType > 0 && this.generosityLevel > 0 ){\r\n                return this.generosityEffect[this.generosityType][this.generosityLevel];\r\n            } else return 0;\r\n        }\r\n\r\n        this.printEffect = function (auraEffect) {\r\n            let tempArray = [];\r\n            if (this.level !== 0 && this.level <= 40) {\r\n                tempArray = printAuraEffect(this.effectOfAura, this.numberEffects, this.level, \r\n                                                (this.specificAuraEffect + auraEffect + this.generosityAuraEffect()));\r\n                return tempArray;\r\n\r\n            } else\r\n                return [''];\r\n\r\n        };\r\n\r\n        this.printQuality = function (auraEffect) {\r\n            let tempArray = [];\r\n            if (this.altQuality !== 0 && this.quality !== 0) {\r\n                tempArray = printQualityEffect(this.effectOfQuality[this.altQuality], \r\n                                                this.statPerQuality[this.altQuality],  this.quality, \r\n                                                (this.specificAuraEffect + auraEffect +  this.generosityAuraEffect()));\r\n                return tempArray;\r\n\r\n            } else\r\n                return [''];\r\n\r\n        };\r\n    }\r\n}\r\n\r\n/* Template for new Aura.\r\n\r\nAURA: new Aura(\r\n    //Title \r\n    '',\r\n    //AlternateQualityBonuses \r\n    [\r\n        [''],\r\n        [''],\r\n        [''],\r\n    ],\r\n    //Values Per Quality of the diffrent alt Qualities\r\n    [0, 0, 0],\r\n    //Values at each level for the aura\r\n    [\r\n        [],\r\n        [],\r\n    ],\r\n    //Aura Bonuses\r\n    [\r\n        [''],\r\n        [''],\r\n    ]\r\n),    \r\n\r\n*/\r\n\r\n\r\nvar auras = [\r\n  //-----------------------------------------------------\r\n  //Anger Stats\r\n    new Aura(\r\n        'ANGER',\r\n        //Title \r\n        \"Anger\",\r\n        //AlternateQualityBonuses \r\n        [\r\n            [\"\"],\r\n            [\"% increased Burning Damage\"],\r\n            [\"% increased Movement Speed\"],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 1, 0.25],\r\n        //Values at each level for the aura\r\n        [\r\n            [   [0, 0],\r\n                [16, 23],   [19, 27],   [22, 31],   [25, 36],   [29, 41],   [33, 47],   [37, 53],   [42, 60],   [48, 68],   [52, 74],\r\n                [56, 80],   [60, 86],   [65, 93],   [70, 100],  [76, 108],  [82, 116],  [88, 125],  [94, 135],  [101, 145], [109, 155],\r\n                [117, 167], [125, 179], [134, 191], [143, 205], [154, 219], [164, 235], [176, 251], [188, 268], [201, 287], [214, 306],\r\n                [221, 316], [229, 327], [236, 337], [244, 349], [252, 360], [260, 372], [269, 384], [278, 397], [287, 409], [296, 423]\r\n            ],\r\n            [   [0, 0], \r\n                [15, 21],   [17, 24],   [20, 28],   [23, 32],   [26, 37],   [30, 42],   [34, 48],   [39, 54],   [44, 61],   [47, 66], \r\n                [51, 72],   [55, 78],   [60, 84],   [64, 90],   [69, 97],   [75, 105],  [80, 113],  [86, 121],  [93, 130],  [99, 140], \r\n                [107, 150], [114, 161], [122, 172], [131, 184], [140, 197], [150, 211], [161, 226], [172, 241], [183, 258], [196, 275], \r\n                [202, 285], [209, 294], [216, 304], [223, 314], [230, 324], [238, 335], [246, 346], [254, 357], [262, 368], [270, 380]\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            [\"Adds \", \" to \", \" Fire Damage to Attacks\"],\r\n            [\"Adds \", \" to \", \" Fire Damage to Spells\"],\r\n        ]\r\n    ),\r\n\r\n  //-----------------------------------------------------\r\n  //Hatred\r\n    new Aura(\r\n        'HATRED',\r\n        //Title \r\n        'Hatred',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% increased Chill and Freeze Duration'],\r\n            ['% increased Movement Speed while on Chilled Ground'],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 1, 1],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0, \r\n                16, 16, 17, 17, 18, 18, 19, 19, 20, 20, \r\n                21, 21, 22, 22, 23, 23, 24, 24, 25, 25, \r\n                26, 26, 27, 27, 28, 28, 29, 29, 30, 30, \r\n                30, 31, 31, 31, 31, 32, 32, 32, 32, 33\r\n            ],\r\n            [   0,\r\n                14, 14, 14, 14, 15, 15, 15, 15, 16, 16,\r\n                16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\r\n                19, 19, 19, 19, 20, 20, 20, 20, 21, 21,\r\n                21, 21, 21, 21, 21, 22, 22, 22, 22, 22\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['Gain ', ' of Physical Damage as Extra Cold Damage'],\r\n            ['% more Cold Dmage'],\r\n        ]\r\n    ),\r\n  //-------------------------------\r\n  //Wrath\r\n    new Aura(\r\n        'WRATH',\r\n        //Title \r\n        'Wrath',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [' '],\r\n            [' '],\r\n            [' '],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0, 0], \r\n        //Values at each level for the aura\r\n        [\r\n            [   [0, 0], \r\n                [2, 37],   [3, 43],   [3, 50],   [4, 57],   [4, 66],   [5, 75],   [5, 85],   [6, 97],   [7, 109],  [7, 118], \r\n                [8, 128],  [9, 138],  [9, 149],  [10, 161], [11, 173], [12, 186], [13, 200], [13, 215], [14, 231], [16, 248], \r\n                [17, 267], [18, 286], [19, 306], [20, 328], [22, 351], [23, 375], [25, 401], [27, 429], [29, 458], [31, 490], \r\n                [32, 506], [33, 523], [34, 540], [35, 558], [36, 576], [37, 595], [38, 614], [40, 634], [41, 655], [42, 676]\r\n\r\n            ],\r\n            [   0, \r\n                15, 15, 15, 16, 16, 16, 17, 17, 17, 18, \r\n                18, 18, 19, 19, 19, 20, 20, 20, 21, 21, \r\n                21, 22, 22, 22, 23, 23, 23, 24, 24, 24, \r\n                24, 25, 25, 25, 25, 25, 25, 26, 26, 26\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['Adds ', ' to ', ' Lightning Damage to Attacks'],\r\n            ['% more Lightning Damage with spells'],\r\n        ]\r\n    ),\r\n\r\n    new Aura(\r\n        'HASTE',\r\n        //Title \r\n        'Haste',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% increased Totem Placement speed'],\r\n            ['% increased Projectile Speed'],\r\n            ['Buffs on You expire ', '% faster']\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0.5, 0.5, 1],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                9,  10, 10, 10, 11, 11, 11, 12, 12, 12, \r\n                13, 13, 13, 14, 14, 15, 15, 16, 16, 16,\r\n                17, 17, 17, 18, 18, 18, 19, 19, 19, 20, \r\n                20, 20, 20, 20, 20, 21, 21, 21, 21, 21\r\n            ],\r\n            [   0,\r\n                9,  9,  10, 10, 10, 11, 11, 11, 12, 12, \r\n                12, 13, 13, 13, 14, 14, 15, 15, 16, 16, \r\n                16, 17, 17, 17, 18, 18, 18, 19, 19, 19, \r\n                19, 20, 20, 20, 20, 20, 20, 21, 21, 21\r\n\r\n            ],\r\n            [   0,\r\n                4,  4,  4,  5,  5,  5,  6,  6,  6,  7,\r\n                7,  7,  8,  8,  8,  8,  8,  8,  8,  9,\r\n                9,  9,  10, 10, 10, 11, 11, 11, 12, 12,\r\n                12, 12, 12, 13, 13, 13, 13, 13, 13, 14\r\n            ]\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['% increased Attack Speed'],\r\n            ['% increased Cast Speed'],\r\n            ['% increased Movement Speed']\r\n        ]\r\n    ),\r\n\r\n    new Aura(\r\n        'MALEVOLENCE',\r\n        //Title \r\n        'Malevolence',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% increased Skill Effect Duration'],\r\n            ['% increased Damage with Ailments'],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0.5, 0.5],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                14, 14, 14, 15, 15, 15, 16, 16, 16, 17, \r\n                17, 17, 18, 18, 18, 19, 19, 19, 20, 20, \r\n                20, 21, 21, 21, 22, 22, 22, 23, 23, 23, \r\n                23, 24, 24, 24, 24, 24, 24, 25, 25, 25\r\n            ],\r\n            [   0,\r\n                10, 10, 11, 11, 12, 12, 13, 13, 14, 14, \r\n                15, 15, 16, 16, 17, 17, 18, 18, 19, 19, \r\n                20, 20, 21, 21, 22, 22, 23, 23, 24, 24, \r\n                24, 25, 25, 25, 25, 26, 26, 26, 26, 27\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['% more Damage over Time'],\r\n            ['% increased Skill Effect Duration'],\r\n        ]\r\n    ),  \r\n\r\n    new Aura(\r\n        'ZEALOTRY',\r\n        //Title \r\n        'Zealotry',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% to Critical Strike Multiplier'],\r\n            ['% of Life per second'],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0.25, 0.02],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                10, 10, 10, 11, 11, 11, 12, 12, 12, 12,\r\n                13, 13, 13, 14, 14, 14, 14, 15, 15, 15,\r\n                16, 16, 16, 16, 17, 17, 17, 18, 18, 18,\r\n                18, 18, 19, 19, 19, 19, 19, 19, 19, 20\r\n            ],\r\n            [   0,\r\n                20, 21, 22, 23, 24, 25, 26, 27, 28, 29, \r\n                30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \r\n                40, 41, 42, 43, 44, 45, 46, 47, 48, 49, \r\n                49, 50, 50, 51, 51, 52, 52, 53, 53, 54\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['% more Spell Damage'],\r\n            ['% increased Spell Critical Strike Chance'],\r\n        ]\r\n    ),\r\n\r\n    new Aura(\r\n        'PURITY_FIRE',\r\n        //Title \r\n        'Purity of Fire',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% chance to avoid being Ignited'],\r\n            ['Damage Penetrates ', '% Fire Resistance'],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 1, 0.2],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                0, 0, 0, 0, 1, 1, 1, 1, 1, 1,\r\n                2, 2, 2, 2, 2, 2, 3, 3, 3, 4,\r\n                4, 4, 5, 5, 5, 5, 5, 5, 5, 5,\r\n                5, 5, 5, 5, 5, 5, 5, 5, 5, 5\r\n            ],\r\n            [   0,\r\n                22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\r\n                32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\r\n                42, 43, 44, 45, 46, 47, 48, 49, 50, 51,\r\n                51, 52, 52, 53, 53, 54, 54, 55, 55, 56\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['+', '% to maximum Fire Resistance'],\r\n            ['+', '% to Fire Resistance'],\r\n        ]\r\n    ),    \r\n\r\n    new Aura(\r\n        'PURITY_ICE',\r\n        //Title \r\n        'Purity of Ice',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% chance to avoid being Frozen'],\r\n            ['Damage Penetrates ', '% Cold Resistance'],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 1, 0.2],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                0, 0, 0, 0, 1, 1, 1, 1, 1, 1,\r\n                2, 2, 2, 2, 2, 2, 3, 3, 3, 4,\r\n                4, 4, 5, 5, 5, 5, 5, 5, 5, 5,\r\n                5, 5, 5, 5, 5, 5, 5, 5, 5, 5\r\n            ],\r\n            [   0,\r\n                22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\r\n                32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\r\n                42, 43, 44, 45, 46, 47, 48, 49, 50, 51,\r\n                51, 52, 52, 53, 53, 54, 54, 55, 55, 56\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['+', '% to maximum Cold Resistance'],\r\n            ['+', '% to Cold Resistance'],\r\n        ]\r\n    ),\r\n    \r\n    new Aura(\r\n        'PURITY_LIGHTNING',\r\n        //Title \r\n        'Purity of Lightning',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% chance to avoid being Frozen'],\r\n            ['Damage Penetrates ', '% Lightning Resistance'],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 1, 0.2],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                0, 0, 0, 0, 1, 1, 1, 1, 1, 1,\r\n                2, 2, 2, 2, 2, 2, 3, 3, 3, 4,\r\n                4, 4, 5, 5, 5, 5, 5, 5, 5, 5,\r\n                5, 5, 5, 5, 5, 5, 5, 5, 5, 5\r\n            ],\r\n            [   0,\r\n                22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\r\n                32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\r\n                42, 43, 44, 45, 46, 47, 48, 49, 50, 51,\r\n                51, 52, 52, 53, 53, 54, 54, 55, 55, 56\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['+', '% to maximum Lightning Resistance'],\r\n            ['+', '% to Lightning Resistance'],\r\n        ]\r\n    ),\r\n\r\n    new Aura(\r\n        'PURITY_ELEMENTS',\r\n        //Title \r\n        'Purity of Elements',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% chance to avoid Elemental Ailments'],\r\n            ['Damage Penetrates ', '% Elemental Resistance'],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0.5, 0.2],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                12, 13, 14, 15, 15, 16, 17, 18, 19, 20,\r\n                20, 21, 22, 23, 24, 25, 25, 26, 27, 27,\r\n                28, 29, 29, 30, 31, 31, 32, 33, 33, 34,\r\n                34, 34, 34, 35, 35, 36, 36, 36, 36, 37\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['+', '% to all Elemental Resistances']\r\n        ]\r\n    ),\r\n\r\n    ];\r\n\r\nexport default auras;","var clusterNodes = [\r\n\r\n    { name: 'Small 6% Aura Effect', affects:[], auraEffect: 6, amount: 0},\r\n\r\n    { name: 'Small 7% Aura Effect', affects:[], auraEffect: 7, amount: 0 },\r\n\r\n    { name: 'Small 8% Aura Effect', affects:[], auraEffect: 8, amount: 0 },\r\n    \r\n    { name: 'First Among Equals', affects: [], auraEffect: 10, amount: 0 },\r\n\r\n    { name: 'Replenishing Presence', affects: [], special: true,auraEffect: 8, amount: 0, effect: function(){ return [`Regenerate ${this.amount}% of Life per second`] }},\r\n\r\n    { name: 'Vengeful Commander', affects: ['ANGER', 'HATRED', 'WRATH'], auraEffect: 20, amount: 0 },\r\n\r\n    { name: 'Stalwart Commander', affects: ['GRACE', 'DISCIPLINE', 'DETERMINATION'], auraEffect: 30, amount: 0 },\r\n\r\n    { name: 'Pure Commander', affects:[['PURITY_ICE', 'PURITY_FIRE', 'PURITY_LIGHTNING'], ['PURITY_ELEMENTS']], auraEffect: [10, 30], amount: 0},\r\n\r\n    { name: 'Precise Commander', affects: undefined, key:'PRECISE_COMMANDER', special: true, amount: 0, effect: function(){ return [`${25 * this.amount}% increased Critical Strike Chance`,`+${10 * this.amount}% to Critical Strike Multiplier`] }} \r\n]\r\nexport default clusterNodes;","class TreeCluster{\r\n    constructor(key, name, notableAuraEffect, numSmallPassives){\r\n\r\n        let tempArray = []\r\n\r\n        for (let i = 0; i < numSmallPassives; i++){\r\n            tempArray.push([false]) //all small nodes grant 6% aura effect\r\n        }\r\n\r\n        this.key = key;\r\n        this.name = name;\r\n        this.notable = new Notable(name, notableAuraEffect);\r\n        this.smallPassives = tempArray;\r\n        this.motm = false;\r\n\r\n        this.clusterAuraEffect = function(){\r\n            \r\n            let sum = 0;\r\n\r\n            for (let i = 0; i < this.smallPassives.length; i++){\r\n                if(this.smallPassives[i][0] === true){\r\n                    if(this.motm === true){\r\n                        sum += 9;\r\n                    } else sum += 6;\r\n                }\r\n            }\r\n            \r\n            if(this.notable.isActive && this.motm === false){\r\n                sum += this.notable.auraEffect;\r\n            }\r\n\r\n            return sum;\r\n        }\r\n    }\r\n}\r\n\r\nclass Notable{\r\n    constructor(name, auraEffect){\r\n        this.name = name;\r\n        this.auraEffect = auraEffect;\r\n        this.isActive = false;\r\n    }\r\n}\r\n\r\n//new TreeCluster(key, name, notableAuraEffect, numSmallPassives)\r\nvar treePassives = [\r\n    new TreeCluster('SOVEREIGNTY',      'Sovereignty',            10, 1),\r\n    new TreeCluster('LEADERSHIP',       'Leadership',            6,  1),\r\n    new TreeCluster('INFLUENCE',        'Influence',             14, 1),\r\n    new TreeCluster('CHARISMA',         'Charisma',              6,  0),\r\n    new TreeCluster('CHAMPION_OF_THE_CAUSE',   'Champion of the Cause', 6,  1),\r\n    new TreeCluster('DEVOTION',         'Devotion',              3,  0),\r\n    new TreeCluster('POTENCY',          'Conqueror\\'s Pontency', 3,  0)\r\n]\r\n\r\nexport default treePassives;","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class NavBar extends Component {\r\n\r\n    handleChange(e){\r\n        const page = e.target.value;\r\n        console.log(page);\r\n        this.props.changePage(page);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='topnav'>\r\n                <div className='divider' /><div className='divider' />\r\n                    <Link to='/aurastatcalc/'>   \r\n                        <button>Home</button>\r\n                    </Link>\r\n                <div className='divider' />\r\n                    <Link to='/aurastatcalc/tree'>   \r\n                        <button>Tree</button>\r\n                    </Link>\r\n                <div className='divider' />\r\n                    <Link to='/aurastatcalc/clusters'>   \r\n                        <button>Clusters</button>\r\n                    </Link>\r\n                <div className='divider' />\r\n                    <Link to='/aurastatcalc/gear'>   \r\n                        <button>Gear</button>\r\n                    </Link>\r\n                <div className='divider' />\r\n                    <Link to='/aurastatcalc/auras'>\r\n                        <button>Auras</button>\r\n                    </Link>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\n\r\nexport default class Aura extends Component {\r\n    render() {\r\n\r\n        let printEffects = (aura, globalEffect) => {\r\n\r\n            let tempString = [];\r\n\r\n            if(aura.level > 0 && aura.level <= 40){\r\n\r\n                if(aura.specificAuraEffect > 0)\r\n                tempString.push(<li className='aura_name'>{`~ ${aura.title} (has +${aura.specificAuraEffect}% increased effect) ~`}</li>);\r\n                else \r\n                tempString.push(<li className='aura_name'>{`~ ${aura.title} ~`}</li>);\r\n                \r\n                let effects = aura.printEffect(globalEffect);\r\n\r\n                for(const effect of effects){\r\n                    tempString.push(<li className='aura_stat'>{effect}</li>);\r\n                }\r\n            }\r\n\r\n            if(aura.level > 0 && aura.quality > 0 && aura.statPerQuality[aura.altQuality] !== 0){\r\n                let effects = aura.printQuality(globalEffect);\r\n\r\n                for(const effect of effects){\r\n                    tempString.push(<li className='aura_stat'>{effect}</li>);\r\n                }\r\n            }\r\n\r\n            if (tempString.length !== 0){\r\n                tempString.push(<li key={aura.key} className='aura_sepa'>{'~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~'}</li>);\r\n            }\r\n        \r\n            return tempString.map((stat) => (stat))\r\n        }\r\n\r\n        return this.props.auras.map((aura) => (\r\n            printEffects(aura, this.props.globalAuraEffect)\r\n        ));\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Specials extends Component {\r\n    render() {\r\n\r\n        let printSpecials = (cluster) => {\r\n\r\n            let tempString = [];\r\n\r\n            if(cluster.special === true && cluster.amount > 0){\r\n                \r\n                tempString.push(<li className='aura_name'>{'~ '+ cluster.name +' ~'}</li>);\r\n                \r\n\r\n                let effects = cluster.effect();\r\n                \r\n                for(const effect of effects){\r\n                    tempString.push(<li className='aura_stat'>{effect}</li>);\r\n                }\r\n            }\r\n            if (tempString.length !== 0){\r\n                tempString.push(<li key={cluster.key} className='aura_sepa'>{'~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~'}</li>);\r\n            }\r\n\r\n            return tempString.map((stat) => (stat))\r\n        }\r\n\r\n        return this.props.clusters.map((cluster) => (\r\n            printSpecials(cluster)\r\n        ));\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropType from 'prop-types';\r\nimport Aura from './Aura';\r\nimport Specials from './Specials';\r\n\r\nexport default class OutputBox extends Component {\r\n    render() {\r\n\r\n    return (\r\n        <div className='page output'>\r\n            <div className='output_box'>\r\n                <div className='sticky'>\r\n                    <h1>Aura Stats output</h1>\r\n                    <p>\r\n                        - {this.props.globalAuraEffect}% increased Aura Effect (Global)<br />\r\n                    </p>\r\n                </div>\r\n                    <Aura auras={this.props.auras} globalAuraEffect={this.props.globalAuraEffect}/>\r\n                    <Specials clusters={this.props.clusters} />\r\n            </div>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\n//PropTypes\r\nOutputBox.propTypes = {\r\n    globalAuraEffect: PropType.object.isRequired,\r\n    auras: PropType.object.isRequired\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class AscendancyPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className='mainapp ascendancy'>\r\n                <div className='asc_buttons'>\r\n                    <button onClick=''><img src='img/ascendancy/scion.png'  alt='Scion'/></button>\r\n                    <button onClick=''><img src='img/ascendancy/guardian.png'  alt='Guardian'/></button>\r\n                    <button onClick=''><img src='img/ascendancy/necro.png'  alt='Nec'/></button>\r\n                    <hr />\r\n                </div>\r\n                <div className='asc_states'>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class DisplayTree extends Component {\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div className='treeLabel'>\r\n\r\n                <label for={this.props.tree.key}>\r\n                    <div className='notables'>\r\n                        <div className='notable'>\r\n                            <img className='border' src='img/borders/notable_border.webp' />\r\n                            <img src={`img/tree/${this.props.tree.key.toLowerCase()}.png`} />\r\n                        </div>\r\n                    \r\n                        <input type='checkbox' id={this.props.tree.key.toLowerCase()} />\r\n                        <span className='title'>{this.props.tree.notable.name}</span>\r\n                    </div>\r\n                </label>\r\n                \r\n\r\n                <label>\r\n                <div className='smalls'>\r\n                        <div className='smallpassives'>\r\n                            <img className='border' src='img/borders/small_border.webp' />\r\n                            <img src={`img/tree/effect.png`} />\r\n                            \r\n                        </div>\r\n                        <input type='checkbox' />\r\n                        <span className='title'>6% aura effect</span>\r\n                </div>\r\n                </label>\r\n                \r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport DisplayTree from './DisplayTree';\r\n\r\n\r\nexport default class DisplayTrees extends Component {\r\n    render() {\r\n        return this.props.trees.map((tree) => (\r\n            <DisplayTree \r\n\r\n                tree={tree}\r\n            />\r\n         ));\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport DisplayTrees from './treeTabs/DisplayTrees';\r\n\r\nexport default class TreePage extends Component {\r\n    render() {\r\n        return (\r\n            <div className='mainapp gem_grps'>\r\n                <h1>Tree</h1>\r\n                <DisplayTrees \r\n                    trees={this.props.trees}\r\n                />    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class DisplayCluster extends Component {\r\n\r\n    onChangeCluster(e){\r\n        this.props.cluster.amount = e.target.value;\r\n\r\n        this.props.changeClusterAmount(e.target.value, this.props.indexCluster)\r\n        this.props.changeGlobalAuraEffect(this.props.calcClusterAuraEffect(), 'cluster');\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='auras'>\r\n                <div className='aura'>\r\n\r\n                    <img src='img/cluster/notable.png' alt=''/>\r\n\r\n                    <span className='aura_title'>{this.props.cluster.name}</span>\r\n\r\n                    <div className='inputs'>\r\n                        <input onChange={this.onChangeCluster.bind(this)} defaultValue={this.props.cluster.amount} type='number' min='0' max='80'/>\r\n\r\n                    </div>\r\n                </div>          \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport DisplayCluster from './DisplayCluster';\r\n\r\n\r\n\r\nexport default class DisplayClusters extends Component {\r\n    \r\n    calculateClusterAuraEffect(){\r\n\r\n        let auraEffect = 0;\r\n\r\n        this.props.clusters.forEach((cluster) => {   \r\n            if(cluster.affects !== undefined){ \r\n                if( cluster.affects.length === 0 ){\r\n                    auraEffect += (cluster.auraEffect * cluster.amount);\r\n                \r\n                } else {\r\n                    if(cluster.auraEffect.length === undefined){\r\n                        \r\n                        cluster.affects.forEach((auraKey) => {\r\n                            this.props.changeSpecificAuraEffect((cluster.auraEffect * cluster.amount), auraKey)   \r\n                        })\r\n                    } else {\r\n                        \r\n                        for (let i = 0; i< cluster.affects.length; i++){\r\n\r\n                            cluster.affects[i].forEach((auraKey) => {\r\n                                this.props.changeSpecificAuraEffect((cluster.auraEffect[i] * cluster.amount), auraKey)   \r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n                \r\n            } \r\n        });\r\n\r\n        return auraEffect;\r\n    }\r\n    \r\n    render() {\r\n        return this.props.clusters.map((cluster) => (\r\n                <DisplayCluster\r\n\r\n                    changeClusterAmount={this.props.changeClusterAmount}\r\n                    calcClusterAuraEffect={this.calculateClusterAuraEffect.bind(this)}\r\n                    changeGlobalAuraEffect={this.props.changeGlobalAuraEffect}\r\n                    cluster={cluster}\r\n                    indexCluster={this.props.clusters.indexOf(cluster)}\r\n                />\r\n        ));\r\n    }\r\n}\r\n/* this.props.changeSpecificAuraEffect(cluster.auraEffect * cluster.amount, auraKey) */","import React, { Component } from 'react'\r\nimport DisplayClusters from './clusterTabs/DisplayClusters';\r\n\r\nexport default class ClusterPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className='mainapp gem_grps'>\r\n                <h1>Clusters</h1>\r\n                <DisplayClusters \r\n\r\n                    changeClusterAmount={this.props.changeClusterAmount}\r\n                    changeGlobalAuraEffect={this.props.changeGlobalAuraEffect}\r\n                    changeSpecificAuraEffect={this.props.changeSpecificAuraEffect}\r\n                    clusters={this.props.clusters}\r\n                />    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class GearPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className='mainapp gear_page'>\r\n                <h1>Gear Page</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class DisplayAura extends Component {\r\n\r\n\r\n    //onChange methodes for every diffrent type of change that can occure to an aura\r\n    onChangeLevel(e){\r\n\r\n        this.props.aura.level = e.target.value;\r\n        this.props.changeLevel(e.target.value, this.props.indexAura);\r\n    }\r\n\r\n    onChangeQuality(e){\r\n\r\n        this.props.aura.quality = e.target.value;\r\n        this.props.changeQuality(e.target.value, this.props.indexAura);\r\n    }\r\n\r\n    onChangeAltQuality(e){\r\n        \r\n        this.props.aura.altQuality = e.target.value;\r\n        this.props.changeAltQuality(e.target.value, this.props.indexAura);\r\n    }\r\n\r\n    onChangeGenoType(e){\r\n        this.props.aura.generosityType = e.target.value;\r\n        this.props.changeGenoType(e.target.value, this.props.indexAura);\r\n    }\r\n\r\n    onChangeGenoLevel(e){\r\n        this.props.aura.generosityLevel = e.target.value;\r\n        this.props.changeGenoLevel(e.target.value, this.props.indexAura);\r\n    }\r\n\r\n    //Not All Auras have 3 Alt Qualities\r\n    altQualityThree(altQualityBonuses){\r\n        \r\n        if(altQualityBonuses.length > 3)\r\n        return (<option value='3'>Phantas   </option>)\r\n        else return null;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <div className='auras'>\r\n                <div className='generosity'>\r\n                    <img src={\"img/aura/\"+ this.props.aura.key.toLowerCase() +\".png\"} alt=' '/>\r\n                    <span className='aura_title'>{this.props.aura.title}</span>\r\n                    \r\n                    <div className='inputs'>\r\n                    \r\n                    <img src='img/gem/generosity.png' alt='G'/>\r\n                \r\n                        <select onChange={this.onChangeGenoType.bind(this)} defaultValue={this.props.aura.generosityType}>\r\n                            <option value='0'>None</option>\r\n                            <option value='1'>Generosity</option>\r\n                            <option value='2'>Awakened</option>\r\n                        </select>\r\n\r\n                        <input onChange={this.onChangeGenoLevel.bind(this)} defaultValue={this.props.aura.generosityLevel} type='number' min='0' max='40' placeholder='Lvl' />\r\n                    </div>\r\n                </div>\r\n                <div className='aura'>\r\n                <img src={\"img/gem/\"+ this.props.aura.key.toLowerCase() +\".png\" }  alt=' '/>\r\n\r\n                    \r\n                    <div className='inputs'>\r\n                        <span className='details'>Lvl: </span>\r\n                        <input onChange={this.onChangeLevel.bind(this)}     defaultValue={this.props.aura.level} type='number' min='0' max='40'  placeholder='Lvl' />\r\n                        <span className='details'>Qual: </span>\r\n                        <input onChange={this.onChangeQuality.bind(this)} defaultValue={this.props.aura.quality} type='number' min='0' max='100' placeholder='Qlty' />\r\n                        <span className='details'>Alt: </span>\r\n                        <select onChange={this.onChangeAltQuality.bind(this)} defaultValue={this.props.aura.altQuality}>\r\n                            <option value='0'>  None      </option>\r\n                            <option value='1'>  Diverg    </option>\r\n                            <option value='2'>  Anom      </option>\r\n                            {this.altQualityThree(this.props.aura.effectOfQuality)}\r\n                        </select>\r\n                    </div>\r\n\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport DisplayAura from './DisplayAura';\r\n/*\r\n    Logic for displaying grid of all auras\r\n*/\r\n\r\n\r\n\r\nexport default class DisplayAuras extends Component {\r\n    \r\n    render() {\r\n        return this.props.auras.map((aura) => (\r\n            <DisplayAura \r\n\r\n                changeGenoType={this.props.changeGenoType}\r\n                changeGenoLevel={this.props.changeGenoLevel}\r\n                changeAltQuality={this.props.changeAltQuality} \r\n                changeQuality={this.props.changeQuality} \r\n                changeLevel={this.props.changeLevel} \r\n                aura={aura}\r\n                indexAura={this.props.auras.indexOf(aura)}\r\n            />\r\n         ));\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport DisplayAuras from './gemLinkTabs/DisplayAuras';\r\n\r\nexport default class GemPage extends Component {\r\n    onChangeGenoIcon(e){\r\n        console.log(this.genoIcon);\r\n        this.genoIcon = e.target.value;\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='mainapp gem_grps'> \r\n                        <h1>Auras</h1>\r\n                        <DisplayAuras \r\n                            changeGenoType={this.props.changeGenoType}\r\n                            changeGenoLevel={this.props.changeGenoLevel}\r\n                            changeAltQuality={this.props.changeAltQuality} \r\n                            changeQuality={this.props.changeQuality} \r\n                            changeLevel={this.props.changeLevel} \r\n                            auras={this.props.auras}\r\n                        />      \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n/* backup\r\n<DisplayAuras changeAltQuality={this.props.changeAltQuality} changeQuality={this.props.changeQuality} changeLevel={this.props.changeLevel} auras={this.props.auras}/>\r\n\r\n<div className='mainapp gem_page'> \r\n                <div className='gem_btn_grp'>\r\n                    <button onClick={ this.handleChange.bind(this) } value='0'>Helmet</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='1'>Body</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='2'>Gloves</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='3'>Boots</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='4'>Ring 1</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='5'>Ring 2</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='6'>Weapon 1</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='7'>Weapon 2</button><hr />\r\n                </div>\r\n                <div className='gem_grps'>\r\n                    {this.state.gemLinksPage.pages[this.state.gemLinksPage.pageSelected]}\r\n                </div>\r\n            </div>\r\n\r\n            */\r\n","import React, { Component } from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport NavBar from './compos/NavBar';\r\nimport OutputBox from './compos/OutputBox';\r\nimport AscendancyPage from './compos/pages/AscendancyPage';\r\nimport TreePage from './compos/pages/TreePage';\r\nimport ClusterPage from './compos/pages/ClusterPage';\r\nimport GearPage from './compos/pages/GearPage';\r\nimport GemPage from './compos/pages/GemPage';\r\n\r\nimport './styles.css';\r\nvar auras = require('./auraStats').default;\r\nvar clusters = require('./clusterJewels').default;\r\nvar trees = require('./treePassives').default;\r\n\r\nclass App extends Component {\r\n  state = {\r\n    auras,\r\n    clusters,\r\n    trees,\r\n\r\n    globalAuraEffect: 0,\r\n\r\n    auraEffect: {\r\n      asc: {\r\n        selected: 0,\r\n        options: [0,10,5],\r\n        total: function(){ return this.options[this.selected] }\r\n\r\n      },\r\n      tree: {\r\n        amount: 0,\r\n        total: function(){return this.amount}\r\n      },\r\n      cluster: {\r\n        amount: 0,\r\n      },\r\n      gear: {\r\n        amount: 0,\r\n        total: function(){return this.amount}\r\n      },\r\n      total: function(){\r\n        return this.asc.total() + this.tree.total() + this.cluster.amount + this.gear.total();\r\n      }\r\n    }\r\n  }\r\n\r\n  changeLevel(newLevel, auraIndex){\r\n\r\n    let newAuraState = [...this.state.auras];\r\n    newAuraState[auraIndex].level = Number(newLevel);\r\n    this.setState({ auras: newAuraState });\r\n\r\n  }\r\n\r\n  changeQuality(newQuality, auraIndex){\r\n    let newAuraState = [...this.state.auras];\r\n    newAuraState[auraIndex].quality = Number(newQuality);\r\n    this.setState({ auras: newAuraState });\r\n  }\r\n\r\n  changeAltQuality(newAltQuality, auraIndex){\r\n\r\n    let newAuraState = [...this.state.auras];\r\n    newAuraState[auraIndex].altQuality = Number(newAltQuality);\r\n    this.setState({ auras: newAuraState });\r\n  }\r\n\r\n  changeGenoLevel(newGenoLevel, auraIndex){\r\n\r\n    let newAuraState = [...this.state.auras];\r\n    newAuraState[auraIndex].generosityLevel = Number(newGenoLevel);\r\n    this.setState({ auras: newAuraState });\r\n  }\r\n\r\n  changeGenoType(newGenoType, auraIndex){\r\n\r\n    let newAuraState = [...this.state.auras];\r\n    newAuraState[auraIndex].generosityType = Number(newGenoType);\r\n    this.setState({ auras: newAuraState });\r\n  }\r\n\r\n   changeSpecificAuraEffect(newSpecificEffect, auraKey){\r\n    if(this.findAuraIndex(auraKey) !== null){\r\n      let auraIndex = this.findAuraIndex(auraKey);\r\n\r\n      let newAuraState = [...this.state.auras];\r\n      newAuraState[auraIndex].specificAuraEffect = Number(newSpecificEffect);\r\n      this.setState({ auras: newAuraState });\r\n    }\r\n   }\r\n\r\n   changeGlobalAuraEffect(newAuraEffect, page){\r\n\r\n    this.setState({auraEffect: {...this.state.auraEffect, [page]: {...this.state.auraEffect[page], amount: newAuraEffect}}});\r\n   }\r\n\r\n   changeClusterAmount(newAmount, clusterIndex){\r\n\r\n    let newClusterStats = [...this.state.clusters];\r\n    \r\n    newClusterStats[clusterIndex].amount = Number(newAmount);\r\n    this.setState({clusters: newClusterStats});\r\n   }\r\n\r\n   findAuraIndex(auraKey){\r\n    let index = null;\r\n    auras.forEach((aura) => {\r\n\r\n      if(aura.key === auraKey){\r\n        index = auras.indexOf(aura);\r\n      }\r\n    })\r\n    return index;\r\n   }\r\n   \r\n  render() {\r\n    console.log(this.state.auras[7]);\r\n      return ( \r\n        <section className=\"app\">\r\n          <div className='header'>\r\n            <h1>Nuk's PoE Aura stats calculator</h1>\r\n            <p>- Under Construction</p>\r\n          </div>\r\n          \r\n          <Router>\r\n            <NavBar />\r\n          <div className=\"content\">\r\n\r\n                <div className='page main'>\r\n                  <Switch>\r\n                    <Route path='/aurastatcalc/' exact\r\n\r\n                      render = {(props) => (\r\n                        <AscendancyPage {...props} auras={auras} />\r\n                      )}\r\n                    />\r\n\r\n                    <Route path='/aurastatcalc/tree'\r\n                    \r\n                      render = {(props) => (\r\n                        <TreePage {...props} auras={auras} \r\n                          trees={trees}\r\n                        />\r\n                      )}\r\n                    />\r\n\r\n                   <Route path='/aurastatcalc/clusters'\r\n                      \r\n                      render = {(props) => (\r\n                        <ClusterPage {...props} \r\n\r\n                          changeClusterAmount={this.changeClusterAmount.bind(this)}\r\n                          changeGlobalAuraEffect={this.changeGlobalAuraEffect.bind(this)}\r\n                          changeSpecificAuraEffect={this.changeSpecificAuraEffect.bind(this)}\r\n                          clusters={clusters}\r\n                         />\r\n                      )}\r\n                    />\r\n                    \r\n                    <Route path='/aurastatcalc/gear'\r\n                      \r\n                      render = {(props) => (\r\n                        <GearPage {...props} auras={auras} />\r\n                      )}\r\n                    />\r\n\r\n                    <Route path='/aurastatcalc/auras'\r\n                      \r\n                      render = {(props) => (\r\n                        <GemPage {...props} \r\n                          changeGenoType={this.changeGenoType.bind(this)}\r\n                          changeGenoLevel={this.changeGenoLevel.bind(this)}\r\n                          changeAltQuality={this.changeAltQuality.bind(this)} \r\n                          changeQuality={this.changeQuality.bind(this)} \r\n                          changeLevel={this.changeLevel.bind(this)} \r\n                          auras={auras} \r\n                       />\r\n                      )}\r\n                    />\r\n            \r\n                  </Switch> \r\n                </div>\r\n              \r\n            <OutputBox clusters={this.state.clusters} auras={this.state.auras} globalAuraEffect={this.state.auraEffect.total()} />\r\n          </div>\r\n          </Router>\r\n        </section>\r\n    );\r\n  }\r\n}\r\n \r\nexport default App;\r\n\r\n/*\r\n<MainPage gemLinksPage={this.state.gemLinksPage} content={this.state.mainPage} auras={this.state.auras} globalAuraEffect={this.state.globalAuraEffect} />\r\n*/\r\n\r\n/*\r\n<TreePage \r\n                    auras={auras}\r\n                  />\r\n\r\n                  <ClusterPage \r\n                    auras={auras} \r\n                  />\r\n\r\n                  <GearPage \r\n                    auras={auras} \r\n                  />\r\n\r\n                  <GemPage  \r\n                    changeGenoType={this.changeGenoType.bind(this)}\r\n                    changeGenoLevel={this.changeGenoLevel.bind(this)}\r\n                    changeAltQuality={this.changeAltQuality.bind(this)} \r\n                    changeQuality={this.changeQuality.bind(this)} \r\n                    changeLevel={this.changeLevel.bind(this)} \r\n                    auras={auras} \r\n                  />\r\n                  */","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}