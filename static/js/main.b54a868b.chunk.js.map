{"version":3,"sources":["auraStats.js","clusterJewels.js","compos/NavBar.js","compos/Aura.js","compos/Specials.js","compos/OutputBox.js","compos/pages/AscendancyPage.js","compos/pages/TreePage.js","compos/pages/clusterTabs/DisplayCluster.js","compos/pages/clusterTabs/DisplayClusters.js","compos/pages/ClusterPage.js","compos/pages/GearPage.js","compos/pages/gemLinkTabs/DisplayAura.js","compos/pages/gemLinkTabs/DisplayAuras.js","compos/pages/GemPage.js","App.js","index.js"],"names":["auraEffectCalc","value","auraPercent","auraMultiplier","Math","floor","printAddsEffect","effect","minToMax","auraEffect","min","max","printGainEffect","newValue","printPercentEffect","Aura","aurakey","title","effectOfQuality","statPerQuality","numberEffects","effectOfAura","this","key","level","quality","altQuality","specificAuraEffect","generosityLevel","generosityType","generosityEffect","generosityAuraEffect","printEffect","tempArray","i","length","push","printAuraEffect","printQuality","printQualityEffect","auras","clusterNodes","name","affects","amount","special","NavBar","e","page","target","console","log","props","changePage","className","to","Component","map","aura","globalEffect","tempString","effects","stat","printEffects","globalAuraEffect","Specials","clusters","cluster","printSpecials","OutputBox","AscendancyPage","onClick","src","alt","TreePage","DisplayCluster","changeClusterAmount","indexCluster","changeGlobalAuraEffect","calcClusterAuraEffect","onChange","onChangeCluster","bind","defaultValue","type","DisplayClusters","forEach","undefined","auraKey","changeSpecificAuraEffect","calculateClusterAuraEffect","indexOf","ClusterPage","GearPage","DisplayAura","changeLevel","indexAura","changeQuality","changeAltQuality","changeGenoType","changeGenoLevel","altQualityBonuses","toLowerCase","onChangeGenoType","onChangeGenoLevel","placeholder","onChangeLevel","onChangeQuality","onChangeAltQuality","altQualityThree","DisplayAuras","GemPage","genoIcon","require","default","App","state","asc","selected","options","total","tree","gear","newLevel","auraIndex","newAuraState","Number","setState","newQuality","newAltQuality","newGenoLevel","newGenoType","newSpecificEffect","findAuraIndex","newAuraEffect","newAmount","clusterIndex","newClusterStats","index","path","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"oJA8BIA,EAAiB,SAASC,EAAOC,GACjC,IAAIC,EAAmBD,EAAY,IAAI,EAEvC,OAAOE,KAAKC,MAAMJ,EAAQE,IAiD1BG,EAAkB,SAAUC,EAAQC,EAAUC,GAI9C,IAAIC,EAAMV,EAAeQ,EAAS,GAAIC,GAClCE,EAAMX,EAAeQ,EAAS,GAAIC,GAEtC,OAAOF,EAAO,GAAKG,EAAMH,EAAO,GAAKI,EAAMJ,EAAO,IAKlDK,EAAkB,SAAUL,EAAQN,EAAOQ,GAE3C,IAAII,EAAWb,EAAeC,EAAOQ,GAErC,OAAOF,EAAO,GAAKM,EAAWN,EAAO,IAKrCO,EAAqB,SAASP,EAAQN,EAAOQ,GAI7C,OAFeT,EAAeC,EAAOQ,GAEnBF,GAGhBQ,EACF,WAAYC,EAASC,EAAOC,EAAiBC,EAAgBC,EAAeC,GAAe,oBACvFC,KAAKC,IAAMP,EACXM,KAAKL,MAAQA,EACbK,KAAKE,MAAQ,EACbF,KAAKG,QAAU,EACfH,KAAKI,WAAa,EAClBJ,KAAKK,mBAAqB,EAC1BL,KAAKJ,gBAAkBA,EACvBI,KAAKH,eAAiBA,EACtBG,KAAKF,cAAgBA,EACrBE,KAAKD,aAAeA,EAEpBC,KAAKM,gBAAkB,EACvBN,KAAKO,eAAiB,EAEtBP,KAAKQ,iBAAmB,CAEpB,CAAC,GAED,CAAI,EACA,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAExC,CAAI,EACA,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAI5CR,KAAKS,qBAAuB,WAExB,OAAGT,KAAKO,eAAiB,GAAKP,KAAKM,gBAAkB,EAC1CN,KAAKQ,iBAAiBR,KAAKO,gBAAgBP,KAAKM,iBAC7C,GAGlBN,KAAKU,YAAc,SAAUvB,GAEzB,OAAmB,IAAfa,KAAKE,OAAeF,KAAKE,OAAS,GAnG5B,SAASH,EAAcD,EAAeI,EAAOf,GAG/D,IADA,IAAIwB,EAAY,GACPC,EAAI,EAAGA,EAAIb,EAAac,OAAQD,IACN,IAA3Bb,EAAaa,GAAGC,OAChBF,EAAUG,KAAKtB,EAAmBO,EAAaa,GAAId,EAAcc,GAAGV,GAAQf,IAE5C,IAA3BY,EAAaa,GAAGC,OAErBF,EAAUG,KAAKxB,EAAgBS,EAAaa,GAAId,EAAcc,GAAGV,GAAQf,IAEzC,IAA3BY,EAAaa,GAAGC,QACrBF,EAAUG,KAAK9B,EAAgBe,EAAaa,GAAId,EAAcc,GAAGV,GAAQf,IAIjF,OAAOwB,EAoFiBI,CAAgBf,KAAKD,aAAcC,KAAKF,cAAeE,KAAKE,MACvCF,KAAKK,mBAAqBlB,EAAaa,KAAKS,wBAItE,CAAC,KAIhBT,KAAKgB,aAAe,SAAU7B,GAE1B,OAAwB,IAApBa,KAAKI,YAAqC,IAAjBJ,KAAKG,QAhIrB,SAASP,EAAiBC,EAAgBM,EAAShB,GAExE,IAAIwB,EAAY,GAYhB,OAXmC,IAA3Bf,EAAgBiB,OAChBF,EAAUG,KAAKtB,EAAmBI,EAAiBC,EAAeM,EAAShB,IAE3C,IAA3BS,EAAgBiB,OAErBF,EAAUG,KAAKxB,EAAgBM,EAAiBC,EAAeM,EAAShB,IAExC,IAA3BS,EAAgBiB,QACrBF,EAAUG,KAAK9B,EAAgBY,EAAiBC,EAAeM,EAAShB,IAGzEwB,EAmHiBM,CAAmBjB,KAAKJ,gBAAgBI,KAAKI,YACzBJ,KAAKH,eAAeG,KAAKI,YAAcJ,KAAKG,QAC3CH,KAAKK,mBAAqBlB,EAAca,KAAKS,wBAIvE,CAAC,MAkCpBS,EAAQ,CAGR,IAAIzB,EACA,QAEA,QAEA,CACI,CAAC,IACD,CAAC,8BACD,CAAC,+BAGL,CAAC,EAAG,EAAG,KAEP,CACI,CAAI,CAAC,EAAG,GACJ,CAAC,GAAI,IAAO,CAAC,GAAI,IAAO,CAAC,GAAI,IAAO,CAAC,GAAI,IAAO,CAAC,GAAI,IAAO,CAAC,GAAI,IAAO,CAAC,GAAI,IAAO,CAAC,GAAI,IAAO,CAAC,GAAI,IAAO,CAAC,GAAI,IACjH,CAAC,GAAI,IAAO,CAAC,GAAI,IAAO,CAAC,GAAI,IAAO,CAAC,GAAI,KAAO,CAAC,GAAI,KAAO,CAAC,GAAI,KAAO,CAAC,GAAI,KAAO,CAAC,GAAI,KAAO,CAAC,IAAK,KAAM,CAAC,IAAK,KAClH,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAClH,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,MAEtH,CAAI,CAAC,EAAG,GACJ,CAAC,GAAI,IAAO,CAAC,GAAI,IAAO,CAAC,GAAI,IAAO,CAAC,GAAI,IAAO,CAAC,GAAI,IAAO,CAAC,GAAI,IAAO,CAAC,GAAI,IAAO,CAAC,GAAI,IAAO,CAAC,GAAI,IAAO,CAAC,GAAI,IACjH,CAAC,GAAI,IAAO,CAAC,GAAI,IAAO,CAAC,GAAI,IAAO,CAAC,GAAI,IAAO,CAAC,GAAI,IAAO,CAAC,GAAI,KAAO,CAAC,GAAI,KAAO,CAAC,GAAI,KAAO,CAAC,GAAI,KAAO,CAAC,GAAI,KACjH,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAClH,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,KAAM,CAAC,IAAK,OAI1H,CACI,CAAC,QAAS,OAAQ,2BAClB,CAAC,QAAS,OAAQ,4BAM1B,IAAIA,EACA,SAEA,SAEA,CACI,CAAC,IACD,CAAC,yCACD,CAAC,uDAGL,CAAC,EAAG,EAAG,GAEP,CACI,CAAI,EACA,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAExC,CAAI,EACA,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAI5C,CACI,CAAC,QAAS,4CACV,CAAC,uBAKT,IAAIA,EACA,QAEA,QAEA,CACI,CAAC,KACD,CAAC,KACD,CAAC,MAGL,CAAC,EAAG,EAAG,GAEP,CACI,CAAI,CAAC,EAAG,GACJ,CAAC,EAAG,IAAO,CAAC,EAAG,IAAO,CAAC,EAAG,IAAO,CAAC,EAAG,IAAO,CAAC,EAAG,IAAO,CAAC,EAAG,IAAO,CAAC,EAAG,IAAO,CAAC,EAAG,IAAO,CAAC,EAAG,KAAO,CAAC,EAAG,KACvG,CAAC,EAAG,KAAO,CAAC,EAAG,KAAO,CAAC,EAAG,KAAO,CAAC,GAAI,KAAM,CAAC,GAAI,KAAM,CAAC,GAAI,KAAM,CAAC,GAAI,KAAM,CAAC,GAAI,KAAM,CAAC,GAAI,KAAM,CAAC,GAAI,KACxG,CAAC,GAAI,KAAM,CAAC,GAAI,KAAM,CAAC,GAAI,KAAM,CAAC,GAAI,KAAM,CAAC,GAAI,KAAM,CAAC,GAAI,KAAM,CAAC,GAAI,KAAM,CAAC,GAAI,KAAM,CAAC,GAAI,KAAM,CAAC,GAAI,KACxG,CAAC,GAAI,KAAM,CAAC,GAAI,KAAM,CAAC,GAAI,KAAM,CAAC,GAAI,KAAM,CAAC,GAAI,KAAM,CAAC,GAAI,KAAM,CAAC,GAAI,KAAM,CAAC,GAAI,KAAM,CAAC,GAAI,KAAM,CAAC,GAAI,MAG5G,CAAI,EACA,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAI5C,CACI,CAAC,QAAS,OAAQ,gCAClB,CAAC,yCAIT,IAAIA,EACA,QAEA,QAEA,CACI,CAAC,IACD,CAAC,qCACD,CAAC,gCACD,CAAC,uBAAwB,aAG7B,CAAC,EAAG,GAAK,GAAK,GAEd,CACI,CAAI,EACA,EAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAExC,CAAI,EACA,EAAI,EAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAGxC,CAAI,EACA,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACpC,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EAAI,EACpC,EAAI,EAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAI5C,CACI,CAAC,4BACD,CAAC,0BACD,CAAC,gCAIT,IAAIA,EACA,cAEA,cAEA,CACI,CAAC,IACD,CAAC,qCACD,CAAC,qCAGL,CAAC,EAAG,GAAK,IAET,CACI,CAAI,EACA,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAExC,CAAI,EACA,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAI5C,CACI,CAAC,2BACD,CAAC,uCAIT,IAAIA,EACA,WAEA,WAEA,CACI,CAAC,IACD,CAAC,mCACD,CAAC,yBAGL,CAAC,EAAG,IAAM,KAEV,CACI,CAAI,EACA,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAExC,CAAI,EACA,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAI5C,CACI,CAAC,uBACD,CAAC,8CAIT,IAAIA,EACA,cAEA,iBAEA,CACI,CAAC,IACD,CAAC,mCACD,CAAC,qBAAsB,sBAG3B,CAAC,EAAG,EAAG,IAEP,CACI,CAAI,EACA,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3B,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3B,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3B,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAE/B,CAAI,EACA,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAI5C,CACI,CAAC,IAAK,gCACN,CAAC,IAAK,0BAId,IAAIA,EACA,aAEA,gBAEA,CACI,CAAC,IACD,CAAC,kCACD,CAAC,qBAAsB,sBAG3B,CAAC,EAAG,EAAG,IAEP,CACI,CAAI,EACA,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3B,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3B,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3B,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAE/B,CAAI,EACA,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAI5C,CACI,CAAC,IAAK,gCACN,CAAC,IAAK,0BAId,IAAIA,EACA,mBAEA,sBAEA,CACI,CAAC,IACD,CAAC,kCACD,CAAC,qBAAsB,2BAG3B,CAAC,EAAG,EAAG,IAEP,CACI,CAAI,EACA,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3B,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3B,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAC3B,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAE/B,CAAI,EACA,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAI5C,CACI,CAAC,IAAK,qCACN,CAAC,IAAK,+BAId,IAAIA,EACA,kBAEA,qBAEA,CACI,CAAC,IACD,CAAC,wCACD,CAAC,qBAAsB,2BAG3B,CAAC,EAAG,GAAK,IAET,CACI,CAAI,EACA,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GACpC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAI5C,CACI,CAAC,IAAK,qCAMHyB,a,gCC7iBf,OAoBeC,UApBI,CAEf,CAAEC,KAAM,uBAAwBC,QAAQ,GAAIlC,WAAY,EAAGmC,OAAQ,GAEnE,CAAEF,KAAM,uBAAwBC,QAAQ,GAAIlC,WAAY,EAAGmC,OAAQ,GAEnE,CAAEF,KAAM,uBAAwBC,QAAQ,GAAIlC,WAAY,EAAGmC,OAAQ,GAEnE,CAAEF,KAAM,qBAAsBC,QAAS,GAAIlC,WAAY,GAAImC,OAAQ,GAEnE,CAAEF,KAAM,wBAAyBC,QAAS,GAAIlC,WAAY,EAAGmC,OAAQ,GAErE,CAAEF,KAAM,qBAAsBC,QAAS,CAAC,QAAS,SAAU,SAAUlC,WAAY,GAAImC,OAAQ,GAE7F,CAAEF,KAAM,qBAAsBC,QAAS,CAAC,QAAS,aAAc,iBAAkBlC,WAAY,GAAImC,OAAQ,GAEzG,CAAEF,KAAM,iBAAkBC,QAAQ,CAAC,CAAC,aAAc,cAAe,oBAAqB,CAAC,oBAAqBlC,WAAY,CAAC,GAAI,IAAKmC,OAAQ,GAE1I,CAAEF,KAAM,oBAAqBnB,IAAI,oBAAqBsB,SAAS,EAAMD,OAAQ,EAAGrC,OAAQ,WAAY,MAAO,CAAC,GAAD,OAAI,GAAKe,KAAKsB,OAAd,iDAA6D,GAAKtB,KAAKsB,OAAvE,wC,qJCf1FE,E,2KAEJC,GACT,IAAMC,EAAOD,EAAEE,OAAOhD,MACtBiD,QAAQC,IAAIH,GACZ1B,KAAK8B,MAAMC,WAAWL,K,+BAItB,OACI,sBAAKM,UAAU,SAAf,UACI,qBAAKA,UAAU,YAAY,qBAAKA,UAAU,YACtC,cAAC,IAAD,CAAMC,GAAG,iBAAT,SACI,4CAER,qBAAKD,UAAU,YACX,cAAC,IAAD,CAAMC,GAAG,qBAAT,SACI,4CAER,qBAAKD,UAAU,YACX,cAAC,IAAD,CAAMC,GAAG,yBAAT,SACI,gDAER,qBAAKD,UAAU,YACX,cAAC,IAAD,CAAMC,GAAG,qBAAT,SACI,4CAER,qBAAKD,UAAU,YACX,cAAC,IAAD,CAAMC,GAAG,sBAAT,SACI,oD,GA7BYC,a,QCAfzC,E,uKACP,IAAD,OAmCL,OAAOO,KAAK8B,MAAMZ,MAAMiB,KAAI,SAACC,GAAD,OAjCT,SAACA,EAAMC,GAEtB,IAAIC,EAAa,GAEjB,GAAGF,EAAKlC,MAAQ,GAAKkC,EAAKlC,OAAS,GAAG,CAE/BkC,EAAK/B,mBAAqB,EAC7BiC,EAAWxB,KAAK,oBAAIkB,UAAU,YAAd,qBAAgCI,EAAKzC,MAArC,kBAAoDyC,EAAK/B,mBAAzD,4BAEhBiC,EAAWxB,KAAK,oBAAIkB,UAAU,YAAd,qBAAgCI,EAAKzC,MAArC,SAEhB,IAPkC,EAO9B4C,EAAUH,EAAK1B,YAAY2B,GAPG,cASdE,GATc,IASlC,IAAI,EAAJ,qBAA4B,CAAC,IAAnBtD,EAAkB,QACxBqD,EAAWxB,KAAK,oBAAIkB,UAAU,YAAd,SAA2B/C,MAVb,+BActC,GAAGmD,EAAKlC,MAAQ,GAAKkC,EAAKjC,QAAU,GAA8C,IAAzCiC,EAAKvC,eAAeuC,EAAKhC,YAAkB,CAChF,IADgF,EAC5EmC,EAAUH,EAAKpB,aAAaqB,GADgD,cAG5DE,GAH4D,IAGhF,IAAI,EAAJ,qBAA4B,CAAC,IAAnBtD,EAAkB,QACxBqD,EAAWxB,KAAK,oBAAIkB,UAAU,YAAd,SAA2B/C,MAJiC,+BAYpF,OAJ0B,IAAtBqD,EAAWzB,QACXyB,EAAWxB,KAAK,oBAAmBkB,UAAU,YAA7B,SAA0C,2DAAjCI,EAAKnC,MAG3BqC,EAAWH,KAAI,SAACK,GAAD,OAAWA,KAIjCC,CAAaL,EAAM,EAAKN,MAAMY,yB,GArCRR,aCDbS,E,uKAyBb,OAAO3C,KAAK8B,MAAMc,SAAST,KAAI,SAACU,GAAD,OAtBX,SAACA,GAEjB,IAAIP,EAAa,GAEjB,IAAuB,IAApBO,EAAQtB,SAAoBsB,EAAQvB,OAAS,EAAE,CAE9CgB,EAAWxB,KAAK,oBAAIkB,UAAU,YAAd,SAA2B,KAAMa,EAAQzB,KAAM,QAG/D,IAL8C,EAK1CmB,EAAUM,EAAQ5D,SALwB,cAO1BsD,GAP0B,IAO9C,IAAI,EAAJ,qBAA4B,CAAC,IAAnBtD,EAAkB,QACxBqD,EAAWxB,KAAK,oBAAIkB,UAAU,YAAd,SAA2B/C,MARD,+BAelD,OAJ0B,IAAtBqD,EAAWzB,QACXyB,EAAWxB,KAAK,oBAAsBkB,UAAU,YAAhC,SAA6C,2DAApCa,EAAQ5C,MAG9BqC,EAAWH,KAAI,SAACK,GAAD,OAAWA,KAIjCM,CAAcD,U,GA1BYX,aCGjBa,E,uKAGjB,OACI,qBAAKf,UAAU,cAAf,SACI,sBAAKA,UAAU,aAAf,UACI,sBAAKA,UAAU,SAAf,UACI,mDACA,mCACOhC,KAAK8B,MAAMY,iBADlB,mCACmE,uBADnE,0EAKA,cAAC,EAAD,CAAMxB,MAAOlB,KAAK8B,MAAMZ,MAAOwB,iBAAkB1C,KAAK8B,MAAMY,mBAC5D,cAAC,EAAD,CAAUE,SAAU5C,KAAK8B,MAAMc,oB,GAdZV,aCHlBc,E,uKAEb,OACI,sBAAKhB,UAAU,qBAAf,UACI,sBAAKA,UAAU,cAAf,UACI,wBAAQiB,QAAQ,GAAhB,SAAmB,qBAAKC,IAAI,2BAA4BC,IAAI,YAC5D,wBAAQF,QAAQ,GAAhB,SAAmB,qBAAKC,IAAI,8BAA+BC,IAAI,eAC/D,wBAAQF,QAAQ,GAAhB,SAAmB,qBAAKC,IAAI,2BAA4BC,IAAI,UAC5D,0BAEJ,qBAAKnB,UAAU,sB,GAVaE,aCAvBkB,E,uKAEb,OACI,qBAAKpB,UAAU,oBAAf,SACI,iD,GAJsBE,aCAjBmB,E,8KAED5B,GACZzB,KAAK8B,MAAMe,QAAQvB,OAASG,EAAEE,OAAOhD,MAErCqB,KAAK8B,MAAMwB,oBAAoB7B,EAAEE,OAAOhD,MAAOqB,KAAK8B,MAAMyB,cAC1DvD,KAAK8B,MAAM0B,uBAAuBxD,KAAK8B,MAAM2B,wBAAyB,a,+BAKtE,OACI,qBAAKzB,UAAU,QAAf,SACI,sBAAKA,UAAU,OAAf,UAEI,qBAAKkB,IAAI,0BAA0BC,IAAI,KAEvC,sBAAMnB,UAAU,aAAhB,SAA8BhC,KAAK8B,MAAMe,QAAQzB,OAEjD,qBAAKY,UAAU,SAAf,SACI,uBAAO0B,SAAU1D,KAAK2D,gBAAgBC,KAAK5D,MAAO6D,aAAc7D,KAAK8B,MAAMe,QAAQvB,OAAQwC,KAAK,SAAS1E,IAAI,IAAIC,IAAI,kB,GApBjG6C,aCGvB6B,E,2LAEY,IAAD,OAEpB5E,EAAa,EA6BjB,OA3BAa,KAAK8B,MAAMc,SAASoB,SAAQ,SAACnB,GACzB,IAAuB,IAApBA,EAAQtB,cAIP,GAA+B,IAA3BsB,EAAQxB,QAAQR,OAChB1B,GAAe0D,EAAQ1D,WAAa0D,EAAQvB,YAG5C,QAAiC2C,IAA9BpB,EAAQ1D,WAAW0B,OAElBgC,EAAQxB,QAAQ2C,SAAQ,SAACE,GACrB,EAAKpC,MAAMqC,yBAA0BtB,EAAQ1D,WAAa0D,EAAQvB,OAAS4C,WAI/E,IAFI,IAAD,WAEMtD,GAELiC,EAAQxB,QAAQT,GAAGoD,SAAQ,SAACE,GACxB,EAAKpC,MAAMqC,yBAA0BtB,EAAQ1D,WAAWyB,GAAKiC,EAAQvB,OAAS4C,OAH7EtD,EAAI,EAAGA,EAAGiC,EAAQxB,QAAQR,OAAQD,IAAK,EAAvCA,MAWlBzB,I,+BAGD,IAAD,OACL,OAAOa,KAAK8B,MAAMc,SAAST,KAAI,SAACU,GAAD,OACvB,cAAC,EAAD,CAEIS,oBAAqB,EAAKxB,MAAMwB,oBAChCG,sBAAuB,EAAKW,2BAA2BR,KAAK,GAC5DJ,uBAAwB,EAAK1B,MAAM0B,uBACnCX,QAASA,EACTU,aAAc,EAAKzB,MAAMc,SAASyB,QAAQxB,Y,GA5CjBX,aCFxBoC,E,uKAEb,OACI,sBAAKtC,UAAU,mBAAf,UACI,0CACA,cAAC,EAAD,CAEIsB,oBAAqBtD,KAAK8B,MAAMwB,oBAChCE,uBAAwBxD,KAAK8B,MAAM0B,uBACnCW,yBAA0BnE,KAAK8B,MAAMqC,yBACrCvB,SAAU5C,KAAK8B,MAAMc,kB,GAVAV,aCDpBqC,E,uKAEb,OACI,qBAAKvC,UAAU,oBAAf,SACI,iD,GAJsBE,aCAjBsC,E,4KAIH/C,GAEVzB,KAAK8B,MAAMM,KAAKlC,MAAQuB,EAAEE,OAAOhD,MACjCqB,KAAK8B,MAAM2C,YAAYhD,EAAEE,OAAOhD,MAAOqB,KAAK8B,MAAM4C,a,sCAGtCjD,GAEZzB,KAAK8B,MAAMM,KAAKjC,QAAUsB,EAAEE,OAAOhD,MACnCqB,KAAK8B,MAAM6C,cAAclD,EAAEE,OAAOhD,MAAOqB,KAAK8B,MAAM4C,a,yCAGrCjD,GAEfzB,KAAK8B,MAAMM,KAAKhC,WAAaqB,EAAEE,OAAOhD,MACtCqB,KAAK8B,MAAM8C,iBAAiBnD,EAAEE,OAAOhD,MAAOqB,KAAK8B,MAAM4C,a,uCAG1CjD,GACbzB,KAAK8B,MAAMM,KAAK7B,eAAiBkB,EAAEE,OAAOhD,MAC1CqB,KAAK8B,MAAM+C,eAAepD,EAAEE,OAAOhD,MAAOqB,KAAK8B,MAAM4C,a,wCAGvCjD,GACdzB,KAAK8B,MAAMM,KAAK9B,gBAAkBmB,EAAEE,OAAOhD,MAC3CqB,KAAK8B,MAAMgD,gBAAgBrD,EAAEE,OAAOhD,MAAOqB,KAAK8B,MAAM4C,a,sCAI1CK,GAEZ,OAAGA,EAAkBlE,OAAS,EACtB,wBAAQlC,MAAM,IAAd,wBACI,O,+BAIZ,OAEI,sBAAKqD,UAAU,QAAf,UACI,sBAAKA,UAAU,aAAf,UACI,qBAAKkB,IAAK,YAAalD,KAAK8B,MAAMM,KAAKnC,IAAI+E,cAAe,OAAQ7B,IAAI,MACtE,sBAAMnB,UAAU,aAAhB,SAA8BhC,KAAK8B,MAAMM,KAAKzC,QAE9C,sBAAKqC,UAAU,SAAf,UAEA,qBAAKkB,IAAI,yBAAyBC,IAAI,MAElC,yBAAQO,SAAU1D,KAAKiF,iBAAiBrB,KAAK5D,MAAO6D,aAAc7D,KAAK8B,MAAMM,KAAK7B,eAAlF,UACI,wBAAQ5B,MAAM,IAAd,kBACA,wBAAQA,MAAM,IAAd,wBACA,wBAAQA,MAAM,IAAd,yBAGJ,uBAAO+E,SAAU1D,KAAKkF,kBAAkBtB,KAAK5D,MAAO6D,aAAc7D,KAAK8B,MAAMM,KAAK9B,gBAAiBwD,KAAK,SAAS1E,IAAI,IAAIC,IAAI,KAAK8F,YAAY,cAGtJ,sBAAKnD,UAAU,OAAf,UACA,qBAAKkB,IAAK,WAAYlD,KAAK8B,MAAMM,KAAKnC,IAAI+E,cAAe,OAAU7B,IAAI,MAGnE,sBAAKnB,UAAU,SAAf,UACI,sBAAMA,UAAU,UAAhB,mBACA,uBAAO0B,SAAU1D,KAAKoF,cAAcxB,KAAK5D,MAAW6D,aAAc7D,KAAK8B,MAAMM,KAAKlC,MAAO4D,KAAK,SAAS1E,IAAI,IAAIC,IAAI,KAAM8F,YAAY,QACrI,sBAAMnD,UAAU,UAAhB,oBACA,uBAAO0B,SAAU1D,KAAKqF,gBAAgBzB,KAAK5D,MAAO6D,aAAc7D,KAAK8B,MAAMM,KAAKjC,QAAS2D,KAAK,SAAS1E,IAAI,IAAIC,IAAI,MAAM8F,YAAY,SACrI,sBAAMnD,UAAU,UAAhB,mBACA,yBAAQ0B,SAAU1D,KAAKsF,mBAAmB1B,KAAK5D,MAAO6D,aAAc7D,KAAK8B,MAAMM,KAAKhC,WAApF,UACI,wBAAQzB,MAAM,IAAd,0BACA,wBAAQA,MAAM,IAAd,0BACA,wBAAQA,MAAM,IAAd,0BACCqB,KAAKuF,gBAAgBvF,KAAK8B,MAAMM,KAAKxC,iC,GA3EzBsC,aCMpBsD,E,uKAEP,IAAD,OACL,OAAOxF,KAAK8B,MAAMZ,MAAMiB,KAAI,SAACC,GAAD,OACxB,cAAC,EAAD,CAEIyC,eAAgB,EAAK/C,MAAM+C,eAC3BC,gBAAiB,EAAKhD,MAAMgD,gBAC5BF,iBAAkB,EAAK9C,MAAM8C,iBAC7BD,cAAe,EAAK7C,MAAM6C,cAC1BF,YAAa,EAAK3C,MAAM2C,YACxBrC,KAAMA,EACNsC,UAAW,EAAK5C,MAAMZ,MAAMmD,QAAQjC,Y,GAZVF,aCLrBuD,E,+KACAhE,GACbG,QAAQC,IAAI7B,KAAK0F,UACjB1F,KAAK0F,SAAWjE,EAAEE,OAAOhD,Q,+BAKzB,OACI,sBAAKqD,UAAU,mBAAf,UACY,uCACA,cAAC,EAAD,CACI6C,eAAgB7E,KAAK8B,MAAM+C,eAC3BC,gBAAiB9E,KAAK8B,MAAMgD,gBAC5BF,iBAAkB5E,KAAK8B,MAAM8C,iBAC7BD,cAAe3E,KAAK8B,MAAM6C,cAC1BF,YAAazE,KAAK8B,MAAM2C,YACxBvD,MAAOlB,KAAK8B,MAAMZ,e,GAjBTgB,aCQjChB,G,MAAQyE,EAAQ,IAAeC,SAC/BhD,EAAW+C,EAAQ,IAAmBC,QAgL3BC,E,4MA7KbC,MAAQ,CACN5E,QACA0B,WAEAF,iBAAkB,EAElBvD,WAAY,CACV4G,IAAK,CACHC,SAAU,EACVC,QAAS,CAAC,EAAE,GAAG,GACfC,MAAO,WAAY,OAAOlG,KAAKiG,QAAQjG,KAAKgG,YAG9CG,KAAM,CACJ7E,OAAQ,EACR4E,MAAO,WAAW,OAAOlG,KAAKsB,SAEhCuB,QAAS,CACPvB,OAAQ,GAEV8E,KAAM,CACJ9E,OAAQ,EACR4E,MAAO,WAAW,OAAOlG,KAAKsB,SAEhC4E,MAAO,WACL,OAAOlG,KAAK+F,IAAIG,QAAUlG,KAAKmG,KAAKD,QAAUlG,KAAK6C,QAAQvB,OAAStB,KAAKoG,KAAKF,W,0DAKxEG,EAAUC,GAEpB,IAAIC,EAAY,YAAOvG,KAAK8F,MAAM5E,OAClCqF,EAAaD,GAAWpG,MAAQsG,OAAOH,GACvCrG,KAAKyG,SAAS,CAAEvF,MAAOqF,M,oCAIXG,EAAYJ,GACxB,IAAIC,EAAY,YAAOvG,KAAK8F,MAAM5E,OAClCqF,EAAaD,GAAWnG,QAAUqG,OAAOE,GACzC1G,KAAKyG,SAAS,CAAEvF,MAAOqF,M,uCAGRI,EAAeL,GAE9B,IAAIC,EAAY,YAAOvG,KAAK8F,MAAM5E,OAClCqF,EAAaD,GAAWlG,WAAaoG,OAAOG,GAC5C3G,KAAKyG,SAAS,CAAEvF,MAAOqF,M,sCAGTK,EAAcN,GAE5B,IAAIC,EAAY,YAAOvG,KAAK8F,MAAM5E,OAClCqF,EAAaD,GAAWhG,gBAAkBkG,OAAOI,GACjD5G,KAAKyG,SAAS,CAAEvF,MAAOqF,M,qCAGVM,EAAaP,GAE1B,IAAIC,EAAY,YAAOvG,KAAK8F,MAAM5E,OAClCqF,EAAaD,GAAW/F,eAAiBiG,OAAOK,GAChD7G,KAAKyG,SAAS,CAAEvF,MAAOqF,M,+CAGCO,EAAmB5C,GAC3C,GAAmC,OAAhClE,KAAK+G,cAAc7C,GAAkB,CACtC,IAAIoC,EAAYtG,KAAK+G,cAAc7C,GAE/BqC,EAAY,YAAOvG,KAAK8F,MAAM5E,OAClCqF,EAAaD,GAAWjG,mBAAqBmG,OAAOM,GACpD9G,KAAKyG,SAAS,CAAEvF,MAAOqF,O,6CAIHS,EAAetF,GAErC1B,KAAKyG,SAAS,CAACtH,WAAW,2BAAKa,KAAK8F,MAAM3G,YAAjB,kBAA8BuC,EAA9B,2BAAyC1B,KAAK8F,MAAM3G,WAAWuC,IAA/D,IAAsEJ,OAAQ0F,U,0CAGpFC,EAAWC,GAE9B,IAAIC,EAAe,YAAOnH,KAAK8F,MAAMlD,UAErCuE,EAAgBD,GAAc5F,OAASkF,OAAOS,GAC9CjH,KAAKyG,SAAS,CAAC7D,SAAUuE,M,oCAGZjD,GACb,IAAIkD,EAAQ,KAOZ,OANAlG,EAAM8C,SAAQ,SAAC5B,GAEVA,EAAKnC,MAAQiE,IACdkD,EAAQlG,EAAMmD,QAAQjC,OAGnBgF,I,+BAGC,IAAD,OAEL,OADFxF,QAAQC,IAAI7B,KAAK8F,MAAM5E,MAAM,IAEzB,0BAASc,UAAU,MAAnB,UACE,sBAAKA,UAAU,SAAf,UACE,iEACA,wDAGF,eAAC,IAAD,WACE,cAAC,EAAD,IACF,sBAAKA,UAAU,UAAf,UAEM,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOqF,KAAK,iBAAiBC,OAAK,EAEhCC,OAAU,SAACzF,GAAD,OACR,cAAC,EAAD,2BAAoBA,GAApB,IAA2BZ,MAAOA,QAItC,cAAC,IAAD,CAAOmG,KAAK,qBAEVE,OAAU,SAACzF,GAAD,OACR,cAAC,EAAD,2BAAcA,GAAd,IAAqBZ,MAAOA,QAIjC,cAAC,IAAD,CAAOmG,KAAK,yBAETE,OAAU,SAACzF,GAAD,OACR,cAAC,EAAD,2BAAiBA,GAAjB,IAEEwB,oBAAqB,EAAKA,oBAAoBM,KAAK,GACnDJ,uBAAwB,EAAKA,uBAAuBI,KAAK,GACzDO,yBAA0B,EAAKA,yBAAyBP,KAAK,GAC7DhB,SAAUA,QAKhB,cAAC,IAAD,CAAOyE,KAAK,qBAEVE,OAAU,SAACzF,GAAD,OACR,cAAC,EAAD,2BAAcA,GAAd,IAAqBZ,MAAOA,QAIhC,cAAC,IAAD,CAAOmG,KAAK,sBAEVE,OAAU,SAACzF,GAAD,OACR,cAAC,EAAD,2BAAaA,GAAb,IACE+C,eAAgB,EAAKA,eAAejB,KAAK,GACzCkB,gBAAiB,EAAKA,gBAAgBlB,KAAK,GAC3CgB,iBAAkB,EAAKA,iBAAiBhB,KAAK,GAC7Ce,cAAe,EAAKA,cAAcf,KAAK,GACvCa,YAAa,EAAKA,YAAYb,KAAK,GACnC1C,MAAOA,aAQrB,cAAC,EAAD,CAAW0B,SAAU5C,KAAK8F,MAAMlD,SAAU1B,MAAOlB,KAAK8F,MAAM5E,MAAOwB,iBAAkB1C,KAAK8F,MAAM3G,WAAW+G,uB,GAtKrGhE,aCVlBsF,IAASD,OACP,cAAC,IAAME,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b54a868b.chunk.js","sourcesContent":["/**\r\n * Explination on how Auras are Structured.\r\n * \r\n * Each value of auras is the name of the aura in Capitals example Hatred -> HATRED\r\n * each auras has the following attributes \r\n * \r\n * title: its name\r\n * level: whatever level its at.\r\n * quality: whatever quality the aura is at.\r\n * altQuality: what alternative quality is selected (this should be between 0 and 2 usually)\r\n * specificAuraEffect: this is where the value of specific aura effect is stored (such as Hatred has #% increased Aura Effect)\r\n * \r\n * effectOfQuality: this is an array of Arrays, it containes whatever quality bonuses a given alt quality provides\r\n * statPerQuality: for a given index statPerQuality is the bonus per quality given for the same index of effectOfQuality\r\n * \r\n * numberEffects: this contains an array for for each state line an aura gives. if a state has to values (a min and max) they are also in an array themselves\r\n * Example: 'Adds 16 to 48 Lightning Damage to Attacks' AND '21% more Lightning Damage with spells' at Level 20.\r\n * will be stored as following an array of length 2(2 mods), index 0 will have the Adds X to Y .. \r\n * such that at level 20 index20 will be -> [..,[16, 48]] \r\n * while the 2nd effect will be at index 1, and index 20 of that array with [.., 21]\r\n * \r\n * effectOfAura: this is also an array that matches the array of NumberEffects it will have its given effects split into diffrent arrays\r\n * if some text is split by numbers that line will also be split in the array. \r\n * Example: Adds 16 to 48 Lightning Damage to Attacks -> ['Adds ', ' to ', Lightning Damage to Attacks']\r\n * \r\n * printEffect(auraEffect){}: takes in the globalAuraEffect and returns an Array with all Bonuses Given by an Aura.\r\n * \r\n * printQuality(auraEffect){}: takes in the GlobalAuraEffect and returns an Array with all the bonus given by the Auras Quality\r\n */\r\n\r\nvar auraEffectCalc = function(value, auraPercent){ \r\n    let auraMultiplier = ((auraPercent/100+1)); \r\n\r\n    return Math.floor(value * auraMultiplier);\r\n\r\n}\r\n\r\nvar printQualityEffect = function(effectOfQuality, statPerQuality, quality, auraEffect){\r\n\r\n    let tempArray = [];\r\n        if (effectOfQuality.length === 1)\r\n            tempArray.push(printPercentEffect(effectOfQuality, statPerQuality*quality, auraEffect));\r\n        \r\n        else if (effectOfQuality.length === 2)\r\n            \r\n            tempArray.push(printGainEffect(effectOfQuality, statPerQuality*quality, auraEffect));\r\n        \r\n        else if (effectOfQuality.length === 3)\r\n            tempArray.push(printAddsEffect(effectOfQuality, statPerQuality*quality, auraEffect));\r\n\r\n\r\n    return tempArray;\r\n}\r\n\r\nvar printAuraEffect = function(effectOfAura, numberEffects, level, auraEffect){\r\n\r\n    let tempArray = [];\r\n    for (let i = 0; i < effectOfAura.length; i++){\r\n        if (effectOfAura[i].length === 1)\r\n            tempArray.push(printPercentEffect(effectOfAura[i], numberEffects[i][level], auraEffect));\r\n        \r\n        else if (effectOfAura[i].length === 2)\r\n            \r\n            tempArray.push(printGainEffect(effectOfAura[i], numberEffects[i][level], auraEffect));\r\n        \r\n        else if (effectOfAura[i].length === 3)\r\n            tempArray.push(printAddsEffect(effectOfAura[i], numberEffects[i][level], auraEffect));\r\n\r\n    }\r\n\r\n    return tempArray;\r\n}\r\n/*\r\n    Prints Adds type Aura Effects\r\n\r\n    examples: effect -> Array [Adds, to, Something]\r\n              minToMax -> Array [min, max]\r\n              \r\n              returns calculated values based on aura effect in format\r\n\r\n              Adds min to max Something     \r\n*/\r\nvar printAddsEffect = function (effect, minToMax, auraEffect) {\r\n\r\n    //let auraEffectMultiplier = Math.floor((auraEffect/100)+1);\r\n\r\n    let min = auraEffectCalc(minToMax[0], auraEffect);\r\n    let max = auraEffectCalc(minToMax[1], auraEffect);\r\n\r\n    return effect[0] + min + effect[1] + max + effect[2];\r\n};\r\n\r\n//print Text Value Text Effects \r\n//Example: Gain X Physical as...\r\nvar printGainEffect = function (effect, value, auraEffect){\r\n\r\n    let newValue = auraEffectCalc(value, auraEffect);\r\n\r\n    return effect[0] + newValue + effect[1];\r\n}\r\n\r\n//print Value Text Effects\r\n//Example: X% more damage\r\nvar printPercentEffect = function(effect, value, auraEffect){\r\n\r\n    let newValue = auraEffectCalc(value, auraEffect);\r\n\r\n    return newValue + effect;\r\n}\r\n\r\nclass Aura {\r\n    constructor(aurakey, title, effectOfQuality, statPerQuality, numberEffects, effectOfAura) {\r\n        this.key = aurakey;\r\n        this.title = title;\r\n        this.level = 0;\r\n        this.quality = 0;\r\n        this.altQuality = 0;\r\n        this.specificAuraEffect = 0;\r\n        this.effectOfQuality = effectOfQuality;\r\n        this.statPerQuality = statPerQuality;\r\n        this.numberEffects = numberEffects;\r\n        this.effectOfAura = effectOfAura;\r\n\r\n        this.generosityLevel = 0;\r\n        this.generosityType = 0;\r\n        \r\n        this.generosityEffect = [\r\n\r\n            [0],\r\n\r\n            [   0,\r\n                20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\r\n                30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\r\n                40, 41, 42, 43, 44, 45, 46, 47, 48, 49,\r\n                49, 50, 50, 51, 51, 52, 52, 53, 53, 54\r\n            ],\r\n            [   0,\r\n                41, 43, 45, 47, 49, 51, 53, 55, 57, 59,\r\n                60, 61, 62, 63, 64, 65, 66, 67, 68, 69,\r\n                69, 69, 69, 69, 69, 69, 69, 69, 69, 69,\r\n                69, 69, 69, 69, 69, 69, 69, 69, 69, 69\r\n            ],\r\n        ];\r\n\r\n        this.generosityAuraEffect = function(){\r\n\r\n            if(this.generosityType > 0 && this.generosityLevel > 0 ){\r\n                return this.generosityEffect[this.generosityType][this.generosityLevel];\r\n            } else return 0;\r\n        }\r\n\r\n        this.printEffect = function (auraEffect) {\r\n            let tempArray = [];\r\n            if (this.level !== 0 && this.level <= 40) {\r\n                tempArray = printAuraEffect(this.effectOfAura, this.numberEffects, this.level, \r\n                                                (this.specificAuraEffect + auraEffect + this.generosityAuraEffect()));\r\n                return tempArray;\r\n\r\n            } else\r\n                return [''];\r\n\r\n        };\r\n\r\n        this.printQuality = function (auraEffect) {\r\n            let tempArray = [];\r\n            if (this.altQuality !== 0 && this.quality !== 0) {\r\n                tempArray = printQualityEffect(this.effectOfQuality[this.altQuality], \r\n                                                this.statPerQuality[this.altQuality],  this.quality, \r\n                                                (this.specificAuraEffect + auraEffect +  this.generosityAuraEffect()));\r\n                return tempArray;\r\n\r\n            } else\r\n                return [''];\r\n\r\n        };\r\n    }\r\n}\r\n\r\n/* Template for new Aura.\r\n\r\nAURA: new Aura(\r\n    //Title \r\n    '',\r\n    //AlternateQualityBonuses \r\n    [\r\n        [''],\r\n        [''],\r\n        [''],\r\n    ],\r\n    //Values Per Quality of the diffrent alt Qualities\r\n    [0, 0, 0],\r\n    //Values at each level for the aura\r\n    [\r\n        [],\r\n        [],\r\n    ],\r\n    //Aura Bonuses\r\n    [\r\n        [''],\r\n        [''],\r\n    ]\r\n),    \r\n\r\n*/\r\n\r\n\r\nvar auras = [\r\n  //-----------------------------------------------------\r\n  //Anger Stats\r\n    new Aura(\r\n        'ANGER',\r\n        //Title \r\n        \"Anger\",\r\n        //AlternateQualityBonuses \r\n        [\r\n            [\"\"],\r\n            [\"% increased Burning Damage\"],\r\n            [\"% increased Movement Speed\"],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 1, 0.25],\r\n        //Values at each level for the aura\r\n        [\r\n            [   [0, 0],\r\n                [16, 23],   [19, 27],   [22, 31],   [25, 36],   [29, 41],   [33, 47],   [37, 53],   [42, 60],   [48, 68],   [52, 74],\r\n                [56, 80],   [60, 86],   [65, 93],   [70, 100],  [76, 108],  [82, 116],  [88, 125],  [94, 135],  [101, 145], [109, 155],\r\n                [117, 167], [125, 179], [134, 191], [143, 205], [154, 219], [164, 235], [176, 251], [188, 268], [201, 287], [214, 306],\r\n                [221, 316], [229, 327], [236, 337], [244, 349], [252, 360], [260, 372], [269, 384], [278, 397], [287, 409], [296, 423]\r\n            ],\r\n            [   [0, 0], \r\n                [15, 21],   [17, 24],   [20, 28],   [23, 32],   [26, 37],   [30, 42],   [34, 48],   [39, 54],   [44, 61],   [47, 66], \r\n                [51, 72],   [55, 78],   [60, 84],   [64, 90],   [69, 97],   [75, 105],  [80, 113],  [86, 121],  [93, 130],  [99, 140], \r\n                [107, 150], [114, 161], [122, 172], [131, 184], [140, 197], [150, 211], [161, 226], [172, 241], [183, 258], [196, 275], \r\n                [202, 285], [209, 294], [216, 304], [223, 314], [230, 324], [238, 335], [246, 346], [254, 357], [262, 368], [270, 380]\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            [\"Adds \", \" to \", \" Fire Damage to Attacks\"],\r\n            [\"Adds \", \" to \", \" Fire Damage to Spells\"],\r\n        ]\r\n    ),\r\n\r\n  //-----------------------------------------------------\r\n  //Hatred\r\n    new Aura(\r\n        'HATRED',\r\n        //Title \r\n        'Hatred',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% increased Chill and Freeze Duration'],\r\n            ['% increased Movement Speed while on Chilled Ground'],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 1, 1],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0, \r\n                16, 16, 17, 17, 18, 18, 19, 19, 20, 20, \r\n                21, 21, 22, 22, 23, 23, 24, 24, 25, 25, \r\n                26, 26, 27, 27, 28, 28, 29, 29, 30, 30, \r\n                30, 31, 31, 31, 31, 32, 32, 32, 32, 33\r\n            ],\r\n            [   0,\r\n                14, 14, 14, 14, 15, 15, 15, 15, 16, 16,\r\n                16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\r\n                19, 19, 19, 19, 20, 20, 20, 20, 21, 21,\r\n                21, 21, 21, 21, 21, 22, 22, 22, 22, 22\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['Gain ', ' of Physical Damage as Extra Cold Damage'],\r\n            ['% more Cold Dmage'],\r\n        ]\r\n    ),\r\n  //-------------------------------\r\n  //Wrath\r\n    new Aura(\r\n        'WRATH',\r\n        //Title \r\n        'Wrath',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [' '],\r\n            [' '],\r\n            [' '],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0, 0], \r\n        //Values at each level for the aura\r\n        [\r\n            [   [0, 0], \r\n                [2, 37],   [3, 43],   [3, 50],   [4, 57],   [4, 66],   [5, 75],   [5, 85],   [6, 97],   [7, 109],  [7, 118], \r\n                [8, 128],  [9, 138],  [9, 149],  [10, 161], [11, 173], [12, 186], [13, 200], [13, 215], [14, 231], [16, 248], \r\n                [17, 267], [18, 286], [19, 306], [20, 328], [22, 351], [23, 375], [25, 401], [27, 429], [29, 458], [31, 490], \r\n                [32, 506], [33, 523], [34, 540], [35, 558], [36, 576], [37, 595], [38, 614], [40, 634], [41, 655], [42, 676]\r\n\r\n            ],\r\n            [   0, \r\n                15, 15, 15, 16, 16, 16, 17, 17, 17, 18, \r\n                18, 18, 19, 19, 19, 20, 20, 20, 21, 21, \r\n                21, 22, 22, 22, 23, 23, 23, 24, 24, 24, \r\n                24, 25, 25, 25, 25, 25, 25, 26, 26, 26\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['Adds ', ' to ', ' Lightning Damage to Attacks'],\r\n            ['% more Lightning Damage with spells'],\r\n        ]\r\n    ),\r\n\r\n    new Aura(\r\n        'HASTE',\r\n        //Title \r\n        'Haste',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% increased Totem Placement speed'],\r\n            ['% increased Projectile Speed'],\r\n            ['Buffs on You expire ', '% faster']\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0.5, 0.5, 1],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                9,  10, 10, 10, 11, 11, 11, 12, 12, 12, \r\n                13, 13, 13, 14, 14, 15, 15, 16, 16, 16,\r\n                17, 17, 17, 18, 18, 18, 19, 19, 19, 20, \r\n                20, 20, 20, 20, 20, 21, 21, 21, 21, 21\r\n            ],\r\n            [   0,\r\n                9,  9,  10, 10, 10, 11, 11, 11, 12, 12, \r\n                12, 13, 13, 13, 14, 14, 15, 15, 16, 16, \r\n                16, 17, 17, 17, 18, 18, 18, 19, 19, 19, \r\n                19, 20, 20, 20, 20, 20, 20, 21, 21, 21\r\n\r\n            ],\r\n            [   0,\r\n                4,  4,  4,  5,  5,  5,  6,  6,  6,  7,\r\n                7,  7,  8,  8,  8,  8,  8,  8,  8,  9,\r\n                9,  9,  10, 10, 10, 11, 11, 11, 12, 12,\r\n                12, 12, 12, 13, 13, 13, 13, 13, 13, 14\r\n            ]\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['% increased Attack Speed'],\r\n            ['% increased Cast Speed'],\r\n            ['% increased Movement Speed']\r\n        ]\r\n    ),\r\n\r\n    new Aura(\r\n        'MALEVOLENCE',\r\n        //Title \r\n        'Malevolence',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% increased Skill Effect Duration'],\r\n            ['% increased Damage with Ailments'],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0.5, 0.5],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                14, 14, 14, 15, 15, 15, 16, 16, 16, 17, \r\n                17, 17, 18, 18, 18, 19, 19, 19, 20, 20, \r\n                20, 21, 21, 21, 22, 22, 22, 23, 23, 23, \r\n                23, 24, 24, 24, 24, 24, 24, 25, 25, 25\r\n            ],\r\n            [   0,\r\n                10, 10, 11, 11, 12, 12, 13, 13, 14, 14, \r\n                15, 15, 16, 16, 17, 17, 18, 18, 19, 19, \r\n                20, 20, 21, 21, 22, 22, 23, 23, 24, 24, \r\n                24, 25, 25, 25, 25, 26, 26, 26, 26, 27\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['% more Damage over Time'],\r\n            ['% increased Skill Effect Duration'],\r\n        ]\r\n    ),  \r\n\r\n    new Aura(\r\n        'ZEALOTRY',\r\n        //Title \r\n        'Zealotry',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% to Critical Strike Multiplier'],\r\n            ['% of Life per second'],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0.25, 0.02],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                10, 10, 10, 11, 11, 11, 12, 12, 12, 12,\r\n                13, 13, 13, 14, 14, 14, 14, 15, 15, 15,\r\n                16, 16, 16, 16, 17, 17, 17, 18, 18, 18,\r\n                18, 18, 19, 19, 19, 19, 19, 19, 19, 20\r\n            ],\r\n            [   0,\r\n                20, 21, 22, 23, 24, 25, 26, 27, 28, 29, \r\n                30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \r\n                40, 41, 42, 43, 44, 45, 46, 47, 48, 49, \r\n                49, 50, 50, 51, 51, 52, 52, 53, 53, 54\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['% more Spell Damage'],\r\n            ['% increased Spell Critical Strike Chance'],\r\n        ]\r\n    ),\r\n\r\n    new Aura(\r\n        'PURITY_FIRE',\r\n        //Title \r\n        'Purity of Fire',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% chance to avoid being Ignited'],\r\n            ['Damage Penetrates ', '% Fire Resistance'],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 1, 0.2],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                0, 0, 0, 0, 1, 1, 1, 1, 1, 1,\r\n                2, 2, 2, 2, 2, 2, 3, 3, 3, 4,\r\n                4, 4, 5, 5, 5, 5, 5, 5, 5, 5,\r\n                5, 5, 5, 5, 5, 5, 5, 5, 5, 5\r\n            ],\r\n            [   0,\r\n                22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\r\n                32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\r\n                42, 43, 44, 45, 46, 47, 48, 49, 50, 51,\r\n                51, 52, 52, 53, 53, 54, 54, 55, 55, 56\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['+', '% to maximum Fire Resistance'],\r\n            ['+', '% to Fire Resistance'],\r\n        ]\r\n    ),    \r\n\r\n    new Aura(\r\n        'PURITY_ICE',\r\n        //Title \r\n        'Purity of Ice',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% chance to avoid being Frozen'],\r\n            ['Damage Penetrates ', '% Cold Resistance'],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 1, 0.2],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                0, 0, 0, 0, 1, 1, 1, 1, 1, 1,\r\n                2, 2, 2, 2, 2, 2, 3, 3, 3, 4,\r\n                4, 4, 5, 5, 5, 5, 5, 5, 5, 5,\r\n                5, 5, 5, 5, 5, 5, 5, 5, 5, 5\r\n            ],\r\n            [   0,\r\n                22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\r\n                32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\r\n                42, 43, 44, 45, 46, 47, 48, 49, 50, 51,\r\n                51, 52, 52, 53, 53, 54, 54, 55, 55, 56\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['+', '% to maximum Cold Resistance'],\r\n            ['+', '% to Cold Resistance'],\r\n        ]\r\n    ),\r\n    \r\n    new Aura(\r\n        'PURITY_LIGHTNING',\r\n        //Title \r\n        'Purity of Lightning',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% chance to avoid being Frozen'],\r\n            ['Damage Penetrates ', '% Lightning Resistance'],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 1, 0.2],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                0, 0, 0, 0, 1, 1, 1, 1, 1, 1,\r\n                2, 2, 2, 2, 2, 2, 3, 3, 3, 4,\r\n                4, 4, 5, 5, 5, 5, 5, 5, 5, 5,\r\n                5, 5, 5, 5, 5, 5, 5, 5, 5, 5\r\n            ],\r\n            [   0,\r\n                22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\r\n                32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\r\n                42, 43, 44, 45, 46, 47, 48, 49, 50, 51,\r\n                51, 52, 52, 53, 53, 54, 54, 55, 55, 56\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['+', '% to maximum Lightning Resistance'],\r\n            ['+', '% to Lightning Resistance'],\r\n        ]\r\n    ),\r\n\r\n    new Aura(\r\n        'PURITY_ELEMENTS',\r\n        //Title \r\n        'Purity of Elements',\r\n        //AlternateQualityBonuses \r\n        [\r\n            [''],\r\n            ['% chance to avoid Elemental Ailments'],\r\n            ['Damage Penetrates ', '% Elemental Resistance'],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0.5, 0.2],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                12, 13, 14, 15, 15, 16, 17, 18, 19, 20,\r\n                20, 21, 22, 23, 24, 25, 25, 26, 27, 27,\r\n                28, 29, 29, 30, 31, 31, 32, 33, 33, 34,\r\n                34, 34, 34, 35, 35, 36, 36, 36, 36, 37\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            ['+', '% to all Elemental Resistances']\r\n        ]\r\n    ),\r\n\r\n    ];\r\n\r\nexport default auras;","var clusterNodes = [\r\n\r\n    { name: 'Small 6% Aura Effect', affects:[], auraEffect: 6, amount: 0},\r\n\r\n    { name: 'Small 7% Aura Effect', affects:[], auraEffect: 7, amount: 0 },\r\n\r\n    { name: 'Small 8% Aura Effect', affects:[], auraEffect: 8, amount: 0 },\r\n    \r\n    { name: 'First Among Equals', affects: [], auraEffect: 10, amount: 0 },\r\n\r\n    { name: 'Replenishing Presence', affects: [], auraEffect: 8, amount: 0 },\r\n\r\n    { name: 'Vengeful Commander', affects: ['ANGER', 'HATRED', 'WRATH'], auraEffect: 20, amount: 0 },\r\n\r\n    { name: 'Stalwart Commander', affects: ['GRACE', 'DISCIPLINE', 'DETERMINATION'], auraEffect: 30, amount: 0 },\r\n\r\n    { name: 'Pure Commander', affects:[['PURITY_ICE', 'PURITY_FIRE', 'PURITY_LIGHTNING'], ['PURITY_ELEMENTS']], auraEffect: [10, 30], amount: 0},\r\n\r\n    { name: 'Precise Commander', key:'PRECISE_COMMANDER', special: true, amount: 0, effect: function(){ return [`${25 * this.amount}% increased Critical Strike Chance`,`+${10 * this.amount}% to Critical Strike Multiplier`] }} \r\n]\r\nexport default clusterNodes;","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class NavBar extends Component {\r\n\r\n    handleChange(e){\r\n        const page = e.target.value;\r\n        console.log(page);\r\n        this.props.changePage(page);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='topnav'>\r\n                <div className='divider' /><div className='divider' />\r\n                    <Link to='/aurastatcalc/'>   \r\n                        <button>Home</button>\r\n                    </Link>\r\n                <div className='divider' />\r\n                    <Link to='/aurastatcalc/tree'>   \r\n                        <button>Tree</button>\r\n                    </Link>\r\n                <div className='divider' />\r\n                    <Link to='/aurastatcalc/clusters'>   \r\n                        <button>Clusters</button>\r\n                    </Link>\r\n                <div className='divider' />\r\n                    <Link to='/aurastatcalc/gear'>   \r\n                        <button>Gear</button>\r\n                    </Link>\r\n                <div className='divider' />\r\n                    <Link to='/aurastatcalc/auras'>\r\n                        <button>Auras</button>\r\n                    </Link>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\n\r\nexport default class Aura extends Component {\r\n    render() {\r\n\r\n        let printEffects = (aura, globalEffect) => {\r\n\r\n            let tempString = [];\r\n\r\n            if(aura.level > 0 && aura.level <= 40){\r\n\r\n                if(aura.specificAuraEffect > 0)\r\n                tempString.push(<li className='aura_name'>{`~ ${aura.title} (has +${aura.specificAuraEffect}% increased effect) ~`}</li>);\r\n                else \r\n                tempString.push(<li className='aura_name'>{`~ ${aura.title} ~`}</li>);\r\n                \r\n                let effects = aura.printEffect(globalEffect);\r\n\r\n                for(const effect of effects){\r\n                    tempString.push(<li className='aura_stat'>{effect}</li>);\r\n                }\r\n            }\r\n\r\n            if(aura.level > 0 && aura.quality > 0 && aura.statPerQuality[aura.altQuality] !== 0){\r\n                let effects = aura.printQuality(globalEffect);\r\n\r\n                for(const effect of effects){\r\n                    tempString.push(<li className='aura_stat'>{effect}</li>);\r\n                }\r\n            }\r\n\r\n            if (tempString.length !== 0){\r\n                tempString.push(<li key={aura.key} className='aura_sepa'>{'~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~'}</li>);\r\n            }\r\n        \r\n            return tempString.map((stat) => (stat))\r\n        }\r\n\r\n        return this.props.auras.map((aura) => (\r\n            printEffects(aura, this.props.globalAuraEffect)\r\n        ));\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Specials extends Component {\r\n    render() {\r\n\r\n        let printSpecials = (cluster) => {\r\n\r\n            let tempString = [];\r\n\r\n            if(cluster.special === true && cluster.amount > 0){\r\n                \r\n                tempString.push(<li className='aura_name'>{'~ '+ cluster.name +' ~'}</li>);\r\n                \r\n\r\n                let effects = cluster.effect();\r\n                \r\n                for(const effect of effects){\r\n                    tempString.push(<li className='aura_stat'>{effect}</li>);\r\n                }\r\n            }\r\n            if (tempString.length !== 0){\r\n                tempString.push(<li key={cluster.key} className='aura_sepa'>{'~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~'}</li>);\r\n            }\r\n\r\n            return tempString.map((stat) => (stat))\r\n        }\r\n\r\n        return this.props.clusters.map((cluster) => (\r\n            printSpecials(cluster)\r\n        ));\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropType from 'prop-types';\r\nimport Aura from './Aura';\r\nimport Specials from './Specials';\r\n\r\nexport default class OutputBox extends Component {\r\n    render() {\r\n\r\n    return (\r\n        <div className='page output'>\r\n            <div className='output_box'>\r\n                <div className='sticky'>\r\n                    <h1>Aura Stats output</h1>\r\n                    <p>\r\n                        - {this.props.globalAuraEffect}% increased Aura Effect (Global)<br />\r\n                        All Auras under are set to Level 21, alt quality 2 and 20%quality\r\n                    </p>\r\n                </div>\r\n                    <Aura auras={this.props.auras} globalAuraEffect={this.props.globalAuraEffect}/>\r\n                    <Specials clusters={this.props.clusters} />\r\n            </div>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\n//PropTypes\r\nOutputBox.propTypes = {\r\n    globalAuraEffect: PropType.object.isRequired,\r\n    auras: PropType.object.isRequired\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class AscendancyPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className='mainapp ascendancy'>\r\n                <div className='asc_buttons'>\r\n                    <button onClick=''><img src='img/ascendancy/scion.png'  alt='Scion'/></button>\r\n                    <button onClick=''><img src='img/ascendancy/guardian.png'  alt='Guardian'/></button>\r\n                    <button onClick=''><img src='img/ascendancy/necro.png'  alt='Nec'/></button>\r\n                    <hr />\r\n                </div>\r\n                <div className='asc_states'>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class TreePage extends Component {\r\n    render() {\r\n        return (\r\n            <div className='mainapp tree_page'>\r\n                <h1>Tree Page</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class DisplayCluster extends Component {\r\n\r\n    onChangeCluster(e){\r\n        this.props.cluster.amount = e.target.value;\r\n\r\n        this.props.changeClusterAmount(e.target.value, this.props.indexCluster)\r\n        this.props.changeGlobalAuraEffect(this.props.calcClusterAuraEffect(), 'cluster');\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='auras'>\r\n                <div className='aura'>\r\n\r\n                    <img src='img/cluster/notable.png' alt=''/>\r\n\r\n                    <span className='aura_title'>{this.props.cluster.name}</span>\r\n\r\n                    <div className='inputs'>\r\n                        <input onChange={this.onChangeCluster.bind(this)} defaultValue={this.props.cluster.amount} type='number' min='0' max='80'/>\r\n\r\n                    </div>\r\n                </div>          \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport DisplayCluster from './DisplayCluster';\r\n\r\n\r\n\r\nexport default class DisplayClusters extends Component {\r\n    \r\n    calculateClusterAuraEffect(){\r\n\r\n        let auraEffect = 0;\r\n\r\n        this.props.clusters.forEach((cluster) => {   \r\n            if(cluster.special === true){ \r\n\r\n                \r\n            } else {\r\n                if( cluster.affects.length === 0 ){\r\n                    auraEffect += (cluster.auraEffect * cluster.amount);\r\n                \r\n                } else {\r\n                    if(cluster.auraEffect.length === undefined){\r\n                        \r\n                        cluster.affects.forEach((auraKey) => {\r\n                            this.props.changeSpecificAuraEffect((cluster.auraEffect * cluster.amount), auraKey)   \r\n                        })\r\n                    } else {\r\n                        \r\n                        for (let i = 0; i< cluster.affects.length; i++){\r\n\r\n                            cluster.affects[i].forEach((auraKey) => {\r\n                                this.props.changeSpecificAuraEffect((cluster.auraEffect[i] * cluster.amount), auraKey)   \r\n                            })\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return auraEffect;\r\n    }\r\n    \r\n    render() {\r\n        return this.props.clusters.map((cluster) => (\r\n                <DisplayCluster\r\n\r\n                    changeClusterAmount={this.props.changeClusterAmount}\r\n                    calcClusterAuraEffect={this.calculateClusterAuraEffect.bind(this)}\r\n                    changeGlobalAuraEffect={this.props.changeGlobalAuraEffect}\r\n                    cluster={cluster}\r\n                    indexCluster={this.props.clusters.indexOf(cluster)}\r\n                />\r\n        ));\r\n    }\r\n}\r\n/* this.props.changeSpecificAuraEffect(cluster.auraEffect * cluster.amount, auraKey) */","import React, { Component } from 'react'\r\nimport DisplayClusters from './clusterTabs/DisplayClusters';\r\n\r\nexport default class ClusterPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className='mainapp gem_grps'>\r\n                <h1>Clusters</h1>\r\n                <DisplayClusters \r\n\r\n                    changeClusterAmount={this.props.changeClusterAmount}\r\n                    changeGlobalAuraEffect={this.props.changeGlobalAuraEffect}\r\n                    changeSpecificAuraEffect={this.props.changeSpecificAuraEffect}\r\n                    clusters={this.props.clusters}\r\n                />    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class GearPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className='mainapp gear_page'>\r\n                <h1>Gear Page</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class DisplayAura extends Component {\r\n\r\n\r\n    //onChange methodes for every diffrent type of change that can occure to an aura\r\n    onChangeLevel(e){\r\n\r\n        this.props.aura.level = e.target.value;\r\n        this.props.changeLevel(e.target.value, this.props.indexAura);\r\n    }\r\n\r\n    onChangeQuality(e){\r\n\r\n        this.props.aura.quality = e.target.value;\r\n        this.props.changeQuality(e.target.value, this.props.indexAura);\r\n    }\r\n\r\n    onChangeAltQuality(e){\r\n        \r\n        this.props.aura.altQuality = e.target.value;\r\n        this.props.changeAltQuality(e.target.value, this.props.indexAura);\r\n    }\r\n\r\n    onChangeGenoType(e){\r\n        this.props.aura.generosityType = e.target.value;\r\n        this.props.changeGenoType(e.target.value, this.props.indexAura);\r\n    }\r\n\r\n    onChangeGenoLevel(e){\r\n        this.props.aura.generosityLevel = e.target.value;\r\n        this.props.changeGenoLevel(e.target.value, this.props.indexAura);\r\n    }\r\n\r\n    //Not All Auras have 3 Alt Qualities\r\n    altQualityThree(altQualityBonuses){\r\n        \r\n        if(altQualityBonuses.length > 3)\r\n        return (<option value='3'>Phantas   </option>)\r\n        else return null;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <div className='auras'>\r\n                <div className='generosity'>\r\n                    <img src={\"img/aura/\"+ this.props.aura.key.toLowerCase() +\".png\"} alt=' '/>\r\n                    <span className='aura_title'>{this.props.aura.title}</span>\r\n                    \r\n                    <div className='inputs'>\r\n                    \r\n                    <img src='img/gem/generosity.png' alt='G'/>\r\n                \r\n                        <select onChange={this.onChangeGenoType.bind(this)} defaultValue={this.props.aura.generosityType}>\r\n                            <option value='0'>None</option>\r\n                            <option value='1'>Generosity</option>\r\n                            <option value='2'>Awakened</option>\r\n                        </select>\r\n\r\n                        <input onChange={this.onChangeGenoLevel.bind(this)} defaultValue={this.props.aura.generosityLevel} type='number' min='0' max='40' placeholder='Lvl' />\r\n                    </div>\r\n                </div>\r\n                <div className='aura'>\r\n                <img src={\"img/gem/\"+ this.props.aura.key.toLowerCase() +\".png\" }  alt=' '/>\r\n\r\n                    \r\n                    <div className='inputs'>\r\n                        <span className='details'>Lvl: </span>\r\n                        <input onChange={this.onChangeLevel.bind(this)}     defaultValue={this.props.aura.level} type='number' min='0' max='40'  placeholder='Lvl' />\r\n                        <span className='details'>Qual: </span>\r\n                        <input onChange={this.onChangeQuality.bind(this)} defaultValue={this.props.aura.quality} type='number' min='0' max='100' placeholder='Qlty' />\r\n                        <span className='details'>Alt: </span>\r\n                        <select onChange={this.onChangeAltQuality.bind(this)} defaultValue={this.props.aura.altQuality}>\r\n                            <option value='0'>  None      </option>\r\n                            <option value='1'>  Diverg    </option>\r\n                            <option value='2'>  Anom      </option>\r\n                            {this.altQualityThree(this.props.aura.effectOfQuality)}\r\n                        </select>\r\n                    </div>\r\n\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport DisplayAura from './DisplayAura';\r\n/*\r\n    Logic for displaying grid of all auras\r\n*/\r\n\r\n\r\n\r\nexport default class DisplayAuras extends Component {\r\n    \r\n    render() {\r\n        return this.props.auras.map((aura) => (\r\n            <DisplayAura \r\n\r\n                changeGenoType={this.props.changeGenoType}\r\n                changeGenoLevel={this.props.changeGenoLevel}\r\n                changeAltQuality={this.props.changeAltQuality} \r\n                changeQuality={this.props.changeQuality} \r\n                changeLevel={this.props.changeLevel} \r\n                aura={aura}\r\n                indexAura={this.props.auras.indexOf(aura)}\r\n            />\r\n         ));\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport DisplayAuras from './gemLinkTabs/DisplayAuras';\r\n\r\nexport default class GemPage extends Component {\r\n    onChangeGenoIcon(e){\r\n        console.log(this.genoIcon);\r\n        this.genoIcon = e.target.value;\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='mainapp gem_grps'> \r\n                        <h1>Auras</h1>\r\n                        <DisplayAuras \r\n                            changeGenoType={this.props.changeGenoType}\r\n                            changeGenoLevel={this.props.changeGenoLevel}\r\n                            changeAltQuality={this.props.changeAltQuality} \r\n                            changeQuality={this.props.changeQuality} \r\n                            changeLevel={this.props.changeLevel} \r\n                            auras={this.props.auras}\r\n                        />      \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n/* backup\r\n<DisplayAuras changeAltQuality={this.props.changeAltQuality} changeQuality={this.props.changeQuality} changeLevel={this.props.changeLevel} auras={this.props.auras}/>\r\n\r\n<div className='mainapp gem_page'> \r\n                <div className='gem_btn_grp'>\r\n                    <button onClick={ this.handleChange.bind(this) } value='0'>Helmet</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='1'>Body</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='2'>Gloves</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='3'>Boots</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='4'>Ring 1</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='5'>Ring 2</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='6'>Weapon 1</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='7'>Weapon 2</button><hr />\r\n                </div>\r\n                <div className='gem_grps'>\r\n                    {this.state.gemLinksPage.pages[this.state.gemLinksPage.pageSelected]}\r\n                </div>\r\n            </div>\r\n\r\n            */\r\n","import React, { Component } from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport NavBar from './compos/NavBar';\r\nimport OutputBox from './compos/OutputBox';\r\nimport AscendancyPage from './compos/pages/AscendancyPage';\r\nimport TreePage from './compos/pages/TreePage';\r\nimport ClusterPage from './compos/pages/ClusterPage';\r\nimport GearPage from './compos/pages/GearPage';\r\nimport GemPage from './compos/pages/GemPage';\r\n\r\nimport './styles.css';\r\nvar auras = require('./auraStats').default;\r\nvar clusters = require('./clusterJewels').default;\r\n\r\nclass App extends Component {\r\n  state = {\r\n    auras,\r\n    clusters,\r\n\r\n    globalAuraEffect: 0,\r\n\r\n    auraEffect: {\r\n      asc: {\r\n        selected: 0,\r\n        options: [0,10,5],\r\n        total: function(){ return this.options[this.selected] }\r\n\r\n      },\r\n      tree: {\r\n        amount: 0,\r\n        total: function(){return this.amount}\r\n      },\r\n      cluster: {\r\n        amount: 0,\r\n      },\r\n      gear: {\r\n        amount: 0,\r\n        total: function(){return this.amount}\r\n      },\r\n      total: function(){\r\n        return this.asc.total() + this.tree.total() + this.cluster.amount + this.gear.total();\r\n      }\r\n    }\r\n  }\r\n\r\n  changeLevel(newLevel, auraIndex){\r\n\r\n    let newAuraState = [...this.state.auras];\r\n    newAuraState[auraIndex].level = Number(newLevel);\r\n    this.setState({ auras: newAuraState });\r\n\r\n  }\r\n\r\n  changeQuality(newQuality, auraIndex){\r\n    let newAuraState = [...this.state.auras];\r\n    newAuraState[auraIndex].quality = Number(newQuality);\r\n    this.setState({ auras: newAuraState });\r\n  }\r\n\r\n  changeAltQuality(newAltQuality, auraIndex){\r\n\r\n    let newAuraState = [...this.state.auras];\r\n    newAuraState[auraIndex].altQuality = Number(newAltQuality);\r\n    this.setState({ auras: newAuraState });\r\n  }\r\n\r\n  changeGenoLevel(newGenoLevel, auraIndex){\r\n\r\n    let newAuraState = [...this.state.auras];\r\n    newAuraState[auraIndex].generosityLevel = Number(newGenoLevel);\r\n    this.setState({ auras: newAuraState });\r\n  }\r\n\r\n  changeGenoType(newGenoType, auraIndex){\r\n\r\n    let newAuraState = [...this.state.auras];\r\n    newAuraState[auraIndex].generosityType = Number(newGenoType);\r\n    this.setState({ auras: newAuraState });\r\n  }\r\n\r\n   changeSpecificAuraEffect(newSpecificEffect, auraKey){\r\n    if(this.findAuraIndex(auraKey) !== null){\r\n      let auraIndex = this.findAuraIndex(auraKey);\r\n\r\n      let newAuraState = [...this.state.auras];\r\n      newAuraState[auraIndex].specificAuraEffect = Number(newSpecificEffect);\r\n      this.setState({ auras: newAuraState });\r\n    }\r\n   }\r\n\r\n   changeGlobalAuraEffect(newAuraEffect, page){\r\n\r\n    this.setState({auraEffect: {...this.state.auraEffect, [page]: {...this.state.auraEffect[page], amount: newAuraEffect}}});\r\n   }\r\n\r\n   changeClusterAmount(newAmount, clusterIndex){\r\n\r\n    let newClusterStats = [...this.state.clusters];\r\n    \r\n    newClusterStats[clusterIndex].amount = Number(newAmount);\r\n    this.setState({clusters: newClusterStats});\r\n   }\r\n\r\n   findAuraIndex(auraKey){\r\n    let index = null;\r\n    auras.forEach((aura) => {\r\n\r\n      if(aura.key === auraKey){\r\n        index = auras.indexOf(aura);\r\n      }\r\n    })\r\n    return index;\r\n   }\r\n   \r\n  render() {\r\n    console.log(this.state.auras[7]);\r\n      return ( \r\n        <section className=\"app\">\r\n          <div className='header'>\r\n            <h1>Nuk's PoE Aura stats calculator</h1>\r\n            <p>- Under Construction</p>\r\n          </div>\r\n          \r\n          <Router>\r\n            <NavBar />\r\n          <div className=\"content\">\r\n\r\n                <div className='page main'>\r\n                  <Switch>\r\n                    <Route path='/aurastatcalc/' exact\r\n\r\n                      render = {(props) => (\r\n                        <AscendancyPage {...props} auras={auras} />\r\n                      )}\r\n                    />\r\n\r\n                    <Route path='/aurastatcalc/tree'\r\n                    \r\n                      render = {(props) => (\r\n                        <TreePage {...props} auras={auras} />\r\n                      )}\r\n                    />\r\n\r\n                   <Route path='/aurastatcalc/clusters'\r\n                      \r\n                      render = {(props) => (\r\n                        <ClusterPage {...props} \r\n\r\n                          changeClusterAmount={this.changeClusterAmount.bind(this)}\r\n                          changeGlobalAuraEffect={this.changeGlobalAuraEffect.bind(this)}\r\n                          changeSpecificAuraEffect={this.changeSpecificAuraEffect.bind(this)}\r\n                          clusters={clusters}\r\n                         />\r\n                      )}\r\n                    />\r\n                    \r\n                    <Route path='/aurastatcalc/gear'\r\n                      \r\n                      render = {(props) => (\r\n                        <GearPage {...props} auras={auras} />\r\n                      )}\r\n                    />\r\n\r\n                    <Route path='/aurastatcalc/auras'\r\n                      \r\n                      render = {(props) => (\r\n                        <GemPage {...props} \r\n                          changeGenoType={this.changeGenoType.bind(this)}\r\n                          changeGenoLevel={this.changeGenoLevel.bind(this)}\r\n                          changeAltQuality={this.changeAltQuality.bind(this)} \r\n                          changeQuality={this.changeQuality.bind(this)} \r\n                          changeLevel={this.changeLevel.bind(this)} \r\n                          auras={auras} \r\n                       />\r\n                      )}\r\n                    />\r\n            \r\n                  </Switch> \r\n                </div>\r\n              \r\n            <OutputBox clusters={this.state.clusters} auras={this.state.auras} globalAuraEffect={this.state.auraEffect.total()} />\r\n          </div>\r\n          </Router>\r\n        </section>\r\n    );\r\n  }\r\n}\r\n \r\nexport default App;\r\n\r\n/*\r\n<MainPage gemLinksPage={this.state.gemLinksPage} content={this.state.mainPage} auras={this.state.auras} globalAuraEffect={this.state.globalAuraEffect} />\r\n*/\r\n\r\n/*\r\n<TreePage \r\n                    auras={auras}\r\n                  />\r\n\r\n                  <ClusterPage \r\n                    auras={auras} \r\n                  />\r\n\r\n                  <GearPage \r\n                    auras={auras} \r\n                  />\r\n\r\n                  <GemPage  \r\n                    changeGenoType={this.changeGenoType.bind(this)}\r\n                    changeGenoLevel={this.changeGenoLevel.bind(this)}\r\n                    changeAltQuality={this.changeAltQuality.bind(this)} \r\n                    changeQuality={this.changeQuality.bind(this)} \r\n                    changeLevel={this.changeLevel.bind(this)} \r\n                    auras={auras} \r\n                  />\r\n                  */","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}