{"version":3,"sources":["auraStats.js","clusterJewels.js","treePassives.js","aurasFromSkills.js","compos/NavBar.js","compos/Aura.js","compos/Specials.js","compos/AuraMods.js","compos/OutputBox.js","compos/pages/AscendancyPage.js","compos/pages/treeTabs/DisplayTree.js","compos/pages/treeTabs/DisplayTrees.js","compos/pages/TreePage.js","compos/pages/gearTabs/DisplayArmour.js","compos/pages/gearTabs/DisplayJewelry.js","compos/pages/gearTabs/DisplayWeapons.js","compos/pages/clusterTabs/DisplayCluster.js","compos/pages/clusterTabs/DisplayClusters.js","compos/pages/GearPage.js","compos/pages/gemLinkTabs/DisplayAura.js","compos/pages/gemLinkTabs/DisplayAuras.js","compos/pages/GemPage.js","App.js","index.js"],"names":["calcStatFloored","value","auraEffect","auraMultiplier","Math","floor","calcStat","Aura","aurakey","title","effectOfQuality","statPerQuality","effectAtLevel","effectOfAura","printEffect","special","buff","this","key","level","quality","altQuality","specificAuraEffect","generosityLevel","generosityType","generosityEffect","generosityAuraEffect","getTotalAuraEffect","globalAuraEffect","tempString","finaleAuraBonuses","i","length","replace","push","auras","incEffect","clusterNodes","name","affects","amount","effect","undefined","TreeCluster","notableAuraEffect","numSmallPassives","hasBorder","canHaveMOTM","tempArray","notable","Notable","smallPassives","motm","clusterAuraEffect","sum","console","log","isActive","treePassives","AurasFromSkills","source","statLine","number","active","toFloor","totalValue","arrayOfStats","forEach","aura","toPush","aurasFromSkills","NavBar","e","page","target","props","changePage","className","to","Component","map","globalEffect","effects","stat","printEffects","Specials","clusters","cluster","printSpecials","AuraMods","mod","line","printActiveMods","OutputBox","AscendancyPage","onClick","src","alt","DisplayTree","tree","onChangeMOTM","bind","checked","type","changeTreeNodes","toLowerCase","onChange","onChangeNotable","id","smallNode","indexOf","onChangeSmallNode","isMotmON","renderMOTM","DisplayTrees","trees","TreePage","changeTimeless","onChangeTimeless","defaultValue","timeless","min","max","DisplayArmour","newAuraEffect","changeArmourGlobalEffect","Number","tag","onChangeAuraEffect","gear","DisplayJewelry","newSelectedItem","changeCorruption","newAuraPercent","changeJewelryNumber","corruption1","onChangeAuraPercent","onChangeCorruptionAura","auraSelectList","corruption2","item","DisplayWeapons","twohand","newAura","changeAuraWeapon","changeAuraPercentWeapon","auraMod","isDisabled","changeAurasWithSkillMod","style","width","opacity","textDecoration","onChangeAura","twoHandActive","onChangeAuraFromSkills","aurasFromSkillIsActive","marginRight","DisplayCluster","changeClusterAmount","indexCluster","changeGlobalAuraEffect","changeGearSection","onChangeCluster","DisplayClusters","GearPage","weapons","changeTwoHand","armour","helm","body","gloves","boots","changeJewelryCorruption","jewelry","amulet","ring1","ring2","belt","paddingLeft","lineHeight","height","onChangeTwoHand","weapon1","weapon2","DisplayAura","changeLevel","indexAura","changeQuality","changeAltQuality","changeGenoType","changeGenoLevel","altQualityBonuses","onChangeGenoType","onChangeGenoLevel","placeholder","onChangeLevel","onChangeQuality","onChangeAltQuality","altQualityThree","DisplayAuras","GemPage","genoIcon","require","default","App","state","auraSelectListLoaded","total","asc","selected","options","generateAuraSelectList","selectMenuList","newLevel","auraIndex","newAuraState","setState","newQuality","newAltQuality","newGenoLevel","newGenoType","auraEffectPerKey","newAuraStat","findAuraIndex","tempGear","Object","keys","piece","corruption","auraKey","reduced","uniqueKey","found","j","changeSpecificAuraEffect","newAmount","clusterIndex","newClusterStats","index","newTreeStats","newValue","newstate","newArray","values","newState","newBoolean","whichWeapon","path","exact","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3111a802.chunk.js","sourcesContent":["/**\r\n * Explination on how Auras are Structured.\r\n * \r\n * Each value of auras is the name of the aura in Capitals example Hatred -> HATRED\r\n * each auras has the following attributes \r\n * \r\n * title: its name\r\n * level: whatever level its at.\r\n * quality: whatever quality the aura is at.\r\n * altQuality: what alternative quality is selected (this should be between 0 and 2 usually)\r\n * specificAuraEffect: this is where the value of specific aura effect is stored (such as Hatred has #% increased Aura Effect)\r\n * \r\n * effectOfQuality: this is an array of Arrays, it containes whatever quality bonuses a given alt quality provides\r\n * statPerQuality: for a given index statPerQuality is the bonus per quality given for the same index of effectOfQuality\r\n * \r\n * numberEffects: this contains an array for for each state line an aura gives. if a state has to values (a min and max) they are also in an array themselves\r\n * Example: 'Adds 16 to 48 Lightning Damage to Attacks' AND '21% more Lightning Damage with spells' at Level 20.\r\n * will be stored as following an array of length 2(2 mods), index 0 will have the Adds X to Y .. \r\n * such that at level 20 index20 will be -> [..,[16, 48]] \r\n * while the 2nd effect will be at index 1, and index 20 of that array with [.., 21]\r\n * \r\n * effectOfAura: this is also an array that matches the array of NumberEffects it will have its given effects split into diffrent arrays\r\n * if some text is split by numbers that line will also be split in the array. \r\n * Example: Adds 16 to 48 Lightning Damage to Attacks -> ['Adds ', ' to ', Lightning Damage to Attacks']\r\n * \r\n * printEffect(auraEffect){}: takes in the globalAuraEffect and returns an Array with all Bonuses Given by an Aura.\r\n * \r\n * printQuality(auraEffect){}: takes in the GlobalAuraEffect and returns an Array with all the bonus given by the Auras Quality\r\n */\r\n\r\nvar calcStatFloored = function(value, auraEffect){ \r\n    let auraMultiplier = ((auraEffect/100+1)); \r\n\r\n    return Math.floor(value * auraMultiplier);\r\n\r\n}\r\n\r\nvar calcStat = function(value, auraEffect){ \r\n\r\n    let auraMultiplier = ((auraEffect/100+1)); \r\n\r\n    return Math.floor((value * auraMultiplier)*100)/100; //round down to 2 decimals\r\n}\r\n\r\n\r\nclass Aura {\r\n    constructor(aurakey, title, effectOfQuality, statPerQuality, effectAtLevel, effectOfAura, printEffect, special, buff) {\r\n        this.key = aurakey;\r\n        this.title = title;\r\n        this.level = 0;\r\n        this.quality = 0;\r\n        this.altQuality = 0;\r\n        this.specificAuraEffect = 0;\r\n        this.effectOfQuality = effectOfQuality;\r\n        this.statPerQuality = statPerQuality;\r\n        this.effectAtLevel = effectAtLevel;\r\n        this.effectOfAura = effectOfAura;\r\n        this.special = false || special;\r\n        this.buff = false || buff;\r\n\r\n        this.generosityLevel = 0;\r\n        this.generosityType = 0;\r\n        \r\n        this.generosityEffect = [\r\n\r\n            [0],\r\n\r\n            [   0,\r\n                20, 21, 22, 23, 24, 25, 26, 27, 28, 29,\r\n                30, 31, 32, 33, 34, 35, 36, 37, 38, 39,\r\n                40, 41, 42, 43, 44, 45, 46, 47, 48, 49,\r\n                49, 50, 50, 51, 51, 52, 52, 53, 53, 54\r\n            ],\r\n            [   0,\r\n                41, 43, 45, 47, 49, 51, 53, 55, 57, 59,\r\n                60, 61, 62, 63, 64, 65, 66, 67, 68, 69,\r\n                69, 69, 69, 69, 69, 69, 69, 69, 69, 69,\r\n                69, 69, 69, 69, 69, 69, 69, 69, 69, 69\r\n            ],\r\n        ];\r\n\r\n        this.generosityAuraEffect = function(){\r\n\r\n            if(this.generosityType > 0 && this.generosityLevel > 0 ){\r\n                return this.generosityEffect[this.generosityType][this.generosityLevel];\r\n            } else return 0;\r\n        };\r\n\r\n        this.getTotalAuraEffect = function(globalAuraEffect){\r\n            if (!(this.buff === true))\r\n                return this.specificAuraEffect + this.generosityAuraEffect() + globalAuraEffect;\r\n            else return 0;\r\n        };\r\n\r\n        this.printEffect = printEffect || function(globalAuraEffect){\r\n            let auraEffect = this.getTotalAuraEffect(globalAuraEffect);\r\n    \r\n            let finaleAuraBonuses = [];\r\n    \r\n            let tempString;\r\n    \r\n            if(this.level !== 0 && this.level <= 40){\r\n            //Adding Aura Effect\r\n                for (let i = 0; i < this.effectOfAura.length; i++){\r\n                    tempString = this.effectOfAura[i];\r\n                    if(this.effectAtLevel[i][0].length === 2){\r\n                        tempString = tempString.replace('##', calcStatFloored(this.effectAtLevel[i][this.level][0], auraEffect)); //Replace min value\r\n                        tempString = tempString.replace('$$', calcStatFloored(this.effectAtLevel[i][this.level][1], auraEffect)); //Replace max value\r\n                    } else {\r\n                        tempString = tempString.replace('##', calcStatFloored(this.effectAtLevel[i][this.level], auraEffect));\r\n                    }\r\n                    finaleAuraBonuses.push(tempString); \r\n                }\r\n    \r\n                if(this.quality !== 0 && this.altQuality !== 0){\r\n                    tempString = this.effectOfQuality[this.altQuality]\r\n                    tempString = tempString.replace('##', calcStatFloored( (this.statPerQuality[this.altQuality] * this.quality), auraEffect));\r\n    \r\n                    finaleAuraBonuses.push(tempString);\r\n                }\r\n    \r\n                return finaleAuraBonuses;\r\n            } else return ['']\r\n        };\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nvar auras = [\r\n  //-----------------------------------------------------\r\n  //Anger Stats\r\n    new Aura(\r\n        'ANGER',\r\n        //Title \r\n        \"Anger\",\r\n        //AlternateQualityBonuses \r\n        [\r\n            \"\",\r\n            \"##% increased Burning Damage\",\r\n            \"##% increased Movement Speed\",\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 1, 0.25],\r\n        //Values at each level for the aura\r\n        [\r\n            [   [0, 0],\r\n                [16, 23],   [19, 27],   [22, 31],   [25, 36],   [29, 41],   [33, 47],   [37, 53],   [42, 60],   [48, 68],   [52, 74],\r\n                [56, 80],   [60, 86],   [65, 93],   [70, 100],  [76, 108],  [82, 116],  [88, 125],  [94, 135],  [101, 145], [109, 155],\r\n                [117, 167], [125, 179], [134, 191], [143, 205], [154, 219], [164, 235], [176, 251], [188, 268], [201, 287], [214, 306],\r\n                [221, 316], [229, 327], [236, 337], [244, 349], [252, 360], [260, 372], [269, 384], [278, 397], [287, 409], [296, 423]\r\n            ],\r\n            [   [0, 0], \r\n                [15, 21],   [17, 24],   [20, 28],   [23, 32],   [26, 37],   [30, 42],   [34, 48],   [39, 54],   [44, 61],   [47, 66], \r\n                [51, 72],   [55, 78],   [60, 84],   [64, 90],   [69, 97],   [75, 105],  [80, 113],  [86, 121],  [93, 130],  [99, 140], \r\n                [107, 150], [114, 161], [122, 172], [131, 184], [140, 197], [150, 211], [161, 226], [172, 241], [183, 258], [196, 275], \r\n                [202, 285], [209, 294], [216, 304], [223, 314], [230, 324], [238, 335], [246, 346], [254, 357], [262, 368], [270, 380]\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            \"Adds ## to $$ Fire Damage to Attacks\",\r\n            \"Adds ## to $$ Fire Damage to Spells\",\r\n        ],\r\n\r\n    ),\r\n\r\n  //-----------------------------------------------------\r\n  //Hatred\r\n    new Aura(\r\n        'HATRED',\r\n        //Title \r\n        'Hatred',\r\n        //AlternateQualityBonuses \r\n        [\r\n            '',\r\n            '##% increased Chill and Freeze Duration',\r\n            '##% increased Movement Speed while on Chilled Ground',\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 1, 1],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0, \r\n                16, 16, 17, 17, 18, 18, 19, 19, 20, 20, \r\n                21, 21, 22, 22, 23, 23, 24, 24, 25, 25, \r\n                26, 26, 27, 27, 28, 28, 29, 29, 30, 30, \r\n                30, 31, 31, 31, 31, 32, 32, 32, 32, 33\r\n            ],\r\n            [   0,\r\n                14, 14, 14, 14, 15, 15, 15, 15, 16, 16,\r\n                16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\r\n                19, 19, 19, 19, 20, 20, 20, 20, 21, 21,\r\n                21, 21, 21, 21, 21, 22, 22, 22, 22, 22\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            'Gain ## of Physical Damage as Extra Cold Damage',\r\n            '##% more Cold Dmage',\r\n        ]\r\n    ),\r\n  //-------------------------------\r\n  //Wrath\r\n    new Aura(\r\n        'WRATH',\r\n        //Title \r\n        'Wrath',\r\n        //AlternateQualityBonuses \r\n        [\r\n            '', '', ''\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0.25, 0], \r\n        //Values at each level for the aura\r\n        [\r\n            [   [0, 0], \r\n                [2, 37],   [3, 43],   [3, 50],   [4, 57],   [4, 66],   [5, 75],   [5, 85],   [6, 97],   [7, 109],  [7, 118], \r\n                [8, 128],  [9, 138],  [9, 149],  [10, 161], [11, 173], [12, 186], [13, 200], [13, 215], [14, 231], [16, 248], \r\n                [17, 267], [18, 286], [19, 306], [20, 328], [22, 351], [23, 375], [25, 401], [27, 429], [29, 458], [31, 490], \r\n                [32, 506], [33, 523], [34, 540], [35, 558], [36, 576], [37, 595], [38, 614], [40, 634], [41, 655], [42, 676]\r\n\r\n            ],\r\n            [   0, \r\n                15, 15, 15, 16, 16, 16, 17, 17, 17, 18, \r\n                18, 18, 19, 19, 19, 20, 20, 20, 21, 21, \r\n                21, 22, 22, 22, 23, 23, 23, 24, 24, 24, \r\n                24, 25, 25, 25, 25, 25, 25, 26, 26, 26\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            'Adds ## to $$ Lightning Damage to Attacks',\r\n            '##% more Lightning Damage with spells',\r\n        ],\r\n\r\n        function(globalAuraEffect){\r\n            let auraEffect = this.getTotalAuraEffect(globalAuraEffect);\r\n    \r\n            \r\n\r\n            let finaleAuraBonuses = [];\r\n            \r\n            if(this.altQuality === 1 && this.quality){\r\n                let incEffect = Math.floor(this.statPerQuality[this.altQuality] * this.quality);\r\n                if(incEffect >= 1){\r\n                    auraEffect += incEffect;\r\n                    finaleAuraBonuses.push(`(Has ${incEffect}% increassed effect from Quality)`)\r\n                }\r\n            }\r\n\r\n            let tempString;\r\n    \r\n            if(this.level !== 0 && this.level <= 40){\r\n            //Adding Aura Effect\r\n                for (let i = 0; i < this.effectOfAura.length; i++){\r\n                    tempString = this.effectOfAura[i];\r\n                    if(this.effectAtLevel[i][0].length === 2){\r\n                        tempString = tempString.replace('##', calcStatFloored(this.effectAtLevel[i][this.level][0], auraEffect)); //Replace min value\r\n                        tempString = tempString.replace('$$', calcStatFloored(this.effectAtLevel[i][this.level][1], auraEffect)); //Replace max value\r\n                    } else {\r\n                        tempString = tempString.replace('##', calcStatFloored(this.effectAtLevel[i][this.level], auraEffect));\r\n                    }\r\n                    finaleAuraBonuses.push(tempString); \r\n                }\r\n    \r\n                return finaleAuraBonuses;\r\n            } else return ['']\r\n        }\r\n\r\n    ),\r\n\r\n    new Aura(\r\n        'HASTE',\r\n        //Title \r\n        'Haste',\r\n        //AlternateQualityBonuses \r\n        [\r\n            '',\r\n            '##% increased Totem Placement speed',\r\n            '##% increased Projectile Speed',\r\n            'Buffs on You expire ##% faster'\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0.5, 0.5, 1],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                9,  10, 10, 10, 11, 11, 11, 12, 12, 12, \r\n                13, 13, 13, 14, 14, 15, 15, 16, 16, 16,\r\n                17, 17, 17, 18, 18, 18, 19, 19, 19, 20, \r\n                20, 20, 20, 20, 20, 21, 21, 21, 21, 21\r\n            ],\r\n            [   0,\r\n                9,  9,  10, 10, 10, 11, 11, 11, 12, 12, \r\n                12, 13, 13, 13, 14, 14, 15, 15, 16, 16, \r\n                16, 17, 17, 17, 18, 18, 18, 19, 19, 19, \r\n                19, 20, 20, 20, 20, 20, 20, 21, 21, 21\r\n\r\n            ],\r\n            [   0,\r\n                4,  4,  4,  5,  5,  5,  6,  6,  6,  7,\r\n                7,  7,  8,  8,  8,  8,  8,  8,  8,  9,\r\n                9,  9,  10, 10, 10, 11, 11, 11, 12, 12,\r\n                12, 12, 12, 13, 13, 13, 13, 13, 13, 14\r\n            ]\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            '##% increased Attack Speed',\r\n            '##% increased Cast Speed',\r\n            '##% increased Movement Speed'\r\n        ]\r\n    ),\r\n\r\n    new Aura(\r\n        'MALEVOLENCE',\r\n        //Title \r\n        'Malevolence',\r\n        //AlternateQualityBonuses \r\n        [\r\n            '',\r\n            '##% increased Skill Effect Duration',\r\n            '##% increased Damage with Ailments',\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0.5, 0.5],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                14, 14, 14, 15, 15, 15, 16, 16, 16, 17, \r\n                17, 17, 18, 18, 18, 19, 19, 19, 20, 20, \r\n                20, 21, 21, 21, 22, 22, 22, 23, 23, 23, \r\n                23, 24, 24, 24, 24, 24, 24, 25, 25, 25\r\n            ],\r\n            [   0,\r\n                10, 10, 11, 11, 12, 12, 13, 13, 14, 14, \r\n                15, 15, 16, 16, 17, 17, 18, 18, 19, 19, \r\n                20, 20, 21, 21, 22, 22, 23, 23, 24, 24, \r\n                24, 25, 25, 25, 25, 26, 26, 26, 26, 27\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            '##% more Damage over Time',\r\n            '##% increased Skill Effect Duration',\r\n        ],\r\n\r\n        //Malevolances 2nd quality effect is addative to its own effect before any scaling.\r\n        function(globalAuraEffect){\r\n            let auraEffect = this.getTotalAuraEffect(globalAuraEffect);\r\n    \r\n            let finaleAuraBonuses = [];\r\n    \r\n            let tempString;\r\n    \r\n            if(this.level !== 0 && this.level <= 40){\r\n            //Adding Aura Effect\r\n                for (let i = 0; i < this.effectOfAura.length; i++){\r\n                    tempString = this.effectOfAura[i];\r\n                    \r\n                    if(i === 1 && this.altQuality === 1) \r\n                        tempString = tempString.replace('##', calcStatFloored((this.effectAtLevel[i][this.level] + \r\n                                                                                (this.statPerQuality[this.altQuality] * \r\n                                                                                    this.quality)), auraEffect));\r\n                    else \r\n                        tempString = tempString.replace('##', calcStatFloored((this.effectAtLevel[i][this.level]), auraEffect));\r\n\r\n                    finaleAuraBonuses.push(tempString); \r\n                }\r\n    \r\n                if(this.quality !== 0 && this.altQuality === 2){\r\n                    tempString = this.effectOfQuality[this.altQuality]\r\n                    tempString = tempString.replace('##', calcStatFloored( (this.statPerQuality[this.altQuality] * this.quality), auraEffect));\r\n    \r\n                    finaleAuraBonuses.push(tempString);\r\n                }\r\n    \r\n                return finaleAuraBonuses;\r\n            } else return ['']\r\n        }\r\n    ),  \r\n\r\n    new Aura(\r\n        'ZEALOTRY',\r\n        //Title \r\n        'Zealotry',\r\n        //AlternateQualityBonuses \r\n        [\r\n            '',\r\n            '##% to Critical Strike Multiplier',\r\n            '##% of Life per second',\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0.25, 0.02],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                10, 10, 10, 11, 11, 11, 12, 12, 12, 12,\r\n                13, 13, 13, 14, 14, 14, 14, 15, 15, 15,\r\n                16, 16, 16, 16, 17, 17, 17, 18, 18, 18,\r\n                18, 18, 19, 19, 19, 19, 19, 19, 19, 20\r\n            ],\r\n            [   0,\r\n                20, 21, 22, 23, 24, 25, 26, 27, 28, 29, \r\n                30, 31, 32, 33, 34, 35, 36, 37, 38, 39, \r\n                40, 41, 42, 43, 44, 45, 46, 47, 48, 49, \r\n                49, 50, 50, 51, 51, 52, 52, 53, 53, 54\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            '##% more Spell Damage',\r\n            '##% increased Spell Critical Strike Chance',\r\n        ],\r\n        function(globalAuraEffect){\r\n            let auraEffect = this.getTotalAuraEffect(globalAuraEffect);\r\n    \r\n            let finaleAuraBonuses = [];\r\n    \r\n            let tempString;\r\n    \r\n            if(this.level !== 0 && this.level <= 40){\r\n            //Adding Aura Effect\r\n                for (let i = 0; i < this.effectOfAura.length; i++){\r\n                    tempString = this.effectOfAura[i];\r\n                    \r\n                    if(i === 1 && this.altQuality === 1) \r\n                        tempString = tempString.replace('##', calcStatFloored((this.effectAtLevel[i][this.level] + \r\n                                                                                (this.statPerQuality[this.altQuality] * \r\n                                                                                    this.quality)), auraEffect));\r\n                    else \r\n                        tempString = tempString.replace('##', calcStatFloored((this.effectAtLevel[i][this.level]), auraEffect));\r\n\r\n                    finaleAuraBonuses.push(tempString); \r\n                }\r\n    \r\n                if(this.quality !== 0 && this.altQuality === 2){\r\n                    tempString = this.effectOfQuality[this.altQuality]\r\n                    tempString = tempString.replace('##', calcStatFloored( (this.statPerQuality[this.altQuality] * this.quality), auraEffect));\r\n    \r\n                    finaleAuraBonuses.push(tempString);\r\n                }\r\n    \r\n                return finaleAuraBonuses;\r\n            } else return ['']\r\n        }\r\n    ),\r\n\r\n    new Aura(\r\n        'PURITY_FIRE',\r\n        //Title \r\n        'Purity of Fire',\r\n        //AlternateQualityBonuses \r\n        [\r\n            '',\r\n            '##% chance to avoid being Ignited',\r\n            'Damage Penetrates ##% Fire Resistance',\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 1, 0.2],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                0, 0, 0, 0, 1, 1, 1, 1, 1, 1,\r\n                2, 2, 2, 2, 2, 2, 3, 3, 3, 4,\r\n                4, 4, 5, 5, 5, 5, 5, 5, 5, 5,\r\n                5, 5, 5, 5, 5, 5, 5, 5, 5, 5\r\n            ],\r\n            [   0,\r\n                22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\r\n                32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\r\n                42, 43, 44, 45, 46, 47, 48, 49, 50, 51,\r\n                51, 52, 52, 53, 53, 54, 54, 55, 55, 56\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            '+##% to maximum Fire Resistance',\r\n            '+##% to Fire Resistance',\r\n        ]\r\n    ),    \r\n\r\n    new Aura(\r\n        'PURITY_ICE',\r\n        //Title \r\n        'Purity of Ice',\r\n        //AlternateQualityBonuses \r\n        [\r\n            '',\r\n            '##% chance to avoid being Frozen',\r\n            'Damage Penetrates ##% Cold Resistance',\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 1, 0.2],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                0, 0, 0, 0, 1, 1, 1, 1, 1, 1,\r\n                2, 2, 2, 2, 2, 2, 3, 3, 3, 4,\r\n                4, 4, 5, 5, 5, 5, 5, 5, 5, 5,\r\n                5, 5, 5, 5, 5, 5, 5, 5, 5, 5\r\n            ],\r\n            [   0,\r\n                22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\r\n                32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\r\n                42, 43, 44, 45, 46, 47, 48, 49, 50, 51,\r\n                51, 52, 52, 53, 53, 54, 54, 55, 55, 56\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            '+##% to maximum Cold Resistance',\r\n            '+##% to Cold Resistance',\r\n        ]\r\n    ),\r\n    \r\n    new Aura(\r\n        'PURITY_LIGHTNING',\r\n        //Title \r\n        'Purity of Lightning',\r\n        //AlternateQualityBonuses \r\n        [\r\n            '',\r\n            '##% chance to avoid being Frozen',\r\n            'Damage Penetrates ##% Lightning Resistance',\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 1, 0.2],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                0, 0, 0, 0, 1, 1, 1, 1, 1, 1,\r\n                2, 2, 2, 2, 2, 2, 3, 3, 3, 4,\r\n                4, 4, 5, 5, 5, 5, 5, 5, 5, 5,\r\n                5, 5, 5, 5, 5, 5, 5, 5, 5, 5\r\n            ],\r\n            [   0,\r\n                22, 23, 24, 25, 26, 27, 28, 29, 30, 31,\r\n                32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\r\n                42, 43, 44, 45, 46, 47, 48, 49, 50, 51,\r\n                51, 52, 52, 53, 53, 54, 54, 55, 55, 56\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            '+##% to maximum Lightning Resistance',\r\n            '+##% to Lightning Resistance',\r\n        ]\r\n    ),\r\n\r\n    new Aura(\r\n        'PURITY_ELEMENTS',\r\n        //Title \r\n        'Purity of Elements',\r\n        //AlternateQualityBonuses \r\n        [\r\n            '',\r\n            '##% chance to avoid Elemental Ailments',\r\n            'Damage Penetrates ##% Elemental Resistance',\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0.5, 0.2],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                12, 13, 14, 15, 15, 16, 17, 18, 19, 20,\r\n                20, 21, 22, 23, 24, 25, 25, 26, 27, 27,\r\n                28, 29, 29, 30, 31, 31, 32, 33, 33, 34,\r\n                34, 34, 34, 35, 35, 36, 36, 36, 36, 37\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            '+##% to all Elemental Resistances'\r\n        ]\r\n    ),\r\n\r\n    new Aura(\r\n        //KEY\r\n        'WAR_BANNER',\r\n        //Title \r\n        'War Banner',\r\n        //AlternateQualityBonuses \r\n        [\r\n            '',\r\n            '##% increased Accuracy Rating',\r\n            '',\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0.5, 0.3, 0],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                15, 15, 15, 16, 16, 16, 17, 17, 17, 18, \r\n                18, 18, 19, 19, 19, 20, 20, 20, 21, 21, \r\n                21, 22, 22, 22, 23, 23, 23, 24, 24, 24, \r\n                25, 25, 25, 26, 26, 26, 27, 27, 27, 28\r\n            ],\r\n            [   0,\r\n                8, 8, 8, 8, 8, 9, 9, 9, 9, 9, \r\n                10, 10, 10, 10, 10, 11, 11, 11, 11, 11, \r\n                12, 12, 12, 12, 12, 13, 13, 13, 13, 13, \r\n                14, 14, 14, 14, 14, 14, 14, 14, 14, 14\r\n            ]\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            '##% increased Accuracy Rating',\r\n            'Nearby Enemies take ##% increased Physical Damage'\r\n        ],\r\n        function(globalAuraEffect){\r\n            let auraEffect = this.getTotalAuraEffect(globalAuraEffect);\r\n    \r\n            let finaleAuraBonuses = [];\r\n    \r\n            let tempString;\r\n\r\n            if(this.altQuality === 0 && this.quality){\r\n                let incEffect = Math.floor(this.statPerQuality[this.altQuality] * this.quality);\r\n                if(incEffect >= 1){\r\n                    auraEffect += incEffect;\r\n                    finaleAuraBonuses.push(`(Has ${incEffect}% increassed effect from Quality)`)\r\n                }\r\n            }\r\n    \r\n            if(this.level !== 0 && this.level <= 40){\r\n            //Adding Aura Effect\r\n                for (let i = 0; i < this.effectOfAura.length; i++){\r\n                    tempString = this.effectOfAura[i];\r\n                    if(this.effectAtLevel[i][0].length === 2){\r\n                        tempString = tempString.replace('##', calcStatFloored(this.effectAtLevel[i][this.level][0], auraEffect)); //Replace min value\r\n                        tempString = tempString.replace('$$', calcStatFloored(this.effectAtLevel[i][this.level][1], auraEffect)); //Replace max value\r\n                    } else {\r\n                        tempString = tempString.replace('##', calcStatFloored(this.effectAtLevel[i][this.level], auraEffect));\r\n                    }\r\n                    finaleAuraBonuses.push(tempString); \r\n                }\r\n    \r\n                if(this.quality !== 0 && this.altQuality !== 0){\r\n                    tempString = this.effectOfQuality[this.altQuality]\r\n                    tempString = tempString.replace('##', calcStatFloored( (this.statPerQuality[this.altQuality] * this.quality), auraEffect));\r\n    \r\n                    finaleAuraBonuses.push(tempString);\r\n                }\r\n    \r\n                return finaleAuraBonuses;\r\n            } else return ['']\r\n        }\r\n    ),  \r\n\r\n    new Aura(\r\n        //Key\r\n        'DREAD_BANNER',\r\n        //Title \r\n        'Dread Banner',\r\n        //AlternateQualityBonuses \r\n        [\r\n            '',\r\n            'Nearby Enemies deal ##% less Damage',\r\n            '##% chance to Impale Enemies on Hit with Attacks',\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0.5, 0.1, 0.25],\r\n        //Values at each level for the aura\r\n        [\r\n            [ 0,\r\n                20, 20, 20, 20, 20, 20, 20, 20, 20, 20, \r\n                20, 20, 20, 20, 20, 20, 20, 20, 20, 20, \r\n                20, 20, 20, 20, 20, 20, 20, 20, 20, 20, \r\n                20, 20, 20, 20, 20, 20, 20, 20, 20, 20, \r\n            ],\r\n            [   0,\r\n                0, 1, 2, 3, 4, 5, 6, 7, 8, 9, \r\n                10, 11, 12, 13, 14, 15, 16, 17, 18, 19, \r\n                20, 21, 22, 23, 24, 25, 26, 27, 28, 29, \r\n                30, 31, 32, 33, 34, 35, 36, 37, 38, 39\r\n            ]\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            '##% chance to Impale Enemies on Hit with Attacks', \r\n            '##% increased Impale Effect',\r\n        ],\r\n        function(globalAuraEffect){\r\n            let auraEffect = this.getTotalAuraEffect(globalAuraEffect);\r\n    \r\n            let finaleAuraBonuses = [];\r\n    \r\n            let tempString;\r\n\r\n            if(this.altQuality === 0 && this.quality){\r\n                let incEffect = Math.floor(this.statPerQuality[this.altQuality] * this.quality);\r\n                if(incEffect >= 1){\r\n                    auraEffect += incEffect;\r\n                    finaleAuraBonuses.push(`(Has ${incEffect}% increassed effect from Quality)`)\r\n                }\r\n            }\r\n    \r\n            if(this.level !== 0 && this.level <= 40){\r\n            //Adding Aura Effect\r\n                for (let i = 0; i < this.effectOfAura.length; i++){\r\n                    tempString = this.effectOfAura[i];\r\n                    if(this.effectAtLevel[i][0].length === 2){\r\n                        tempString = tempString.replace('##', calcStatFloored(this.effectAtLevel[i][this.level][0], auraEffect)); //Replace min value\r\n                        tempString = tempString.replace('$$', calcStatFloored(this.effectAtLevel[i][this.level][1], auraEffect)); //Replace max value\r\n                    } else {\r\n                        tempString = tempString.replace('##', calcStatFloored(this.effectAtLevel[i][this.level], auraEffect));\r\n                    }\r\n                    finaleAuraBonuses.push(tempString); \r\n                }\r\n    \r\n                if(this.quality !== 0 && this.altQuality !== 0){\r\n                    tempString = this.effectOfQuality[this.altQuality]\r\n                    tempString = tempString.replace('##', calcStatFloored( (this.statPerQuality[this.altQuality] * this.quality), auraEffect));\r\n    \r\n                    finaleAuraBonuses.push(tempString);\r\n                }\r\n    \r\n                return finaleAuraBonuses;\r\n            } else return ['']\r\n        }\r\n    ),    \r\n\r\n    new Aura(\r\n        //Key\r\n        'DISCIPLINE',\r\n        //Title \r\n        'Discipline',\r\n        //AlternateQualityBonuses \r\n        [\r\n            '',\r\n            '##% increased Damage while on Full Energy Shield',\r\n            ['##% increased Energy Shield Recharge rate', '##% slower start of Energy Shield Recharge']\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0.5, [2, 1.5]],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                60, 69, 76, 85, 94, 103, 114, 124, 136, 143, \r\n                147, 156, 165, 171, 179, 185, 192, 200, 205, 217, \r\n                221, 231, 238, 250, 262, 269, 284, 294, 304, 314, \r\n                314, 323, 323, 332, 332, 340, 340, 348, 348, 356\r\n            ],\r\n            [\r\n                0,\r\n                30, 30, 30, 30, 30, 30, 30, 30, 30, 30, \r\n                30, 30, 30, 30, 30, 30, 30, 30, 30, 30, \r\n                30, 30, 30, 30, 30, 30, 30, 30, 30, 30, \r\n                30, 30, 30, 30, 30, 30, 30, 30, 30, 30, \r\n            ]\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            '+## to maximum Energy shield',\r\n            '##% increased Energy Shield Recharge rate'\r\n        ],\r\n        function(globalAuraEffect){\r\n            let auraEffect = this.getTotalAuraEffect(globalAuraEffect);\r\n    \r\n            let finaleAuraBonuses = [];\r\n    \r\n            let tempString;\r\n    \r\n            if(this.level !== 0 && this.level <= 40){\r\n            //Adding Aura Effect\r\n                for (let i = 0; i < this.effectOfAura.length; i++){\r\n                    tempString = this.effectOfAura[i];\r\n                    if(this.effectAtLevel[i][0].length === 2){\r\n                        tempString = tempString.replace('##', calcStatFloored(this.effectAtLevel[i][this.level][0], auraEffect)); //Replace min value\r\n                        tempString = tempString.replace('$$', calcStatFloored(this.effectAtLevel[i][this.level][1], auraEffect)); //Replace max value\r\n                    } else {\r\n                        tempString = tempString.replace('##', calcStatFloored(this.effectAtLevel[i][this.level], auraEffect));\r\n                    }\r\n                    finaleAuraBonuses.push(tempString); \r\n                }\r\n    \r\n                if(this.quality !== 0 && this.altQuality !== 0){\r\n\r\n                    \r\n                    if (this.effectOfQuality[this.altQuality].length === 2){\r\n\r\n                        for (let i = 0; i < this.effectOfQuality[this.altQuality].length; i++){\r\n                            tempString = this.effectOfQuality[this.altQuality][i]\r\n                            tempString = tempString.replace('##', calcStatFloored( (this.statPerQuality[this.altQuality][i] * this.quality), auraEffect));\r\n                            finaleAuraBonuses.push(tempString);\r\n                        }\r\n                        \r\n                    }else{\r\n                        tempString = tempString.replace('##', calcStatFloored( (this.statPerQuality[this.altQuality] * this.quality), auraEffect));\r\n                        finaleAuraBonuses.push(tempString);\r\n                    }\r\n                }\r\n    \r\n                return finaleAuraBonuses;\r\n            } else return ['']\r\n        }\r\n    ),    \r\n\r\n    new Aura(\r\n        //Key\r\n        'GRACE',\r\n        //Title \r\n        'Grace',\r\n        //AlternateQualityBonuses \r\n        [\r\n            '',\r\n            '##% chance to avoid Elemental Ailments',\r\n            '##% chance to Avoid Chaos Damage from Hits',\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0.5, 0.2],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                227, 271, 322, 379, 444, 528, 621, 722, 845, 940, \r\n                1043, 1155, 1283, 1413, 1567, 1732, 1914, 2115, 2335, 2575, \r\n                2700, 2835, 2979, 3124, 3279, 3444, 3611, 3795, 3982, 4179, \r\n                4282, 4386, 4494, 4603, 4716, 4830, 4948, 5067, 5190, 5314     \r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            '+## to Evasion rating',\r\n        ]\r\n    ),  \r\n\r\n    new Aura(\r\n        //Key\r\n        'DETERMINATION',\r\n        //Title \r\n        'Determination',\r\n        //AlternateQualityBonuses \r\n        [\r\n            '',\r\n            '##% chance to Avoid being Stunned',\r\n            '##% of Evasion Rating as Extra Armour',\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 1, 0.5],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                32, 33, 34, 35, 36, 37, 38, 39, 40, 41, \r\n                42, 43, 44, 45, 46, 47, 48, 49, 50, 51, \r\n                52, 53, 54, 55, 56, 57, 58, 59, 60, 61, \r\n                61, 62, 62, 63, 63, 64, 64, 65, 65, 66\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            '##% more Armour',\r\n        ]\r\n    ),  \r\n\r\n    new Aura(\r\n        //Key\r\n        'CLARITY',\r\n        //Title \r\n        'Clarity',\r\n        //AlternateQualityBonuses \r\n        [\r\n            '',\r\n            '##% increased Mana Recovery from Flasks',\r\n            '##% increased Damage while on Full Mana',\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0.5, 1],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                2.9,   4.4,  6.5, 8.4,  10.4, 12.5, 14.5,   16, 17.5,   19, \r\n                20.5,   22, 23.5,  25,  26.5,   28, 29.5,   31,   32,   33, \r\n                34,     35,   36,  37,    38,   39,   40,   41,   42, 43.1, \r\n                43.6, 44.1, 44.6, 45.1, 45.6, 46.1, 46.6, 47.1, 47.6, 48.1\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            '+## Mana Regeneration',\r\n        ],\r\n        function(globalAuraEffect){\r\n            let auraEffect = this.getTotalAuraEffect(globalAuraEffect);\r\n    \r\n            let finaleAuraBonuses = [];\r\n    \r\n            let tempString;\r\n    \r\n            if(this.level !== 0 && this.level <= 40){\r\n            //Adding Aura Effect\r\n                for (let i = 0; i < this.effectOfAura.length; i++){\r\n                    tempString = this.effectOfAura[i];\r\n                    \r\n                    tempString = tempString.replace('##', calcStat(this.effectAtLevel[i][this.level], auraEffect));\r\n                    \r\n                    finaleAuraBonuses.push(tempString); \r\n                }\r\n    \r\n                if(this.quality !== 0 && this.altQuality !== 0){\r\n                    tempString = this.effectOfQuality[this.altQuality]\r\n\r\n                    if(this.altQuality === 1)\r\n                        tempString = tempString.replace('##', calcStatFloored( (this.statPerQuality[this.altQuality] * this.quality), auraEffect));\r\n                    else\r\n                        tempString = tempString.replace('##', calcStatFloored( (this.statPerQuality[this.altQuality] * this.quality), auraEffect));\r\n\r\n                    finaleAuraBonuses.push(tempString);\r\n                }\r\n    \r\n                return finaleAuraBonuses;\r\n            } else return ['']\r\n        }\r\n    ),    \r\n\r\n    new Aura(\r\n        //Key\r\n        'PRECISION',\r\n        //Title \r\n        'Precision',\r\n        //AlternateQualityBonuses \r\n        [\r\n            '',\r\n            '',\r\n            ['##% increased Damage','##% less Area of Effect'],\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0, 0.5],\r\n        //Values at each level for the aura\r\n        [\r\n            [\r\n                  93,  128,  162,  193,  223,  276,  305,  332,  359,  385, \r\n                 444,  469,  493,  516,  539,  606,  630,  653,  677,  701, \r\n                 778,  804,  831,  857,  883,  972, 1000, 1029, 1058, 1087, \r\n                1172, 1187, 1203, 1218, 1233, 1324, 1340, 1357, 1374, 1390\r\n            ],\r\n            [   0,\r\n                20, 22, 24, 26, 28, 30, 32, 34, 36, 38, \r\n                40, 42, 44, 46, 48, 50, 52, 54, 56, 58, \r\n                60, 62, 64, 66, 68, 70, 72, 74, 76, 78, \r\n                79, 80, 81, 82, 83, 84, 85, 86, 87, 88\r\n            ]\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            '+## to Accuracy Rating',\r\n            '##% increased Critical Strike Chance'\r\n        ],\r\n\r\n        function(globalAuraEffect){\r\n            let auraEffect = this.getTotalAuraEffect(globalAuraEffect);\r\n    \r\n            let finaleAuraBonuses = [];\r\n    \r\n            let tempString;\r\n    \r\n            if(this.level !== 0 && this.level <= 40){\r\n            //Adding Aura Effect\r\n                for (let i = 0; i < this.effectOfAura.length; i++){\r\n                    tempString = this.effectOfAura[i];\r\n                    if(this.effectAtLevel[i][0].length === 2){\r\n                        tempString = tempString.replace('##', calcStatFloored(this.effectAtLevel[i][this.level][0], auraEffect)); //Replace min value\r\n                        tempString = tempString.replace('$$', calcStatFloored(this.effectAtLevel[i][this.level][1], auraEffect)); //Replace max value\r\n                    } else {\r\n                        tempString = tempString.replace('##', calcStatFloored(this.effectAtLevel[i][this.level], auraEffect));\r\n                    }\r\n                    finaleAuraBonuses.push(tempString); \r\n                }\r\n    \r\n                if(this.quality !== 0 && this.altQuality === 2){\r\n      \r\n                    for (let i = 0; i < this.effectOfQuality[this.altQuality].length; i++){\r\n                    tempString = this.effectOfQuality[this.altQuality][i];\r\n                    tempString = tempString.replace('##', calcStatFloored( (this.statPerQuality[this.altQuality] * this.quality), auraEffect));\r\n                    finaleAuraBonuses.push(tempString);\r\n                    }\r\n                }\r\n    \r\n                return finaleAuraBonuses;\r\n            } else return ['']\r\n        }\r\n    ),  \r\n    \r\n    new Aura(\r\n        //Key\r\n        'VITALITY',\r\n        //Title \r\n        'Vitality',\r\n        //AlternateQualityBonuses \r\n        [\r\n            '',\r\n            'Leech ##% of Physical Attack Damage as Life',\r\n            '% increased Damage while on Full Life',\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0.02, 1],\r\n        //Values at each level for the aura\r\n        [\r\n            [   0,\r\n                15, 26.5, 42, 57.5, 73, 88.4, 103.9, 115.5, 127.1, 138.8, \r\n                150.2, 161.9, 173.5, 185.1, 196.8, 208.2, 219.9, 231.5, 239.2, 247, \r\n                254.8, 262.5, 270.1, 277.9, 285.6, 293.4, 301.1, 308.9, 316.6, 324.4, \r\n                328.1, 332, 335.9, 339.8, 343.6, 347.5, 351.4, 355.2, 359.1, 363\r\n            ],\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            'Regenerate ## Life per second',\r\n        ],\r\n        function(globalAuraEffect){\r\n            let auraEffect = this.getTotalAuraEffect(globalAuraEffect);\r\n    \r\n            let finaleAuraBonuses = [];\r\n    \r\n            let tempString;\r\n    \r\n            if(this.level !== 0 && this.level <= 40){\r\n            //Adding Aura Effect\r\n                for (let i = 0; i < this.effectOfAura.length; i++){\r\n                    tempString = this.effectOfAura[i];\r\n                    \r\n                    tempString = tempString.replace('##', calcStat(this.effectAtLevel[i][this.level], auraEffect));\r\n                    \r\n                    finaleAuraBonuses.push(tempString); \r\n                }\r\n    \r\n                if(this.quality !== 0 && this.altQuality !== 0){\r\n                    tempString = this.effectOfQuality[this.altQuality]\r\n\r\n                    if(this.altQuality === 1)\r\n                        tempString = tempString.replace('##', calcStat( (this.statPerQuality[this.altQuality] * this.quality), auraEffect));\r\n                    else\r\n                        tempString = tempString.replace('##', calcStatFloored( (this.statPerQuality[this.altQuality] * this.quality), auraEffect));\r\n\r\n                    finaleAuraBonuses.push(tempString);\r\n                }\r\n    \r\n                return finaleAuraBonuses;\r\n            } else return ['']\r\n        }\r\n    ),\r\n    \r\n\r\n    new Aura(\r\n        //Key\r\n        'ENVY',\r\n        //Title \r\n        'Envy',\r\n        //AlternateQualityBonuses \r\n        [\r\n            '',\r\n            '',\r\n            '',\r\n        ],\r\n        //Values Per Quality of the diffrent alt Qualities\r\n        [0, 0, 0],\r\n        //Values at each level for the aura\r\n        [\r\n            [   [0, 0],\r\n                [101, 141], [101, 141], [101, 141], [101, 141], [101, 141], [101, 141], [101, 141], [101, 141], [101, 141], [101, 141], \r\n                [101, 141], [101, 141], [101, 141], [101, 141], [101, 141], [101, 141], [101, 141], [101, 141], [101, 141], [101, 141], \r\n                [101, 141], [101, 141], [101, 141], [101, 141], [101, 141], [101, 141], [101, 141], [101, 141], [101, 141], [101, 141], \r\n                [101, 141], [101, 141], [101, 141], [101, 141], [101, 141], [101, 141], [101, 141], [101, 141], [101, 141], [101, 141]       \r\n            ],\r\n            [   [0, 0],\r\n                [91, 121], [91, 121], [91, 121], [91, 121], [91, 121], [91, 121], [91, 121], [91, 121], [91, 121], [91, 121], \r\n                [91, 121], [91, 121], [91, 121], [91, 121], [91, 121], [91, 121], [91, 121], [91, 121], [91, 121], [91, 121], \r\n                [91, 121], [91, 121], [91, 121], [91, 121], [91, 121], [91, 121], [91, 121], [91, 121], [91, 121], [91, 121], \r\n                [91, 121], [91, 121], [91, 121], [91, 121], [91, 121], [91, 121], [91, 121], [91, 121], [91, 121], [91, 121] \r\n            ]\r\n        ],\r\n        //Aura Bonuses\r\n        [\r\n            'Adds ## to $$ additional Chaos Damage with Attacks',\r\n            'Adds ## to $$ additional Chaos Damage with Spells',\r\n        ],\r\n\r\n        function(globalAuraEffect){\r\n            let auraEffect = this.getTotalAuraEffect(globalAuraEffect);\r\n    \r\n            let finaleAuraBonuses = [];\r\n    \r\n            let tempString;\r\n    \r\n            if(this.level !== 0 && this.level <= 40){\r\n            //Adding Aura Effect\r\n                for (let i = 0; i < this.effectOfAura.length; i++){\r\n                    tempString = this.effectOfAura[i];\r\n                    \r\n                    tempString = tempString.replace('##', calcStatFloored(this.effectAtLevel[i][1][0], auraEffect)); //Replace min value\r\n                    tempString = tempString.replace('$$', calcStatFloored(this.effectAtLevel[i][this.level][1], auraEffect)); //Replace max value\r\n                    \r\n                    finaleAuraBonuses.push(tempString); \r\n                }\r\n    \r\n                return finaleAuraBonuses;\r\n            } else return ['']\r\n        },\r\n\r\n        true //isSpecial\r\n    ), \r\n    \r\n    ];\r\n\r\n    \r\n/* Template for new Aura.\r\n\r\nnew Aura(\r\n    //Key\r\n    '',\r\n    //Title \r\n    '',\r\n    //AlternateQualityBonuses \r\n    [\r\n        [''],\r\n        [''],\r\n        [''],\r\n    ],\r\n    //Values Per Quality of the diffrent alt Qualities\r\n    [0, 0, 0],\r\n    //Values at each level for the aura\r\n    [\r\n        [\r\n\r\n        ],\r\n    ],\r\n    //Aura Bonuses\r\n    [\r\n        [''],\r\n    ]\r\n),    \r\n\r\n*/\r\n\r\n\r\nexport default auras;","var clusterNodes = [\r\n\r\n    { name: 'Small 6% Aura Effect', affects:[], auraEffect: 6, amount: 0},\r\n\r\n    { name: 'Small 7% Aura Effect', affects:[], auraEffect: 7, amount: 0 },\r\n\r\n    { name: 'Small 8% Aura Effect', affects:[], auraEffect: 8, amount: 0 },\r\n    \r\n    { name: 'First Among Equals', affects: [], auraEffect: 10, amount: 0 },\r\n\r\n    { name: 'Replenishing Presence', affects: [], special: true,auraEffect: 8, amount: 0, effect: function(){ return [`Regenerate ${this.amount}% of Life per second`] }},\r\n\r\n    { name: 'Vengeful Commander', affects: ['ANGER', 'HATRED', 'WRATH'], auraEffect: 20, amount: 0 },\r\n\r\n    { name: 'Stalwart Commander', affects: ['GRACE', 'DISCIPLINE', 'DETERMINATION'], auraEffect: 30, amount: 0 },\r\n\r\n    { name: 'Pure Commander', affects:[['PURITY_ICE', 'PURITY_FIRE', 'PURITY_LIGHTNING'], ['PURITY_ELEMENTS']], auraEffect: [10, 30], amount: 0},\r\n\r\n    { name: 'Precise Commander', affects: undefined, key:'PRECISE_COMMANDER', special: true, amount: 0, effect: function(){ return [`${25 * this.amount}% increased Critical Strike Chance`,`+${10 * this.amount}% to Critical Strike Multiplier`] }} \r\n]\r\nexport default clusterNodes;","class TreeCluster{\r\n    constructor(key, name, notableAuraEffect, numSmallPassives, hasBorder, canHaveMOTM){\r\n\r\n        let tempArray = []\r\n\r\n        for (let i = 0; i < numSmallPassives; i++){\r\n            tempArray.push([i, false]) //all small nodes grant 6% aura effect\r\n        }\r\n\r\n        this.key = key;\r\n        this.name = name;\r\n        this.notable = new Notable(name, notableAuraEffect, hasBorder);\r\n        this.smallPassives = tempArray;\r\n        this.motm = false;\r\n        this.canHaveMOTM = canHaveMOTM\r\n\r\n        this.clusterAuraEffect = function(){\r\n            \r\n            let sum = 0;\r\n\r\n            //console.log(this.smallPassives.length);\r\n            for (let i = 0; i < this.smallPassives.length; i++){\r\n                console.log(this.smallPassives[i][1], i);\r\n                if(this.smallPassives[i][1] === true){\r\n                    if(this.motm === true){\r\n                        sum += 9;\r\n                    } else sum += 6;\r\n                }\r\n            }\r\n            \r\n            if(this.notable.isActive && this.motm === false){\r\n                sum += this.notable.auraEffect;\r\n            }\r\n            console.log(sum)\r\n            return sum;\r\n        }\r\n    }\r\n}\r\n\r\nclass Notable{\r\n    constructor(name, auraEffect, hasBorder){\r\n        this.name = name;\r\n        this.auraEffect = auraEffect;\r\n        this.isActive = false;\r\n        this.hasBorder = hasBorder;\r\n    }\r\n}\r\n\r\n//new TreeCluster(key, name, notableAuraEffect, numSmallPassives)\r\nvar treePassives = [\r\n    new TreeCluster('SOVEREIGNTY',      'Sovereignty',           10, 1, true, false),\r\n    new TreeCluster('LEADERSHIP',       'Leadership',            6,  1, true, true),\r\n    new TreeCluster('INFLUENCE',        'Influence',             14, 1, true, true),\r\n    new TreeCluster('CHARISMA',         'Charisma',              6,  0, true, true),\r\n    new TreeCluster('CHAMPION_CAUSE',   'Champion of the Cause', 6,  1, true, true),\r\n    new TreeCluster('DEVOTION',         'Devotion',              3,  0, true, true),\r\n    new TreeCluster('POTENCY',          'Conqueror\\'s Pontency', 3,  0, false,false),\r\n]\r\n\r\nexport default treePassives;","class AurasFromSkills{\r\n    constructor(key, source, statLine, number, floor){\r\n        this.active = false;\r\n        this.key = key\r\n        this.source = source;\r\n        this.statLine = statLine;\r\n        this.number = number;\r\n        this.toFloor = floor;\r\n\r\n        this.printEffect = function(auras, globalAuraEffect){\r\n            \r\n            let totalValue = 0;\r\n            let arrayOfStats = [];\r\n            \r\n            //For Each Aura with level > 0 we add 1 + XX% Aura effect to total value \r\n            auras.forEach((aura) => {\r\n\r\n               if (aura.level > 0){\r\n\r\n                    //Formula to calculate a multiploer based on a percentague :  XX%/100 +1 or (XX% + 100)/100, using second one and divind at the end to avoid flaoting points.\r\n                   totalValue += aura.getTotalAuraEffect(globalAuraEffect)+100;\r\n               }\r\n            })\r\n\r\n            //Divide at the end of all the sums to avoid Floating point numbers.\r\n            totalValue = totalValue/100;\r\n            \r\n            //for each statline from a given source we multiple its value by the multiploer\r\n            for(let i = 0; i < this.statLine.length; i++){\r\n                let toPush;\r\n\r\n                if(this.toFloor[i] === true){\r\n                    let value = Math.floor(this.number[i] * totalValue)\r\n                    toPush = this.statLine[i].replace('##', value)\r\n                } else {\r\n                    let value = Math.floor(this.number[i] * totalValue * 100)/100\r\n                    toPush = this.statLine[i].replace('##', value)\r\n                }\r\n\r\n                arrayOfStats.push(toPush);\r\n            }\r\n\r\n            \r\n            return arrayOfStats;\r\n        }\r\n    } \r\n}\r\n\r\nvar aurasFromSkills = [\r\n\r\n    new AurasFromSkills ('NECRO', 'Necromancer', ['##% increased Attack and Cast Speed'], [3], [true]),\r\n    new AurasFromSkills ('GUARD', 'Guardian', ['+##% Physical Damage Reduction', '##% of Life Regenerated per second'], [1, 0.2], [true, false]),\r\n    new AurasFromSkills ('SCIONN', 'Scion(Necro)', ['##% increased Attack and Cast Speed'], [2], [true]),\r\n    new AurasFromSkills ('SCIONG', 'Scion(Guardian)', ['+##% Physical Damage Reduction'], [1], [true]),\r\n    new AurasFromSkills ('WEAPON1', 'Weapon One-Hand(1)', ['##% incerased Damage'], [2], [true]),\r\n    new AurasFromSkills ('WEAPON2', 'Weapon One-Hand(2)', ['##% incerased Damage'], [2], [true]),\r\n    new AurasFromSkills ('WEPTWO', 'Weapon Two-Hand', ['##% incerased Damage'], [4], [true]),\r\n\r\n]\r\n\r\nexport default aurasFromSkills;\r\n\r\n/*\r\nif (aura.level !== 0 && !aura.buff){\r\n              \r\n                    for(let i = 0; i < this.statLine.length; i++){\r\n                    \r\n                        if(this.toFloor[i] === true && this.key === 'GUARD'){\r\n                            totalValue += calcStatFloored(this.number[i], aura.getTotalAuraEffect(globalAuraEffect));\r\n                        } else {\r\n                            console.log(this.number)\r\n                            totalValue += calcStat(this.number[i], aura.getTotalAuraEffect(globalAuraEffect));\r\n                            console.log(totalValue);\r\n                        }\r\n\r\n                        \r\n                        //totalValue = 0;\r\n                    }\r\n                    arrayOfStats.push(this.statLine[0].replace('##', totalValue));\r\n                }\r\n                */","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class NavBar extends Component {\r\n\r\n    handleChange(e){\r\n        const page = e.target.value;\r\n        console.log(page);\r\n        this.props.changePage(page);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='topnav'>\r\n                <div className='divider' /><div className='divider' />\r\n                    <Link to='/aurastatcalc/'>   \r\n                        <button>Home</button>\r\n                    </Link>\r\n                <div className='divider' />\r\n                    <Link to='/aurastatcalc/tree'>   \r\n                        <button>Tree</button>\r\n                    </Link>\r\n                <div className='divider' />\r\n                    <Link to='/aurastatcalc/gear'>   \r\n                        <button>Gear</button>\r\n                    </Link>\r\n                <div className='divider' />\r\n                    <Link to='/aurastatcalc/auras'>\r\n                        <button>Auras</button>\r\n                    </Link>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\n\r\nexport default class Aura extends Component {\r\n    render() {\r\n\r\n        let printEffects = (aura, globalEffect) => {\r\n\r\n            let tempString = [];\r\n\r\n            if(aura.level > 0 && aura.level <= 40){\r\n\r\n                if(aura.specificAuraEffect > 0)\r\n                tempString.push(<li className='aura_name'>{`~ ${aura.title} (has +${aura.specificAuraEffect}% increased effect) ~`}</li>);\r\n                else \r\n                tempString.push(<li className='aura_name'>{`~ ${aura.title} ~`}</li>);\r\n                \r\n                let effects = aura.printEffect(globalEffect);\r\n\r\n                for(const effect of effects){\r\n                    tempString.push(<li className='aura_stat'>{effect}</li>);\r\n                }\r\n            }\r\n\r\n\r\n            /*\r\n            if(aura.level > 0 && aura.quality > 0 && aura.statPerQuality[aura.altQuality] !== 0){\r\n                let effects = aura.printQuality(globalEffect);\r\n\r\n                for(const effect of effects){\r\n                    tempString.push(<li className='aura_stat'>{effect}</li>);\r\n                }\r\n            }\r\n            */\r\n\r\n            if (tempString.length !== 0){\r\n                tempString.push(<li key={aura.key} className='aura_sepa'>{'~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~'}</li>);\r\n            }\r\n        \r\n            return tempString.map((stat) => (stat))\r\n        }\r\n\r\n        return this.props.auras.map((aura) => (\r\n            printEffects(aura, this.props.globalAuraEffect)\r\n        ));\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Specials extends Component {\r\n    render() {\r\n\r\n        let printSpecials = (cluster) => {\r\n\r\n            let tempString = [];\r\n\r\n            if(cluster.special === true && cluster.amount > 0){\r\n                \r\n                tempString.push(<li className='aura_name'>{'~ '+ cluster.name +' ~'}</li>);\r\n                \r\n\r\n                let effects = cluster.effect();\r\n                \r\n                for(const effect of effects){\r\n                    tempString.push(<li className='aura_stat'>{effect}</li>);\r\n                }\r\n            }\r\n            if (tempString.length !== 0){\r\n                tempString.push(<li key={cluster.key} className='aura_sepa'>{'~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~'}</li>);\r\n            }\r\n\r\n            return tempString.map((stat) => (stat))\r\n        }\r\n\r\n        return this.props.clusters.map((cluster) => (\r\n            printSpecials(cluster)\r\n        ));\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class AuraMods extends Component {\r\n    \r\n    \r\n    \r\n    render() {\r\n\r\n        let printActiveMods = (mod) => {\r\n            \r\n            let tempString = [];\r\n\r\n            if(mod.active){\r\n\r\n                tempString.push(<li className='aura_name'>{`~ ${mod.source} ~`}</li>);\r\n\r\n                \r\n               \r\n                let auraModsGrp = mod.printEffect(this.props.auras, this.props.globalAuraEffect);\r\n                auraModsGrp.forEach(line => {\r\n                    tempString.push(<li className='aura_stat'>{line}</li>)\r\n                }) \r\n            }\r\n\r\n            return tempString.map((line) => (line))\r\n        }\r\n\r\n        return this.props.aurasFromSkills.map((mod) => (\r\n            printActiveMods(mod)\r\n        ))\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport PropType from 'prop-types';\r\nimport Aura from './Aura';\r\nimport Specials from './Specials';\r\nimport AuraMods from './AuraMods';\r\n\r\nexport default class OutputBox extends Component {\r\n    render() {\r\n\r\n    return (\r\n        <div className='page output'>\r\n            <div className='output_box'>\r\n                <div className='sticky'>\r\n                    <h1>Aura Stats output</h1>\r\n                    <p>\r\n                        - {this.props.globalAuraEffect}% increased Aura Effect (Global)<br />\r\n                    </p>\r\n                </div>\r\n                    <Aura auras={this.props.auras} globalAuraEffect={this.props.globalAuraEffect}/>\r\n                    <Specials clusters={this.props.clusters} />\r\n                    <AuraMods auras={this.props.auras} aurasFromSkills={this.props.aurasFromSkills} globalAuraEffect={this.props.globalAuraEffect}/>\r\n            </div>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\n//PropTypes\r\nOutputBox.propTypes = {\r\n    globalAuraEffect: PropType.object.isRequired,\r\n    auras: PropType.object.isRequired\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class AscendancyPage extends Component {\r\n    render() {\r\n        return (\r\n            <div className='mainapp ascendancy'>\r\n                <div className='asc_buttons'>\r\n                    <button onClick=''><img src='img/ascendancy/scion.png'  alt='Scion'/></button>\r\n                    <button onClick=''><img src='img/ascendancy/guardian.png'  alt='Guardian'/></button>\r\n                    <button onClick=''><img src='img/ascendancy/necro.png'  alt='Nec'/></button>\r\n                    <hr />\r\n                </div>\r\n                <div className='asc_states'>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class DisplayTree extends Component {\r\n    \r\n    hasBorder(){\r\n\r\n        if(this.props.tree.notable.hasBorder){\r\n            return <img className='border' src='img/borders/notable_border.webp' alt=''/>\r\n        } else return null;\r\n    }\r\n\r\n    isMotmON() {\r\n        if(this.props.tree.motm){\r\n            return 1.5;\r\n        } else return 1;\r\n    }\r\n\r\n    renderMOTM(){\r\n\r\n        if(this.props.tree.canHaveMOTM){\r\n            return( <label>\r\n                        <div className='motm'>\r\n                                <div className='motmpassives'>\r\n                                    <img src={`img/tree/motm.png`} alt=''/>\r\n                                </div>\r\n                                <input onClick={this.onChangeMOTM.bind(this)} value={this.props.tree.key} checked={this.props.tree.motm} type='checkbox' />\r\n                                <span className='title'>Might of the Meek</span>\r\n                                \r\n                        </div>\r\n                </label>)\r\n        } else return null;\r\n    }\r\n\r\n    onChangeSmallNode(e){\r\n\r\n        this.props.tree.smallPassives[e.target.value][1] = !this.props.tree.smallPassives[e.target.value][1];\r\n        this.props.changeTreeNodes();\r\n    }\r\n\r\n    onChangeNotable(e){\r\n        //console.log(e.target.value)\r\n        this.props.tree.notable.isActive = !this.props.tree.notable.isActive;\r\n        this.props.changeTreeNodes();\r\n    }\r\n\r\n    onChangeMOTM(e){\r\n\r\n        this.props.tree.motm = !this.props.tree.motm;\r\n        this.props.changeTreeNodes();\r\n\r\n    }\r\n    \r\n\r\n\r\n    render() {\r\n        //console.log(this.props.tree)\r\n        return (\r\n            <div>\r\n                <div className='treeLabel'>\r\n\r\n                <label>\r\n                    <div className='notables'>\r\n                        <div className='notable'>\r\n                            {this.hasBorder()}\r\n                            <img src={`img/tree/${this.props.tree.key.toLowerCase()}.png`} alt=''/>\r\n                        </div>\r\n                    \r\n                        <input onChange={this.onChangeNotable.bind(this)} value={this.props.tree.key} type='checkbox' id={this.props.tree.key.toLowerCase()} checked={this.props.tree.notable.isActive}/>\r\n                        <span className='title'>{this.props.tree.notable.name}</span>\r\n                    </div>\r\n                </label>\r\n\r\n                {this.props.tree.smallPassives.map((smallNode) => (\r\n                    <label>\r\n                        <div className='smalls'>\r\n                                <div className='smallpassives'>\r\n                                    <img className='border' src='img/borders/small_border.webp' alt=''/>\r\n                                    <img src={`img/tree/effect.png`} alt=''/>\r\n                                </div>\r\n                                <input value={this.props.tree.smallPassives.indexOf(smallNode)} onClick={this.onChangeSmallNode.bind(this)} checked={smallNode[1]} type='checkbox' />\r\n                                <span className='title'>{6 * this.isMotmON()}% aura effect</span>\r\n                        </div>\r\n                    </label>\r\n                ))}\r\n                \r\n                {this.renderMOTM()}\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n/*\r\n<label>\r\n                <div className='smalls'>\r\n                        <div className='smallpassives'>\r\n                            <img className='border' src='img/borders/small_border.webp' />\r\n                            <img src={`img/tree/effect.png`} />\r\n                            \r\n                        </div>\r\n                        <input type='checkbox' />\r\n                        <span className='title'>6% aura effect</span>\r\n                </div>\r\n                </label>*/","import React, { Component } from 'react'\r\nimport DisplayTree from './DisplayTree';\r\n\r\n\r\nexport default class DisplayTrees extends Component {\r\n    render() {\r\n        return this.props.trees.map((tree) => (\r\n            <DisplayTree \r\n            changeTreeNodes={this.props.changeTreeNodes}\r\n                tree={tree}\r\n            />\r\n               \r\n         ));\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport DisplayTrees from './treeTabs/DisplayTrees';\r\n\r\nexport default class TreePage extends Component {\r\n\r\n    onChangeTimeless(e){\r\n        this.props.changeTimeless(e.target.value);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='mainapp gem_grps'>\r\n                <h1>Tree</h1>\r\n                <DisplayTrees \r\n                    changeTreeNodes={this.props.changeTreeNodes}\r\n                    trees={this.props.trees}\r\n                />\r\n                 \r\n                 <div className='treeLabel'>\r\n                    <label>\r\n                        <div className='notables'>\r\n                            <div className='notable'>\r\n                                \r\n                                <img src={`img/tree/timless.png`} alt=''/>\r\n                            </div>\r\n                            <input onChange={this.onChangeTimeless.bind(this)} defaultValue={this.props.timeless} type='number' min='0' max='100'/>\r\n                            <span className='title'>%Aura Effect</span>\r\n                        </div>\r\n                    </label>\r\n                </div>    \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class DisplayArmour extends Component {\r\n\r\n    onChangeAuraEffect(e){\r\n        \r\n        let newAuraEffect = e.target.value;\r\n        this.props.changeArmourGlobalEffect(Number(newAuraEffect), this.props.tag.toLowerCase());\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='armours'>\r\n                <div className='armour'>\r\n\r\n                    <img src='img/cluster/notable.png' alt=''/>\r\n\r\n                    <span className='title'>{this.props.name}</span>\r\n\r\n                    <div className='inputs'>\r\n                        <input onChange={this.onChangeAuraEffect.bind(this)} defaultValue={this.props.gear} type='number' min='0' max='80'/>\r\n                    </div>\r\n                </div>\r\n         </div>          \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class DisplayJewelry extends Component {\r\n\r\n    onChangeCorruptionAura(e){\r\n\r\n        let newSelectedItem = e.target.value;\r\n        this.props.changeCorruption(newSelectedItem, this.props.tag.toLowerCase(), Number(e.target.id));\r\n    }\r\n\r\n    onChangeAuraPercent(e){\r\n\r\n        let newAuraPercent = e.target.value; \r\n        this.props.changeJewelryNumber(newAuraPercent, this.props.tag.toLowerCase(), Number(e.target.id));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='armours'>\r\n                <div className='armour'>\r\n\r\n                <img src='img/cluster/notable.png' alt=''/>\r\n\r\n                <span className='title'>{this.props.name}</span>\r\n                <br/>\r\n                <span className='title-corruption'>Corruption 1 :</span>\r\n                <div className='inputs'>\r\n                    <input id='1' min='0' max='80' type='number' defaultValue={this.props.gear.corruption1[0]} onChange={this.onChangeAuraPercent.bind(this)} />\r\n                    <select id='1' defaultValue={this.props.gear.corruption1[1]} onChange={this.onChangeCorruptionAura.bind(this)} >\r\n                            <option value='0' >None</option>\r\n                            {this.props.auraSelectList.map((aura) => (\r\n                                <option value={aura[1]} >{aura[2]}</option>\r\n                            ))}\r\n                    </select>\r\n                </div>\r\n                    <br/>\r\n                <span className='title-corruption'>Corruption 2 :</span>\r\n                <div className='inputs'>\r\n                    <input id='2' min='0' max='80'  type='number' defaultValue={this.props.gear.corruption2[0]} onChange={this.onChangeAuraPercent.bind(this)} />\r\n                    <select id='2' defaultValue={this.props.gear.corruption2[1]}  onChange={this.onChangeCorruptionAura.bind(this)} >\r\n                            <option value='0' >None</option>\r\n                            {this.props.auraSelectList.map((item) => (\r\n                                <option value={item[0]+1} >{item[2]}</option>\r\n                            ))}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n     </div>  \r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class DisplayWeapons extends Component {\r\n\r\n    twoHandActive(){\r\n\r\n        if (this.props.twohand){\r\n            return 4\r\n        }\r\n        else {\r\n            return 2\r\n        }\r\n    }\r\n\r\n    onChangeAura(e){\r\n        \r\n        let newAura = e.target.value;\r\n        this.props.changeAuraWeapon(newAura, this.props.tag.toLowerCase());\r\n    }\r\n\r\n    onChangeAuraPercent(e){\r\n        let newAuraEffect = e.target.value;\r\n        this.props.changeAuraPercentWeapon(newAuraEffect, this.props.tag.toLowerCase());\r\n    }\r\n\r\n    onChangeAuraFromSkills(e){\r\n        \r\n        \r\n        this.props.aurasFromSkills.forEach((auraMod) => {\r\n            \r\n\r\n            if (this.props.twohand !== true){\r\n                if(auraMod.key === this.props.tag){\r\n\r\n                    if(auraMod.key === this.props.tag){\r\n                        auraMod.active = !auraMod.active\r\n                    }\r\n                    \r\n                    if(this.props.isDisabled){\r\n                        auraMod.active = false;\r\n                    }\r\n                }\r\n            } else {\r\n                \r\n                if(auraMod.key === 'WEPTWO'){\r\n                   auraMod.active = !auraMod.active;\r\n                }\r\n            }\r\n            \r\n        });\r\n\r\n        this.props.changeAurasWithSkillMod();\r\n    }\r\n\r\n    aurasFromSkillIsActive(){\r\n        let isActive;\r\n        this.props.aurasFromSkills.forEach((auraMod) => {\r\n            if(auraMod.key === this.props.tag) isActive = auraMod.active;\r\n            \r\n            if(this.props.twohand && auraMod.key === 'WEPTWO' && auraMod.active) \r\n                isActive = auraMod.active;\r\n        });\r\n\r\n        return isActive;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{width: '48.4%'}} className='armours'>\r\n                <div style={this.props.isDisabled ? { opacity: '0.20', textDecoration: 'line-through'}: {}} className='armour'>\r\n\r\n                    <img src='img/cluster/notable.png' alt=''/>\r\n\r\n                    <span className='title'>{this.props.name}</span>\r\n                    <br/>\r\n                    <span className='title-corruption'>Aura Effect mod on Weapon</span>\r\n                    <div className='inputs'>\r\n                        <input defaultValue={this.props.gear[0]} onChange={this.onChangeAuraPercent.bind(this)} type='number' />\r\n                        <select defaultValue={this.props.gear[1]} onChange={this.onChangeAura.bind(this)}>\r\n                            <option value='0' >None</option>\r\n                            {this.props.auraSelectList.map((aura) => (\r\n                                <option value={aura[1]} >{aura[2]}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                        <br/>\r\n                    <label>\r\n                        <span className='title-corruption'>{`Auras from your skills grant ${this.twoHandActive()}% increased Damage to you and nearby allies`}</span>\r\n                        <div className='inputs'>\r\n                            <input onChange={this.onChangeAuraFromSkills.bind(this)} checked={this.aurasFromSkillIsActive()} style={{marginRight: '10px'}} type='checkbox' />\r\n                        </div>\r\n                    </label>\r\n                </div>\r\n            </div>   \r\n        )\r\n    }\r\n}\r\n\r\n//style={{width: '48.4%'}}","import React, { Component } from 'react'\r\n\r\nexport default class DisplayCluster extends Component {\r\n\r\n    onChangeCluster(e){\r\n        this.props.cluster.amount = e.target.value;\r\n\r\n        this.props.changeClusterAmount(e.target.value, this.props.indexCluster)\r\n        this.props.changeGlobalAuraEffect(this.props.changeGearSection(), 'cluster');\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='armours'>\r\n                <div className='armour'>\r\n\r\n                    <img src='img/cluster/notable.png' alt=''/>\r\n\r\n                    <span className='aura_title'>{this.props.cluster.name}</span>\r\n\r\n                    <div className='inputs'>\r\n                        <input onChange={this.onChangeCluster.bind(this)} defaultValue={this.props.cluster.amount} type='number' min='0' max='80'/>\r\n                    </div>\r\n                </div>          \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport DisplayCluster from './DisplayCluster';\r\n\r\n\r\n\r\nexport default class DisplayClusters extends Component {\r\n      \r\n    render() {\r\n        return this.props.clusters.map((cluster) => (\r\n                <DisplayCluster\r\n                    changeGearSection={this.props.changeGearSection}\r\n                    changeClusterAmount={this.props.changeClusterAmount}\r\n                    changeGlobalAuraEffect={this.props.changeGlobalAuraEffect}\r\n                    cluster={cluster}\r\n                    indexCluster={this.props.clusters.indexOf(cluster)}\r\n                />\r\n        ));\r\n    }\r\n}\r\n/* this.props.changeSpecificAuraEffect(cluster.auraEffect * cluster.amount, auraKey) */","import React, { Component } from 'react'\r\nimport DisplayArmour from './gearTabs/DisplayArmour';\r\nimport DisplayJewelry from './gearTabs/DisplayJewelry';\r\nimport DisplayWeapons from './gearTabs/DisplayWeapons';\r\nimport DisplayClusters from './clusterTabs/DisplayClusters';\r\n\r\nexport default class GearPage extends Component {\r\n\r\n    onChangeTwoHand(e){\r\n\r\n        this.props.gear.weapons.twohand = !this.props.gear.weapons.twohand;\r\n        this.props.changeTwoHand(this.props.gear.weapons.twohand)\r\n        \r\n        let indexWep1 = 4;\r\n        let indexWep2 = 5;\r\n        let indexTwohand = 6;\r\n        \r\n        if(this.props.gear.weapons.twohand){\r\n            this.props.aurasFromSkills[6].active = this.props.aurasFromSkills[4].active;\r\n            this.props.aurasFromSkills[5].active = false;\r\n            this.props.aurasFromSkills[4].active = false;\r\n        } else {\r\n            this.props.aurasFromSkills[4].active = this.props.aurasFromSkills[6].active;\r\n            this.props.aurasFromSkills[6].active = false;\r\n            this.props.aurasFromSkills[5].active = false;\r\n        }\r\n        this.props.changeAurasWithSkillMod();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='mainapp gem_grps'>\r\n                <h1>Aura effect from gear</h1>\r\n    \r\n                <div className='armour_grps'>\r\n                    <h2>Armours</h2>\r\n                    <DisplayArmour gear={this.props.gear.armour.helm} changeArmourGlobalEffect={this.props.changeArmourGlobalEffect} name='Helmet' tag='HELM'/>\r\n                    <DisplayArmour gear={this.props.gear.armour.body} changeArmourGlobalEffect={this.props.changeArmourGlobalEffect} name='Body Armour' tag='BODY' />\r\n                    <DisplayArmour gear={this.props.gear.armour.gloves} changeArmourGlobalEffect={this.props.changeArmourGlobalEffect} name='Gloves' tag='GLOVES' />\r\n                    <DisplayArmour gear={this.props.gear.armour.boots} changeArmourGlobalEffect={this.props.changeArmourGlobalEffect} name='Boots' tag='BOOTS' />\r\n                </div>\r\n                <div className='armour_grps'>\r\n                    <hr />\r\n                    <h2>Jewelry</h2>\r\n\r\n                    <DisplayJewelry changeJewelryNumber={this.props.changeJewelryNumber} \r\n                        changeCorruption={this.props.changeJewelryCorruption} gear={this.props.gear.jewelry.amulet} \r\n                        auraSelectList={this.props.auraSelectList} name='Amulet' tag='AMULET'\r\n                    />\r\n                    \r\n                    <DisplayJewelry changeJewelryNumber={this.props.changeJewelryNumber} \r\n                        changeCorruption={this.props.changeJewelryCorruption} gear={this.props.gear.jewelry.ring1} \r\n                        auraSelectList={this.props.auraSelectList} name='Ring 1' tag='RING1'\r\n                    />\r\n                    \r\n                    <DisplayJewelry changeJewelryNumber={this.props.changeJewelryNumber} \r\n                        changeCorruption={this.props.changeJewelryCorruption} gear={this.props.gear.jewelry.ring2} \r\n                        auraSelectList={this.props.auraSelectList} name='Ring 2' tag='RING2'\r\n                    />\r\n                    \r\n                    <DisplayJewelry changeJewelryNumber={this.props.changeJewelryNumber} \r\n                        changeCorruption={this.props.changeJewelryCorruption} gear={this.props.gear.jewelry.belt} \r\n                        auraSelectList={this.props.auraSelectList} name='Belt' tag='BELT'\r\n                    /> \r\n\r\n                </div>\r\n                <br />\r\n                <div className='armour_grps'>\r\n                    <hr />\r\n                    <h2>Weapons</h2> \r\n                    <h3><label style={{ paddingLeft: '5px', lineHeight: '35px', height: '35px', width: '180px'}} className='armours'>\r\n                        Two-Hand Weapon <input onChange={this.onChangeTwoHand.bind(this)} checked={this.props.gear.weapons.twohand} type='checkbox' />\r\n                    </label></h3><br />\r\n                    <DisplayWeapons \r\n                        gear={this.props.gear.weapons.weapon1} changeAurasWithSkillMod={this.props.changeAurasWithSkillMod}\r\n                        changeAuraWeapon={this.props.changeAuraWeapon} changeAuraPercentWeapon={this.props.changeAuraPercentWeapon} \r\n                        aurasFromSkills={this.props.aurasFromSkills} auraSelectList={this.props.auraSelectList} \r\n                        twohand={this.props.gear.weapons.twohand} name='Weapon 1' tag='WEAPON1'\r\n                        />\r\n\r\n                    <DisplayWeapons \r\n                        gear={this.props.gear.weapons.weapon2} changeAurasWithSkillMod={this.props.changeAurasWithSkillMod}\r\n                        changeAuraWeapon={this.props.changeAuraWeapon} changeAuraPercentWeapon={this.props.changeAuraPercentWeapon} \r\n                        aurasFromSkills={this.props.aurasFromSkills} auraSelectList={this.props.auraSelectList} \r\n                        isDisabled={this.props.gear.weapons.twohand} name='Weapon 2' tag='WEAPON2'\r\n                        />\r\n                </div>\r\n                <div className='armour_grps'>\r\n                    <hr />\r\n                    <h1>Clusters</h1>\r\n                     <DisplayClusters \r\n                        changeGearSection={this.props.changeGearSection}\r\n                        changeClusterAmount={this.props.changeClusterAmount}\r\n                        changeGlobalAuraEffect={this.props.changeGlobalAuraEffect}\r\n                        clusters={this.props.clusters}\r\n                />   </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class DisplayAura extends Component {\r\n\r\n\r\n    //onChange methodes for every diffrent type of change that can occure to an aura\r\n    onChangeLevel(e){\r\n\r\n        this.props.aura.level = e.target.value;\r\n        this.props.changeLevel(e.target.value, this.props.indexAura);\r\n    }\r\n\r\n    onChangeQuality(e){\r\n\r\n        this.props.aura.quality = e.target.value;\r\n        this.props.changeQuality(e.target.value, this.props.indexAura);\r\n    }\r\n\r\n    onChangeAltQuality(e){\r\n        \r\n        this.props.aura.altQuality = e.target.value;\r\n        this.props.changeAltQuality(e.target.value, this.props.indexAura);\r\n    }\r\n\r\n    onChangeGenoType(e){\r\n        this.props.aura.generosityType = e.target.value;\r\n        this.props.changeGenoType(e.target.value, this.props.indexAura);\r\n    }\r\n\r\n    onChangeGenoLevel(e){\r\n        this.props.aura.generosityLevel = e.target.value;\r\n        this.props.changeGenoLevel(e.target.value, this.props.indexAura);\r\n    }\r\n\r\n    //Not All Auras have 3 Alt Qualities\r\n    altQualityThree(altQualityBonuses){\r\n        \r\n        if(altQualityBonuses.length > 3)\r\n        return (<option value='3'>Phantas   </option>)\r\n        else return null;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <div className='auras'>\r\n                <div className='generosity'>\r\n                    <img src={\"img/aura/\"+ this.props.aura.key.toLowerCase() +\".png\"} alt=' '/>\r\n                    <span className='aura_title'>{this.props.aura.title}</span>\r\n                    \r\n                    <div className='inputs'>\r\n                    \r\n                    <img src='img/gem/generosity.png' alt='G'/>\r\n                \r\n                        <select onChange={this.onChangeGenoType.bind(this)} defaultValue={this.props.aura.generosityType}>\r\n                            <option value='0'>None</option>\r\n                            <option value='1'>Generosity</option>\r\n                            <option value='2'>Awakened</option>\r\n                        </select>\r\n\r\n                        <input onChange={this.onChangeGenoLevel.bind(this)} defaultValue={this.props.aura.generosityLevel} type='number' min='0' max='40' placeholder='Lvl' />\r\n                    </div>\r\n                </div>\r\n                <div className='aura'>\r\n                <img src={\"img/gem/\"+ this.props.aura.key.toLowerCase() +\".png\" }  alt=' '/>\r\n\r\n                    \r\n                    <div className='inputs'>\r\n                        <span className='details'>Lvl: </span>\r\n                        <input onChange={this.onChangeLevel.bind(this)}     defaultValue={this.props.aura.level} type='number' min='0' max='40'  placeholder='Lvl' />\r\n                        <span className='details'>Qual: </span>\r\n                        <input onChange={this.onChangeQuality.bind(this)} defaultValue={this.props.aura.quality} type='number' min='0' max='100' placeholder='Qlty' />\r\n                        <span className='details'>Alt: </span>\r\n                        <select onChange={this.onChangeAltQuality.bind(this)} defaultValue={this.props.aura.altQuality}>\r\n                            <option value='0'>  None      </option>\r\n                            <option value='1'>  Diverg    </option>\r\n                            <option value='2'>  Anom      </option>\r\n                            {this.altQualityThree(this.props.aura.effectOfQuality)}\r\n                        </select>\r\n                    </div>\r\n\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport DisplayAura from './DisplayAura';\r\n/*\r\n    Logic for displaying grid of all auras\r\n*/\r\n\r\n\r\n\r\nexport default class DisplayAuras extends Component {\r\n    \r\n    render() {\r\n        return this.props.auras.map((aura) => (\r\n            <DisplayAura \r\n\r\n                changeGenoType={this.props.changeGenoType}\r\n                changeGenoLevel={this.props.changeGenoLevel}\r\n                changeAltQuality={this.props.changeAltQuality} \r\n                changeQuality={this.props.changeQuality} \r\n                changeLevel={this.props.changeLevel} \r\n                aura={aura}\r\n                indexAura={this.props.auras.indexOf(aura)}\r\n            />\r\n         ));\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport DisplayAuras from './gemLinkTabs/DisplayAuras';\r\n\r\nexport default class GemPage extends Component {\r\n    onChangeGenoIcon(e){\r\n        console.log(this.genoIcon);\r\n        this.genoIcon = e.target.value;\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className='mainapp gem_grps'> \r\n                        <h1>Auras</h1>\r\n                        <DisplayAuras \r\n                            changeGenoType={this.props.changeGenoType}\r\n                            changeGenoLevel={this.props.changeGenoLevel}\r\n                            changeAltQuality={this.props.changeAltQuality} \r\n                            changeQuality={this.props.changeQuality} \r\n                            changeLevel={this.props.changeLevel} \r\n                            auras={this.props.auras}\r\n                        />      \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n/* backup\r\n<DisplayAuras changeAltQuality={this.props.changeAltQuality} changeQuality={this.props.changeQuality} changeLevel={this.props.changeLevel} auras={this.props.auras}/>\r\n\r\n<div className='mainapp gem_page'> \r\n                <div className='gem_btn_grp'>\r\n                    <button onClick={ this.handleChange.bind(this) } value='0'>Helmet</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='1'>Body</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='2'>Gloves</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='3'>Boots</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='4'>Ring 1</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='5'>Ring 2</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='6'>Weapon 1</button><div className='divider' />\r\n                    <button onClick={ this.handleChange.bind(this) } value='7'>Weapon 2</button><hr />\r\n                </div>\r\n                <div className='gem_grps'>\r\n                    {this.state.gemLinksPage.pages[this.state.gemLinksPage.pageSelected]}\r\n                </div>\r\n            </div>\r\n\r\n            */\r\n","import React, { Component } from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport NavBar from './compos/NavBar';\r\nimport OutputBox from './compos/OutputBox';\r\nimport AscendancyPage from './compos/pages/AscendancyPage';\r\nimport TreePage from './compos/pages/TreePage';\r\nimport GearPage from './compos/pages/GearPage';\r\nimport GemPage from './compos/pages/GemPage';\r\n\r\nimport './styles.css';\r\nvar auras = require('./auraStats').default;\r\nvar clusters = require('./clusterJewels').default;\r\nvar trees = require('./treePassives').default;\r\nvar aurasFromSkills = require('./aurasFromSkills').default;\r\n\r\nclass App extends Component {\r\n  state = {\r\n    auras,\r\n    clusters,\r\n    trees,\r\n    aurasFromSkills,\r\n\r\n    auraSelectListLoaded: false,\r\n    auraSelectList: [], // [id, key, title]\r\n\r\n    gear: {\r\n      armour:{\r\n        helm: 0,\r\n        body: 0,\r\n        gloves: 0,\r\n        boots: 0,\r\n        total: function() {return this.helm + this.body + this.gloves + this.boots}\r\n      },\r\n      jewelry:{\r\n        amulet: {corruption1: [0, 0], corruption2: [0, 0], },\r\n        ring1: {corruption1: [0, 0], corruption2: [0, 0], },\r\n        ring2: {corruption1: [0, 0], corruption2: [0, 0], },\r\n        belt: {corruption1: [0, 0], corruption2: [0, 0], },\r\n      },\r\n      weapons:{\r\n        weapon1: [0, 0],\r\n        weapon2: [0, 0],\r\n        twohand: false,\r\n      },\r\n      \r\n    },\r\n\r\n    auraEffect: {\r\n      asc: {\r\n        selected: 0,\r\n        options: [0, 10, 5],\r\n        total: function(){ return this.options[this.selected] }\r\n\r\n      },\r\n      tree: {\r\n        amount: 0,\r\n        timeless: 0,\r\n        total: function(){  return (Number(this.amount+this.timeless))}\r\n      },\r\n      cluster: {\r\n        amount: 0,\r\n      },\r\n      gear: {\r\n        amount: 0,\r\n        total: function(){return this.amount}\r\n      },\r\n      total: function(){\r\n        return this.asc.total() + this.tree.total() + this.cluster.amount + this.gear.total();\r\n      }\r\n    }\r\n  }\r\n\r\n  generateAuraSelectList = function(){\r\n\r\n\r\n    let selectMenuList = [];\r\n    \r\n    for (let i = 0; i < auras.length; i++){\r\n        \r\n        selectMenuList.push([i, auras[i].key, auras[i].title])\r\n    }\r\n    return selectMenuList;\r\n}\r\n\r\n  changeLevel(newLevel, auraIndex){\r\n\r\n    let newAuraState = [...this.state.auras];\r\n    newAuraState[auraIndex].level = Number(newLevel);\r\n    this.setState({ auras: newAuraState });\r\n\r\n  }\r\n\r\n  changeQuality(newQuality, auraIndex){\r\n    let newAuraState = [...this.state.auras];\r\n    newAuraState[auraIndex].quality = Number(newQuality);\r\n    this.setState({ auras: newAuraState });\r\n  }\r\n\r\n  changeAltQuality(newAltQuality, auraIndex){\r\n\r\n    let newAuraState = [...this.state.auras];\r\n    newAuraState[auraIndex].altQuality = Number(newAltQuality);\r\n    this.setState({ auras: newAuraState });\r\n  }\r\n\r\n  changeGenoLevel(newGenoLevel, auraIndex){\r\n\r\n    let newAuraState = [...this.state.auras];\r\n    newAuraState[auraIndex].generosityLevel = Number(newGenoLevel);\r\n    this.setState({ auras: newAuraState });\r\n  }\r\n\r\n  changeGenoType(newGenoType, auraIndex){\r\n\r\n    let newAuraState = [...this.state.auras];\r\n    newAuraState[auraIndex].generosityType = Number(newGenoType);\r\n    this.setState({ auras: newAuraState });\r\n  }\r\n\r\n   changeSpecificAuraEffect(auraEffectPerKey){\r\n\r\n    let newAuraStat = [...this.state.auras];\r\n\r\n    newAuraStat.forEach((aura) => {aura.specificAuraEffect = 0});\r\n    \r\n    \r\n    auraEffectPerKey.forEach((auras) => {\r\n      let auraIndex = this.findAuraIndex(auras[0]);\r\n      if(auraIndex !== null){\r\n        newAuraStat[auraIndex].specificAuraEffect = Number(auras[1]);\r\n      }\r\n    });\r\n\r\n\r\n    this.setState({ auras: newAuraStat });\r\n\r\n   }\r\n\r\n   changeGearSection(){\r\n\r\n    let tempArray = [];\r\n    let tempGear = this.state.gear.jewelry;\r\n\r\n    Object.keys(tempGear).forEach((piece) => {\r\n      Object.keys(tempGear[piece]).forEach((corruption) => {\r\n        if (tempGear[piece][corruption][0] !== 0 && tempGear[piece][corruption][1] !== 0){\r\n          tempArray.push([tempGear[piece][corruption][1], Number(tempGear[piece][corruption][0])])\r\n        }\r\n      })\r\n    });\r\n\r\n\r\n \r\n\r\n    if(this.state.gear.weapons.weapon1 !== 0 && this.state.gear.weapons.weapon1 !== 0){\r\n      tempArray.push([this.state.gear.weapons.weapon1[1], this.state.gear.weapons.weapon1[0]]);\r\n    }\r\n\r\n    if(!this.state.gear.weapons.twohand && \r\n        this.state.gear.weapons.weapon1 !== 0 && \r\n          this.state.gear.weapons.weapon1 !== 0){\r\n\r\n      tempArray.push([this.state.gear.weapons.weapon2[1], this.state.gear.weapons.weapon2[0]]);\r\n    }\r\n\r\n  \r\n  \r\n\r\n    let globalAuraEffect = 0;\r\n    clusters.forEach(cluster => {\r\n      if (cluster.affects !== undefined){\r\n        if ( cluster.affects.length === 0 ){\r\n          globalAuraEffect += (cluster.auraEffect * cluster.amount);\r\n        } else {\r\n          if (cluster.auraEffect.length === undefined){\r\n           \r\n            cluster.affects.forEach((auraKey) => {\r\n              tempArray.push([auraKey, (cluster.auraEffect * cluster.amount)])\r\n             })\r\n\r\n          } else {\r\n\r\n            for (let i = 0; i < cluster.affects.length; i++){\r\n              cluster.affects[i].forEach((auraKey) => {\r\n                tempArray.push([auraKey, (cluster.auraEffect[i] * cluster.amount)])  \r\n            })\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    let reduced = [];\r\n    for (let i = 0; i < tempArray.length; i++){\r\n\r\n      let uniqueKey = tempArray[i][0];\r\n      let found = false;\r\n\r\n      for (let j = 0; j < reduced.length; j++){\r\n          if (reduced[j][0] === uniqueKey){\r\n            reduced[j][1] += tempArray[i][1];\r\n            found = true;\r\n            break;\r\n          }\r\n      }\r\n\r\n      if(!found){\r\n        reduced.push(tempArray[i]);\r\n      } \r\n    }\r\n    this.changeSpecificAuraEffect(reduced);\r\n    return globalAuraEffect;\r\n   }\r\n\r\n\r\n   changeGlobalAuraEffect(newAuraEffect, page){\r\n\r\n    this.setState({auraEffect: {...this.state.auraEffect, [page]: {...this.state.auraEffect[page], amount: Number(newAuraEffect)}}});\r\n   }\r\n\r\n\r\n   changeClusterAmount(newAmount, clusterIndex){\r\n\r\n    let newClusterStats = [...this.state.clusters];\r\n    \r\n    newClusterStats[clusterIndex].amount = Number(newAmount);\r\n    this.setState({clusters: newClusterStats});\r\n   }\r\n\r\n\r\n   findAuraIndex(auraKey){\r\n    let index = null;\r\n    auras.forEach((aura) => {\r\n\r\n      if(aura.key === auraKey){\r\n        index = auras.indexOf(aura);\r\n      }\r\n    })\r\n    return index;\r\n   }\r\n   \r\n\r\n   changeTreeNodes(){\r\n\r\n    let newTreeStats = [...this.state.trees];\r\n    //let index = trees.indexOf(tree);\r\n    let newAuraEffect = 0;\r\n\r\n    newTreeStats.forEach((cluster) => {\r\n      \r\n      newAuraEffect += cluster.clusterAuraEffect();\r\n    })\r\n\r\n    this.setState({trees: newTreeStats});\r\n    this.changeGlobalAuraEffect(newAuraEffect, 'tree')\r\n    \r\n   }\r\n\r\n\r\n   changeTimeless(newAuraEffect){\r\n\r\n    this.setState({auraEffect: {...this.state.auraEffect, tree: {...this.state.auraEffect.tree, timeless: Number(newAuraEffect)}}});\r\n   }\r\n\r\n\r\n   changeJewelryCorruption(newValue, jewelry, corruption){\r\n\r\n    corruption = 'corruption'+corruption;\r\n\r\n    let newstate = this.state.gear;\r\n    let newArray = newstate.jewelry[jewelry][corruption]\r\n    newArray[1] = newValue;\r\n\r\n    newstate.jewelry[jewelry][corruption] = Object.values(newArray);\r\n   \r\n\r\n    this.setState({ gear: newstate });\r\n\r\n    this.changeGearSection();\r\n   }\r\n\r\n   changeJewelryNumber(newValue, jewelry, corruption){\r\n\r\n    corruption = 'corruption'+corruption;\r\n\r\n    let newstate = this.state.gear;\r\n    let newArray = newstate.jewelry[jewelry][corruption]\r\n    newArray[0] = Number(newValue)\r\n\r\n    newstate.jewelry[jewelry][corruption] = Object.values(newArray);\r\n   \r\n    this.setState({ gear: newstate });\r\n\r\n    this.changeGearSection();\r\n   }\r\n\r\n   changeArmourGlobalEffect(newValue, armour){\r\n\r\n    let newState = this.state.gear;\r\n    newState.armour[armour] = newValue;\r\n    this.setState({gear: newState});\r\n\r\n    newState = this.state.auraEffect;\r\n    newState.gear.amount = this.state.gear.armour.total();\r\n    this.setState({auraEffect: newState}); \r\n\r\n   }\r\n\r\n   changeTwoHand(newBoolean){\r\n    let newState = this.state.gear;\r\n\r\n    newState.weapons.twohand = newBoolean\r\n    console.log(newBoolean)\r\n    this.setState({gear: newState});\r\n   }\r\n\r\n   changeAuraPercentWeapon(newValue, whichWeapon){\r\n\r\n    let newstate = this.state.gear;\r\n    let newArray = newstate.weapons[whichWeapon]\r\n    newArray[0] = Number(newValue);\r\n\r\n    newstate.weapons[whichWeapon] = Object.values(newArray);\r\n   \r\n\r\n    this.setState({ gear: newstate });\r\n\r\n    this.changeGearSection();\r\n   }\r\n\r\n   changeAuraWeapon(newValue, whichWeapon){\r\n    console.log('hi')\r\n    let newstate = this.state.gear;\r\n    let newArray = newstate.weapons[whichWeapon]\r\n    newArray[1] = newValue;\r\n\r\n    newstate.weapons[whichWeapon] = Object.values(newArray);\r\n\r\n    this.setState({ gear: newstate });\r\n\r\n\r\n    this.changeGearSection();\r\n   }\r\n\r\n   changeAurasWithSkillMod(){\r\n\r\n    this.setState({aurasFromSkills: aurasFromSkills});\r\n\r\n   }\r\n\r\n  render() {\r\n      if(!this.state.auraSelectListLoaded){\r\n          this.setState({auraSelectList: this.generateAuraSelectList()});\r\n          this.setState({auraSelectListLoaded: true});\r\n      }\r\n\r\n      return ( \r\n        <section className=\"app\">\r\n          <div className='header'>\r\n            <h1>Nuk's PoE Aura stats calculator</h1>\r\n            <p>- Under Construction</p>\r\n          </div>\r\n          \r\n          <Router>\r\n            <NavBar />\r\n          <div className=\"content\">\r\n\r\n                <div className='page main'>\r\n                  <Switch>\r\n                    <Route path='/aurastatcalc/' exact\r\n\r\n                      render = {(props) => (\r\n                        <AscendancyPage {...props} auras={auras} />\r\n                      )}\r\n                    />\r\n\r\n                    <Route path='/aurastatcalc/tree'\r\n                    \r\n                      render = {(props) => (\r\n                        <TreePage {...props} \r\n\r\n                        changeTimeless={this.changeTimeless.bind(this)}\r\n                        changeTreeNodes={this.changeTreeNodes.bind(this)}\r\n                          auras={auras} \r\n                          timeless={this.state.auraEffect.tree.timeless}\r\n                          trees={trees}\r\n                        />\r\n                      )}\r\n                    />\r\n                    \r\n                    <Route path='/aurastatcalc/gear'\r\n                      \r\n                      render = {(props) => (\r\n                        <GearPage {...props} \r\n\r\n                          changeAurasWithSkillMod={this.changeAurasWithSkillMod.bind(this)}\r\n                          changeAuraPercentWeapon={this.changeAuraPercentWeapon.bind(this)}\r\n                          changeAuraWeapon={this.changeAuraWeapon.bind(this)}\r\n                          changeTwoHand={this.changeTwoHand.bind(this)}\r\n                          changeArmourGlobalEffect={this.changeArmourGlobalEffect.bind(this)}\r\n                          changeJewelryNumber={this.changeJewelryNumber.bind(this)}\r\n                          changeGearSection={this.changeGearSection.bind(this)}\r\n                          changeClusterAmount={this.changeClusterAmount.bind(this)}\r\n                          changeGlobalAuraEffect={this.changeGlobalAuraEffect.bind(this)}\r\n                          changeSpecificAuraEffect={this.changeSpecificAuraEffect.bind(this)}\r\n                          clusters={clusters}\r\n                          auras={auras} \r\n                          aurasFromSkills={aurasFromSkills}\r\n                          gear={this.state.gear}\r\n                          auraSelectList={this.state.auraSelectList}\r\n                          changeJewelryCorruption={this.changeJewelryCorruption.bind(this)}\r\n                          />\r\n                          \r\n                      )}\r\n                    />\r\n\r\n                    <Route path='/aurastatcalc/auras'\r\n                      \r\n                      render = {(props) => (\r\n                        <GemPage {...props} \r\n                          changeGenoType={this.changeGenoType.bind(this)}\r\n                          changeGenoLevel={this.changeGenoLevel.bind(this)}\r\n                          changeAltQuality={this.changeAltQuality.bind(this)} \r\n                          changeQuality={this.changeQuality.bind(this)} \r\n                          changeLevel={this.changeLevel.bind(this)} \r\n                          auras={auras} \r\n                       />\r\n                      )}\r\n                    />\r\n            \r\n                  </Switch> \r\n                </div>\r\n              \r\n            <OutputBox aurasFromSkills={this.state.aurasFromSkills} clusters={this.state.clusters} auras={this.state.auras} globalAuraEffect={this.state.auraEffect.total()} />\r\n          </div>\r\n          </Router>\r\n        </section>\r\n    );\r\n  }\r\n}\r\n \r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}